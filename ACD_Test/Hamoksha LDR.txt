
/* Lib */
#include "STD_TYPES.h"
#include "BIT_MATH.h"
#define F_CPU 8000000UL
#include<util/delay.h>
/* MCAL */
#include "DIO_interface.h"
#include "ADC_interface.h"

/* HAL */
#include "LCD_interface.h"



int main(void)
{
	u16 Local_u16DigitalValue,Local_u16AnalogValue;


	  u8 HamokshaSleep1[8]={0b00000000,
			                0b00000000,
						    0b00000000,
						    0b00001110,
						    0b00001111,
						    0b00001110,
						    0b00000000,
						    0b00000000};

	  u8 HamokshaSleep2[8]={0b00000000,
			                0b00000000,
						    0b00000100,
						    0b00000100,
						    0b00011111,
						    0b00000100,
						    0b00000100,
						    0b00000000};

	  u8 HamokshaSleep3[8]={0b00000000,
			                0b00000000,
						    0b00000010,
						    0b00000100,
						    0b00011000,
						    0b00000100,
						    0b00000010,
						    0b00000000};

	  u8 HamokshaWake1[8]= {0b00000000,
			                0b00000000,
						    0b00001110,
						    0b00001110,
						    0b00001110,
						    0b00000100,
						    0b00000100,
						    0b00000100};

	  u8 HamokshaWake2[8]= {0b00011111,
			                0b00000100,
						    0b00000100,
						    0b00000100,
						    0b00000100,
						    0b00001010,
						    0b00010001,
						    0b00000000};

		DIO_u8Init();
		LCD_voidInit();
		ADC_voidInit();
		LCD_voidCursorBlinkerOff();


//1425mv light

//4980mv Dark
		while(1)
		{
			LCD_voidClear();
			/* Read Analog Signal */
	  ADC_u8GetDigitalValueSunchNonBlocking(ADC_u8_CHANNEL_2,&Local_u16DigitalValue);
	  Local_u16AnalogValue = (u16)((Local_u16DigitalValue * 5000UL) /1024);

	  if(Local_u16AnalogValue < 1200)
	  {
	  LCD_u8_GoTo_XY(0,1);
	  LCD_voidWriteString("Good Night");
	  LCD_voidSendSpecialChar(0,1,6,HamokshaSleep1);
	  LCD_voidSendSpecialChar(1,1,7,HamokshaSleep2);
	  LCD_voidSendSpecialChar(2,1,8,HamokshaSleep3);
	  }
	  else
	  {
		  LCD_u8_GoTo_XY(0,1);
		  LCD_voidWriteString("Good Morning");
		  LCD_voidSendSpecialChar(3,0,14,HamokshaWake1);
		  LCD_voidSendSpecialChar(4,1,14,HamokshaWake2);
	  }
	  _delay_ms(1000);
		}





return 0;
}
