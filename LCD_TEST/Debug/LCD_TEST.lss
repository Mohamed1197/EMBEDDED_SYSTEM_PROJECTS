
LCD_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004160  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000084  00800060  00004160  000041d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002928  00000000  00000000  00004258  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000ca5  00000000  00000000  00006b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00007825  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000018f  00000000  00000000  00007985  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002045  00000000  00000000  00007b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001101  00000000  00000000  00009b59  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f82  00000000  00000000  0000ac5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  0000bbdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c2  00000000  00000000  0000bd5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000088e  00000000  00000000  0000c01e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000c8ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e6       	ldi	r30, 0x60	; 96
      68:	f1 e4       	ldi	r31, 0x41	; 65
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 3e       	cpi	r26, 0xE4	; 228
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 bd 13 	call	0x277a	; 0x277a <main>
      7a:	0c 94 ae 20 	jmp	0x415c	; 0x415c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 77 20 	jmp	0x40ee	; 0x40ee <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a4 e9       	ldi	r26, 0x94	; 148
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 93 20 	jmp	0x4126	; 0x4126 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 83 20 	jmp	0x4106	; 0x4106 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 9f 20 	jmp	0x413e	; 0x413e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 83 20 	jmp	0x4106	; 0x4106 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 9f 20 	jmp	0x413e	; 0x413e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 77 20 	jmp	0x40ee	; 0x40ee <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	84 e9       	ldi	r24, 0x94	; 148
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 93 20 	jmp	0x4126	; 0x4126 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 7f 20 	jmp	0x40fe	; 0x40fe <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	64 e9       	ldi	r22, 0x94	; 148
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 9b 20 	jmp	0x4136	; 0x4136 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 83 20 	jmp	0x4106	; 0x4106 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 9f 20 	jmp	0x413e	; 0x413e <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 83 20 	jmp	0x4106	; 0x4106 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 9f 20 	jmp	0x413e	; 0x413e <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 83 20 	jmp	0x4106	; 0x4106 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 9f 20 	jmp	0x413e	; 0x413e <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 87 20 	jmp	0x410e	; 0x410e <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 a3 20 	jmp	0x4146	; 0x4146 <__epilogue_restores__+0x20>

00000942 <__pack_f>:
     942:	df 92       	push	r13
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	fc 01       	movw	r30, r24
     94e:	e4 80       	ldd	r14, Z+4	; 0x04
     950:	f5 80       	ldd	r15, Z+5	; 0x05
     952:	06 81       	ldd	r16, Z+6	; 0x06
     954:	17 81       	ldd	r17, Z+7	; 0x07
     956:	d1 80       	ldd	r13, Z+1	; 0x01
     958:	80 81       	ld	r24, Z
     95a:	82 30       	cpi	r24, 0x02	; 2
     95c:	48 f4       	brcc	.+18     	; 0x970 <__pack_f+0x2e>
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	a0 e1       	ldi	r26, 0x10	; 16
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	e8 2a       	or	r14, r24
     968:	f9 2a       	or	r15, r25
     96a:	0a 2b       	or	r16, r26
     96c:	1b 2b       	or	r17, r27
     96e:	a5 c0       	rjmp	.+330    	; 0xaba <__pack_f+0x178>
     970:	84 30       	cpi	r24, 0x04	; 4
     972:	09 f4       	brne	.+2      	; 0x976 <__pack_f+0x34>
     974:	9f c0       	rjmp	.+318    	; 0xab4 <__pack_f+0x172>
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	21 f4       	brne	.+8      	; 0x982 <__pack_f+0x40>
     97a:	ee 24       	eor	r14, r14
     97c:	ff 24       	eor	r15, r15
     97e:	87 01       	movw	r16, r14
     980:	05 c0       	rjmp	.+10     	; 0x98c <__pack_f+0x4a>
     982:	e1 14       	cp	r14, r1
     984:	f1 04       	cpc	r15, r1
     986:	01 05       	cpc	r16, r1
     988:	11 05       	cpc	r17, r1
     98a:	19 f4       	brne	.+6      	; 0x992 <__pack_f+0x50>
     98c:	e0 e0       	ldi	r30, 0x00	; 0
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	96 c0       	rjmp	.+300    	; 0xabe <__pack_f+0x17c>
     992:	62 81       	ldd	r22, Z+2	; 0x02
     994:	73 81       	ldd	r23, Z+3	; 0x03
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	62 38       	cpi	r22, 0x82	; 130
     99a:	79 07       	cpc	r23, r25
     99c:	0c f0       	brlt	.+2      	; 0x9a0 <__pack_f+0x5e>
     99e:	5b c0       	rjmp	.+182    	; 0xa56 <__pack_f+0x114>
     9a0:	22 e8       	ldi	r18, 0x82	; 130
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	26 1b       	sub	r18, r22
     9a6:	37 0b       	sbc	r19, r23
     9a8:	2a 31       	cpi	r18, 0x1A	; 26
     9aa:	31 05       	cpc	r19, r1
     9ac:	2c f0       	brlt	.+10     	; 0x9b8 <__pack_f+0x76>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	2a c0       	rjmp	.+84     	; 0xa0c <__pack_f+0xca>
     9b8:	b8 01       	movw	r22, r16
     9ba:	a7 01       	movw	r20, r14
     9bc:	02 2e       	mov	r0, r18
     9be:	04 c0       	rjmp	.+8      	; 0x9c8 <__pack_f+0x86>
     9c0:	76 95       	lsr	r23
     9c2:	67 95       	ror	r22
     9c4:	57 95       	ror	r21
     9c6:	47 95       	ror	r20
     9c8:	0a 94       	dec	r0
     9ca:	d2 f7       	brpl	.-12     	; 0x9c0 <__pack_f+0x7e>
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__pack_f+0x9c>
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	aa 1f       	adc	r26, r26
     9dc:	bb 1f       	adc	r27, r27
     9de:	2a 95       	dec	r18
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__pack_f+0x94>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	a1 09       	sbc	r26, r1
     9e6:	b1 09       	sbc	r27, r1
     9e8:	8e 21       	and	r24, r14
     9ea:	9f 21       	and	r25, r15
     9ec:	a0 23       	and	r26, r16
     9ee:	b1 23       	and	r27, r17
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__pack_f+0xbe>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	9a 01       	movw	r18, r20
     a02:	ab 01       	movw	r20, r22
     a04:	28 2b       	or	r18, r24
     a06:	39 2b       	or	r19, r25
     a08:	4a 2b       	or	r20, r26
     a0a:	5b 2b       	or	r21, r27
     a0c:	da 01       	movw	r26, r20
     a0e:	c9 01       	movw	r24, r18
     a10:	8f 77       	andi	r24, 0x7F	; 127
     a12:	90 70       	andi	r25, 0x00	; 0
     a14:	a0 70       	andi	r26, 0x00	; 0
     a16:	b0 70       	andi	r27, 0x00	; 0
     a18:	80 34       	cpi	r24, 0x40	; 64
     a1a:	91 05       	cpc	r25, r1
     a1c:	a1 05       	cpc	r26, r1
     a1e:	b1 05       	cpc	r27, r1
     a20:	39 f4       	brne	.+14     	; 0xa30 <__pack_f+0xee>
     a22:	27 ff       	sbrs	r18, 7
     a24:	09 c0       	rjmp	.+18     	; 0xa38 <__pack_f+0xf6>
     a26:	20 5c       	subi	r18, 0xC0	; 192
     a28:	3f 4f       	sbci	r19, 0xFF	; 255
     a2a:	4f 4f       	sbci	r20, 0xFF	; 255
     a2c:	5f 4f       	sbci	r21, 0xFF	; 255
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <__pack_f+0xf6>
     a30:	21 5c       	subi	r18, 0xC1	; 193
     a32:	3f 4f       	sbci	r19, 0xFF	; 255
     a34:	4f 4f       	sbci	r20, 0xFF	; 255
     a36:	5f 4f       	sbci	r21, 0xFF	; 255
     a38:	e0 e0       	ldi	r30, 0x00	; 0
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	20 30       	cpi	r18, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	3a 07       	cpc	r19, r26
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	4a 07       	cpc	r20, r26
     a46:	a0 e4       	ldi	r26, 0x40	; 64
     a48:	5a 07       	cpc	r21, r26
     a4a:	10 f0       	brcs	.+4      	; 0xa50 <__pack_f+0x10e>
     a4c:	e1 e0       	ldi	r30, 0x01	; 1
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	79 01       	movw	r14, r18
     a52:	8a 01       	movw	r16, r20
     a54:	27 c0       	rjmp	.+78     	; 0xaa4 <__pack_f+0x162>
     a56:	60 38       	cpi	r22, 0x80	; 128
     a58:	71 05       	cpc	r23, r1
     a5a:	64 f5       	brge	.+88     	; 0xab4 <__pack_f+0x172>
     a5c:	fb 01       	movw	r30, r22
     a5e:	e1 58       	subi	r30, 0x81	; 129
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	d8 01       	movw	r26, r16
     a64:	c7 01       	movw	r24, r14
     a66:	8f 77       	andi	r24, 0x7F	; 127
     a68:	90 70       	andi	r25, 0x00	; 0
     a6a:	a0 70       	andi	r26, 0x00	; 0
     a6c:	b0 70       	andi	r27, 0x00	; 0
     a6e:	80 34       	cpi	r24, 0x40	; 64
     a70:	91 05       	cpc	r25, r1
     a72:	a1 05       	cpc	r26, r1
     a74:	b1 05       	cpc	r27, r1
     a76:	39 f4       	brne	.+14     	; 0xa86 <__pack_f+0x144>
     a78:	e7 fe       	sbrs	r14, 7
     a7a:	0d c0       	rjmp	.+26     	; 0xa96 <__pack_f+0x154>
     a7c:	80 e4       	ldi	r24, 0x40	; 64
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	a0 e0       	ldi	r26, 0x00	; 0
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__pack_f+0x14c>
     a86:	8f e3       	ldi	r24, 0x3F	; 63
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	e8 0e       	add	r14, r24
     a90:	f9 1e       	adc	r15, r25
     a92:	0a 1f       	adc	r16, r26
     a94:	1b 1f       	adc	r17, r27
     a96:	17 ff       	sbrs	r17, 7
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__pack_f+0x162>
     a9a:	16 95       	lsr	r17
     a9c:	07 95       	ror	r16
     a9e:	f7 94       	ror	r15
     aa0:	e7 94       	ror	r14
     aa2:	31 96       	adiw	r30, 0x01	; 1
     aa4:	87 e0       	ldi	r24, 0x07	; 7
     aa6:	16 95       	lsr	r17
     aa8:	07 95       	ror	r16
     aaa:	f7 94       	ror	r15
     aac:	e7 94       	ror	r14
     aae:	8a 95       	dec	r24
     ab0:	d1 f7       	brne	.-12     	; 0xaa6 <__pack_f+0x164>
     ab2:	05 c0       	rjmp	.+10     	; 0xabe <__pack_f+0x17c>
     ab4:	ee 24       	eor	r14, r14
     ab6:	ff 24       	eor	r15, r15
     ab8:	87 01       	movw	r16, r14
     aba:	ef ef       	ldi	r30, 0xFF	; 255
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	6e 2f       	mov	r22, r30
     ac0:	67 95       	ror	r22
     ac2:	66 27       	eor	r22, r22
     ac4:	67 95       	ror	r22
     ac6:	90 2f       	mov	r25, r16
     ac8:	9f 77       	andi	r25, 0x7F	; 127
     aca:	d7 94       	ror	r13
     acc:	dd 24       	eor	r13, r13
     ace:	d7 94       	ror	r13
     ad0:	8e 2f       	mov	r24, r30
     ad2:	86 95       	lsr	r24
     ad4:	49 2f       	mov	r20, r25
     ad6:	46 2b       	or	r20, r22
     ad8:	58 2f       	mov	r21, r24
     ada:	5d 29       	or	r21, r13
     adc:	b7 01       	movw	r22, r14
     ade:	ca 01       	movw	r24, r20
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	08 95       	ret

00000aec <__unpack_f>:
     aec:	fc 01       	movw	r30, r24
     aee:	db 01       	movw	r26, r22
     af0:	40 81       	ld	r20, Z
     af2:	51 81       	ldd	r21, Z+1	; 0x01
     af4:	22 81       	ldd	r18, Z+2	; 0x02
     af6:	62 2f       	mov	r22, r18
     af8:	6f 77       	andi	r22, 0x7F	; 127
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	22 1f       	adc	r18, r18
     afe:	22 27       	eor	r18, r18
     b00:	22 1f       	adc	r18, r18
     b02:	93 81       	ldd	r25, Z+3	; 0x03
     b04:	89 2f       	mov	r24, r25
     b06:	88 0f       	add	r24, r24
     b08:	82 2b       	or	r24, r18
     b0a:	28 2f       	mov	r18, r24
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	99 1f       	adc	r25, r25
     b10:	99 27       	eor	r25, r25
     b12:	99 1f       	adc	r25, r25
     b14:	11 96       	adiw	r26, 0x01	; 1
     b16:	9c 93       	st	X, r25
     b18:	11 97       	sbiw	r26, 0x01	; 1
     b1a:	21 15       	cp	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	a9 f5       	brne	.+106    	; 0xb8a <__unpack_f+0x9e>
     b20:	41 15       	cp	r20, r1
     b22:	51 05       	cpc	r21, r1
     b24:	61 05       	cpc	r22, r1
     b26:	71 05       	cpc	r23, r1
     b28:	11 f4       	brne	.+4      	; 0xb2e <__unpack_f+0x42>
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	37 c0       	rjmp	.+110    	; 0xb9c <__unpack_f+0xb0>
     b2e:	82 e8       	ldi	r24, 0x82	; 130
     b30:	9f ef       	ldi	r25, 0xFF	; 255
     b32:	13 96       	adiw	r26, 0x03	; 3
     b34:	9c 93       	st	X, r25
     b36:	8e 93       	st	-X, r24
     b38:	12 97       	sbiw	r26, 0x02	; 2
     b3a:	9a 01       	movw	r18, r20
     b3c:	ab 01       	movw	r20, r22
     b3e:	67 e0       	ldi	r22, 0x07	; 7
     b40:	22 0f       	add	r18, r18
     b42:	33 1f       	adc	r19, r19
     b44:	44 1f       	adc	r20, r20
     b46:	55 1f       	adc	r21, r21
     b48:	6a 95       	dec	r22
     b4a:	d1 f7       	brne	.-12     	; 0xb40 <__unpack_f+0x54>
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	8c 93       	st	X, r24
     b50:	0d c0       	rjmp	.+26     	; 0xb6c <__unpack_f+0x80>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	44 1f       	adc	r20, r20
     b58:	55 1f       	adc	r21, r21
     b5a:	12 96       	adiw	r26, 0x02	; 2
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	13 97       	sbiw	r26, 0x03	; 3
     b62:	01 97       	sbiw	r24, 0x01	; 1
     b64:	13 96       	adiw	r26, 0x03	; 3
     b66:	9c 93       	st	X, r25
     b68:	8e 93       	st	-X, r24
     b6a:	12 97       	sbiw	r26, 0x02	; 2
     b6c:	20 30       	cpi	r18, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	38 07       	cpc	r19, r24
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	48 07       	cpc	r20, r24
     b76:	80 e4       	ldi	r24, 0x40	; 64
     b78:	58 07       	cpc	r21, r24
     b7a:	58 f3       	brcs	.-42     	; 0xb52 <__unpack_f+0x66>
     b7c:	14 96       	adiw	r26, 0x04	; 4
     b7e:	2d 93       	st	X+, r18
     b80:	3d 93       	st	X+, r19
     b82:	4d 93       	st	X+, r20
     b84:	5c 93       	st	X, r21
     b86:	17 97       	sbiw	r26, 0x07	; 7
     b88:	08 95       	ret
     b8a:	2f 3f       	cpi	r18, 0xFF	; 255
     b8c:	31 05       	cpc	r19, r1
     b8e:	79 f4       	brne	.+30     	; 0xbae <__unpack_f+0xc2>
     b90:	41 15       	cp	r20, r1
     b92:	51 05       	cpc	r21, r1
     b94:	61 05       	cpc	r22, r1
     b96:	71 05       	cpc	r23, r1
     b98:	19 f4       	brne	.+6      	; 0xba0 <__unpack_f+0xb4>
     b9a:	84 e0       	ldi	r24, 0x04	; 4
     b9c:	8c 93       	st	X, r24
     b9e:	08 95       	ret
     ba0:	64 ff       	sbrs	r22, 4
     ba2:	03 c0       	rjmp	.+6      	; 0xbaa <__unpack_f+0xbe>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	8c 93       	st	X, r24
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <__unpack_f+0xe2>
     baa:	1c 92       	st	X, r1
     bac:	10 c0       	rjmp	.+32     	; 0xbce <__unpack_f+0xe2>
     bae:	2f 57       	subi	r18, 0x7F	; 127
     bb0:	30 40       	sbci	r19, 0x00	; 0
     bb2:	13 96       	adiw	r26, 0x03	; 3
     bb4:	3c 93       	st	X, r19
     bb6:	2e 93       	st	-X, r18
     bb8:	12 97       	sbiw	r26, 0x02	; 2
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	8c 93       	st	X, r24
     bbe:	87 e0       	ldi	r24, 0x07	; 7
     bc0:	44 0f       	add	r20, r20
     bc2:	55 1f       	adc	r21, r21
     bc4:	66 1f       	adc	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	8a 95       	dec	r24
     bca:	d1 f7       	brne	.-12     	; 0xbc0 <__unpack_f+0xd4>
     bcc:	70 64       	ori	r23, 0x40	; 64
     bce:	14 96       	adiw	r26, 0x04	; 4
     bd0:	4d 93       	st	X+, r20
     bd2:	5d 93       	st	X+, r21
     bd4:	6d 93       	st	X+, r22
     bd6:	7c 93       	st	X, r23
     bd8:	17 97       	sbiw	r26, 0x07	; 7
     bda:	08 95       	ret

00000bdc <__fpcmp_parts_f>:
     bdc:	1f 93       	push	r17
     bde:	dc 01       	movw	r26, r24
     be0:	fb 01       	movw	r30, r22
     be2:	9c 91       	ld	r25, X
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	08 f4       	brcc	.+2      	; 0xbea <__fpcmp_parts_f+0xe>
     be8:	47 c0       	rjmp	.+142    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bea:	80 81       	ld	r24, Z
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	08 f4       	brcc	.+2      	; 0xbf2 <__fpcmp_parts_f+0x16>
     bf0:	43 c0       	rjmp	.+134    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bf2:	94 30       	cpi	r25, 0x04	; 4
     bf4:	51 f4       	brne	.+20     	; 0xc0a <__fpcmp_parts_f+0x2e>
     bf6:	11 96       	adiw	r26, 0x01	; 1
     bf8:	1c 91       	ld	r17, X
     bfa:	84 30       	cpi	r24, 0x04	; 4
     bfc:	99 f5       	brne	.+102    	; 0xc64 <__fpcmp_parts_f+0x88>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	68 2f       	mov	r22, r24
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	61 1b       	sub	r22, r17
     c06:	71 09       	sbc	r23, r1
     c08:	3f c0       	rjmp	.+126    	; 0xc88 <__fpcmp_parts_f+0xac>
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	21 f0       	breq	.+8      	; 0xc16 <__fpcmp_parts_f+0x3a>
     c0e:	92 30       	cpi	r25, 0x02	; 2
     c10:	31 f4       	brne	.+12     	; 0xc1e <__fpcmp_parts_f+0x42>
     c12:	82 30       	cpi	r24, 0x02	; 2
     c14:	b9 f1       	breq	.+110    	; 0xc84 <__fpcmp_parts_f+0xa8>
     c16:	81 81       	ldd	r24, Z+1	; 0x01
     c18:	88 23       	and	r24, r24
     c1a:	89 f1       	breq	.+98     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c1c:	2d c0       	rjmp	.+90     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c1e:	11 96       	adiw	r26, 0x01	; 1
     c20:	1c 91       	ld	r17, X
     c22:	11 97       	sbiw	r26, 0x01	; 1
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	f1 f0       	breq	.+60     	; 0xc64 <__fpcmp_parts_f+0x88>
     c28:	81 81       	ldd	r24, Z+1	; 0x01
     c2a:	18 17       	cp	r17, r24
     c2c:	d9 f4       	brne	.+54     	; 0xc64 <__fpcmp_parts_f+0x88>
     c2e:	12 96       	adiw	r26, 0x02	; 2
     c30:	2d 91       	ld	r18, X+
     c32:	3c 91       	ld	r19, X
     c34:	13 97       	sbiw	r26, 0x03	; 3
     c36:	82 81       	ldd	r24, Z+2	; 0x02
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	82 17       	cp	r24, r18
     c3c:	93 07       	cpc	r25, r19
     c3e:	94 f0       	brlt	.+36     	; 0xc64 <__fpcmp_parts_f+0x88>
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	bc f0       	brlt	.+46     	; 0xc74 <__fpcmp_parts_f+0x98>
     c46:	14 96       	adiw	r26, 0x04	; 4
     c48:	8d 91       	ld	r24, X+
     c4a:	9d 91       	ld	r25, X+
     c4c:	0d 90       	ld	r0, X+
     c4e:	bc 91       	ld	r27, X
     c50:	a0 2d       	mov	r26, r0
     c52:	24 81       	ldd	r18, Z+4	; 0x04
     c54:	35 81       	ldd	r19, Z+5	; 0x05
     c56:	46 81       	ldd	r20, Z+6	; 0x06
     c58:	57 81       	ldd	r21, Z+7	; 0x07
     c5a:	28 17       	cp	r18, r24
     c5c:	39 07       	cpc	r19, r25
     c5e:	4a 07       	cpc	r20, r26
     c60:	5b 07       	cpc	r21, r27
     c62:	18 f4       	brcc	.+6      	; 0xc6a <__fpcmp_parts_f+0x8e>
     c64:	11 23       	and	r17, r17
     c66:	41 f0       	breq	.+16     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c68:	0a c0       	rjmp	.+20     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c6a:	82 17       	cp	r24, r18
     c6c:	93 07       	cpc	r25, r19
     c6e:	a4 07       	cpc	r26, r20
     c70:	b5 07       	cpc	r27, r21
     c72:	40 f4       	brcc	.+16     	; 0xc84 <__fpcmp_parts_f+0xa8>
     c74:	11 23       	and	r17, r17
     c76:	19 f0       	breq	.+6      	; 0xc7e <__fpcmp_parts_f+0xa2>
     c78:	61 e0       	ldi	r22, 0x01	; 1
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	05 c0       	rjmp	.+10     	; 0xc88 <__fpcmp_parts_f+0xac>
     c7e:	6f ef       	ldi	r22, 0xFF	; 255
     c80:	7f ef       	ldi	r23, 0xFF	; 255
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <__fpcmp_parts_f+0xac>
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	cb 01       	movw	r24, r22
     c8a:	1f 91       	pop	r17
     c8c:	08 95       	ret

00000c8e <DIO_u8Init>:
#include "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"

u8 DIO_u8Init            (void)
{
     c8e:	df 93       	push	r29
     c90:	cf 93       	push	r28
     c92:	0f 92       	push	r0
     c94:	cd b7       	in	r28, 0x3d	; 61
     c96:	de b7       	in	r29, 0x3e	; 62
     DDRA_u8_REG = CONC(DIO_u8_PA7_INITIAL_DIRECTION,DIO_u8_PA6_INITIAL_DIRECTION,DIO_u8_PA5_INITIAL_DIRECTION,DIO_u8_PA4_INITIAL_DIRECTION,
     c98:	ea e3       	ldi	r30, 0x3A	; 58
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	81 e0       	ldi	r24, 0x01	; 1
     c9e:	80 83       	st	Z, r24
	                    DIO_u8_PA3_INITIAL_DIRECTION,DIO_u8_PA2_INITIAL_DIRECTION,DIO_u8_PA1_INITIAL_DIRECTION,DIO_u8_PA0_INITIAL_DIRECTION); 
     
	 DDRB_u8_REG = CONC(DIO_u8_PB7_INITIAL_DIRECTION,DIO_u8_PB6_INITIAL_DIRECTION,DIO_u8_PB5_INITIAL_DIRECTION,DIO_u8_PB4_INITIAL_DIRECTION,
     ca0:	e7 e3       	ldi	r30, 0x37	; 55
     ca2:	f0 e0       	ldi	r31, 0x00	; 0
     ca4:	10 82       	st	Z, r1
	                    DIO_u8_PB3_INITIAL_DIRECTION,DIO_u8_PB2_INITIAL_DIRECTION,DIO_u8_PB1_INITIAL_DIRECTION,DIO_u8_PB0_INITIAL_DIRECTION); 
     
	 DDRC_u8_REG = CONC(DIO_u8_PC7_INITIAL_DIRECTION,DIO_u8_PC6_INITIAL_DIRECTION,DIO_u8_PC5_INITIAL_DIRECTION,DIO_u8_PC4_INITIAL_DIRECTION,
     ca6:	e4 e3       	ldi	r30, 0x34	; 52
     ca8:	f0 e0       	ldi	r31, 0x00	; 0
     caa:	8f ef       	ldi	r24, 0xFF	; 255
     cac:	80 83       	st	Z, r24
	                    DIO_u8_PC3_INITIAL_DIRECTION,DIO_u8_PC2_INITIAL_DIRECTION,DIO_u8_PC1_INITIAL_DIRECTION,DIO_u8_PC0_INITIAL_DIRECTION); 
     
	 DDRD_u8_REG = CONC(DIO_u8_PD7_INITIAL_DIRECTION,DIO_u8_PD6_INITIAL_DIRECTION,DIO_u8_PD5_INITIAL_DIRECTION,DIO_u8_PD4_INITIAL_DIRECTION,
     cae:	e1 e3       	ldi	r30, 0x31	; 49
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	80 ee       	ldi	r24, 0xE0	; 224
     cb4:	80 83       	st	Z, r24
	                    DIO_u8_PD3_INITIAL_DIRECTION,DIO_u8_PD2_INITIAL_DIRECTION,DIO_u8_PD1_INITIAL_DIRECTION,DIO_u8_PD0_INITIAL_DIRECTION); 
    /*Initial values for pins */
     PORTA_u8_REG = CONC(DIO_u8_PA7_INITIAL_VALUE,DIO_u8_PA6_INITIAL_VALUE,DIO_u8_PA5_INITIAL_VALUE,DIO_u8_PA4_INITIAL_VALUE,
     cb6:	eb e3       	ldi	r30, 0x3B	; 59
     cb8:	f0 e0       	ldi	r31, 0x00	; 0
     cba:	10 82       	st	Z, r1
	                     DIO_u8_PA3_INITIAL_VALUE,DIO_u8_PA2_INITIAL_VALUE,DIO_u8_PA1_INITIAL_VALUE,DIO_u8_PA0_INITIAL_VALUE); 
																											   
	 PORTB_u8_REG = CONC(DIO_u8_PB7_INITIAL_VALUE,DIO_u8_PB6_INITIAL_VALUE,DIO_u8_PB5_INITIAL_VALUE,DIO_u8_PB4_INITIAL_VALUE,
     cbc:	e8 e3       	ldi	r30, 0x38	; 56
     cbe:	f0 e0       	ldi	r31, 0x00	; 0
     cc0:	10 82       	st	Z, r1
	                     DIO_u8_PB3_INITIAL_VALUE,DIO_u8_PB2_INITIAL_VALUE,DIO_u8_PB1_INITIAL_VALUE,DIO_u8_PB0_INITIAL_VALUE); 
																											   
	 PORTC_u8_REG = CONC(DIO_u8_PC7_INITIAL_VALUE,DIO_u8_PC6_INITIAL_VALUE,DIO_u8_PC5_INITIAL_VALUE,DIO_u8_PC4_INITIAL_VALUE,
     cc2:	e5 e3       	ldi	r30, 0x35	; 53
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	10 82       	st	Z, r1
	                     DIO_u8_PC3_INITIAL_VALUE,DIO_u8_PC2_INITIAL_VALUE,DIO_u8_PC1_INITIAL_VALUE,DIO_u8_PC0_INITIAL_VALUE); 
																											   
	 PORTD_u8_REG = CONC(DIO_u8_PD7_INITIAL_VALUE,DIO_u8_PD6_INITIAL_VALUE,DIO_u8_PD5_INITIAL_VALUE,DIO_u8_PD4_INITIAL_VALUE,
     cc8:	e2 e3       	ldi	r30, 0x32	; 50
     cca:	f0 e0       	ldi	r31, 0x00	; 0
     ccc:	84 e0       	ldi	r24, 0x04	; 4
     cce:	80 83       	st	Z, r24
	                     DIO_u8_PD3_INITIAL_VALUE,DIO_u8_PD2_INITIAL_VALUE,DIO_u8_PD1_INITIAL_VALUE,DIO_u8_PD0_INITIAL_VALUE);

}
     cd0:	0f 90       	pop	r0
     cd2:	cf 91       	pop	r28
     cd4:	df 91       	pop	r29
     cd6:	08 95       	ret

00000cd8 <DIO_u8SetPinDirection>:

u8 DIO_u8SetPinDirection (u8 Copy_u8PortID, u8 Copy_u8PinID, u8 Copy_u8PinDirection)
{
     cd8:	df 93       	push	r29
     cda:	cf 93       	push	r28
     cdc:	cd b7       	in	r28, 0x3d	; 61
     cde:	de b7       	in	r29, 0x3e	; 62
     ce0:	2e 97       	sbiw	r28, 0x0e	; 14
     ce2:	0f b6       	in	r0, 0x3f	; 63
     ce4:	f8 94       	cli
     ce6:	de bf       	out	0x3e, r29	; 62
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	cd bf       	out	0x3d, r28	; 61
     cec:	8a 83       	std	Y+2, r24	; 0x02
     cee:	6b 83       	std	Y+3, r22	; 0x03
     cf0:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ReturnState = STD_TYPES_OK;
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	89 83       	std	Y+1, r24	; 0x01
	/* Check 1- Valid Port  ID
	         2- Valid Pin ID
			 3- Valid Pin Direction */
    if((Copy_u8PortID <= DIO_u8_PORTD) && (Copy_u8PinID <= DIO_u8_PIN7) && ((Copy_u8PinDirection == DIO_u8_INPUT) || (Copy_u8PinDirection == DIO_u8_OUTPUT)))
     cf6:	8a 81       	ldd	r24, Y+2	; 0x02
     cf8:	84 30       	cpi	r24, 0x04	; 4
     cfa:	08 f0       	brcs	.+2      	; 0xcfe <DIO_u8SetPinDirection+0x26>
     cfc:	0c c1       	rjmp	.+536    	; 0xf16 <DIO_u8SetPinDirection+0x23e>
     cfe:	8b 81       	ldd	r24, Y+3	; 0x03
     d00:	88 30       	cpi	r24, 0x08	; 8
     d02:	08 f0       	brcs	.+2      	; 0xd06 <DIO_u8SetPinDirection+0x2e>
     d04:	08 c1       	rjmp	.+528    	; 0xf16 <DIO_u8SetPinDirection+0x23e>
     d06:	8c 81       	ldd	r24, Y+4	; 0x04
     d08:	88 23       	and	r24, r24
     d0a:	21 f0       	breq	.+8      	; 0xd14 <DIO_u8SetPinDirection+0x3c>
     d0c:	8c 81       	ldd	r24, Y+4	; 0x04
     d0e:	81 30       	cpi	r24, 0x01	; 1
     d10:	09 f0       	breq	.+2      	; 0xd14 <DIO_u8SetPinDirection+0x3c>
     d12:	01 c1       	rjmp	.+514    	; 0xf16 <DIO_u8SetPinDirection+0x23e>
	{
		switch(Copy_u8PortID)
     d14:	8a 81       	ldd	r24, Y+2	; 0x02
     d16:	28 2f       	mov	r18, r24
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	3e 87       	std	Y+14, r19	; 0x0e
     d1c:	2d 87       	std	Y+13, r18	; 0x0d
     d1e:	8d 85       	ldd	r24, Y+13	; 0x0d
     d20:	9e 85       	ldd	r25, Y+14	; 0x0e
     d22:	81 30       	cpi	r24, 0x01	; 1
     d24:	91 05       	cpc	r25, r1
     d26:	09 f4       	brne	.+2      	; 0xd2a <DIO_u8SetPinDirection+0x52>
     d28:	4f c0       	rjmp	.+158    	; 0xdc8 <DIO_u8SetPinDirection+0xf0>
     d2a:	2d 85       	ldd	r18, Y+13	; 0x0d
     d2c:	3e 85       	ldd	r19, Y+14	; 0x0e
     d2e:	22 30       	cpi	r18, 0x02	; 2
     d30:	31 05       	cpc	r19, r1
     d32:	2c f4       	brge	.+10     	; 0xd3e <DIO_u8SetPinDirection+0x66>
     d34:	8d 85       	ldd	r24, Y+13	; 0x0d
     d36:	9e 85       	ldd	r25, Y+14	; 0x0e
     d38:	00 97       	sbiw	r24, 0x00	; 0
     d3a:	71 f0       	breq	.+28     	; 0xd58 <DIO_u8SetPinDirection+0x80>
     d3c:	ed c0       	rjmp	.+474    	; 0xf18 <DIO_u8SetPinDirection+0x240>
     d3e:	2d 85       	ldd	r18, Y+13	; 0x0d
     d40:	3e 85       	ldd	r19, Y+14	; 0x0e
     d42:	22 30       	cpi	r18, 0x02	; 2
     d44:	31 05       	cpc	r19, r1
     d46:	09 f4       	brne	.+2      	; 0xd4a <DIO_u8SetPinDirection+0x72>
     d48:	77 c0       	rjmp	.+238    	; 0xe38 <DIO_u8SetPinDirection+0x160>
     d4a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d4c:	9e 85       	ldd	r25, Y+14	; 0x0e
     d4e:	83 30       	cpi	r24, 0x03	; 3
     d50:	91 05       	cpc	r25, r1
     d52:	09 f4       	brne	.+2      	; 0xd56 <DIO_u8SetPinDirection+0x7e>
     d54:	a9 c0       	rjmp	.+338    	; 0xea8 <DIO_u8SetPinDirection+0x1d0>
     d56:	e0 c0       	rjmp	.+448    	; 0xf18 <DIO_u8SetPinDirection+0x240>
		{
			case DIO_u8_PORTA:
			switch(Copy_u8PinDirection)
     d58:	8c 81       	ldd	r24, Y+4	; 0x04
     d5a:	28 2f       	mov	r18, r24
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	3c 87       	std	Y+12, r19	; 0x0c
     d60:	2b 87       	std	Y+11, r18	; 0x0b
     d62:	8b 85       	ldd	r24, Y+11	; 0x0b
     d64:	9c 85       	ldd	r25, Y+12	; 0x0c
     d66:	00 97       	sbiw	r24, 0x00	; 0
     d68:	d1 f0       	breq	.+52     	; 0xd9e <DIO_u8SetPinDirection+0xc6>
     d6a:	2b 85       	ldd	r18, Y+11	; 0x0b
     d6c:	3c 85       	ldd	r19, Y+12	; 0x0c
     d6e:	21 30       	cpi	r18, 0x01	; 1
     d70:	31 05       	cpc	r19, r1
     d72:	09 f0       	breq	.+2      	; 0xd76 <DIO_u8SetPinDirection+0x9e>
     d74:	d1 c0       	rjmp	.+418    	; 0xf18 <DIO_u8SetPinDirection+0x240>
			{
				case DIO_u8_OUTPUT:
				SET_BIT(DDRA_u8_REG,Copy_u8PinID);
     d76:	aa e3       	ldi	r26, 0x3A	; 58
     d78:	b0 e0       	ldi	r27, 0x00	; 0
     d7a:	ea e3       	ldi	r30, 0x3A	; 58
     d7c:	f0 e0       	ldi	r31, 0x00	; 0
     d7e:	80 81       	ld	r24, Z
     d80:	48 2f       	mov	r20, r24
     d82:	8b 81       	ldd	r24, Y+3	; 0x03
     d84:	28 2f       	mov	r18, r24
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	81 e0       	ldi	r24, 0x01	; 1
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	02 2e       	mov	r0, r18
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <DIO_u8SetPinDirection+0xbc>
     d90:	88 0f       	add	r24, r24
     d92:	99 1f       	adc	r25, r25
     d94:	0a 94       	dec	r0
     d96:	e2 f7       	brpl	.-8      	; 0xd90 <DIO_u8SetPinDirection+0xb8>
     d98:	84 2b       	or	r24, r20
     d9a:	8c 93       	st	X, r24
     d9c:	bd c0       	rjmp	.+378    	; 0xf18 <DIO_u8SetPinDirection+0x240>
				break;
				case DIO_u8_INPUT:
				CLR_BIT(DDRA_u8_REG,Copy_u8PinID);
     d9e:	aa e3       	ldi	r26, 0x3A	; 58
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	ea e3       	ldi	r30, 0x3A	; 58
     da4:	f0 e0       	ldi	r31, 0x00	; 0
     da6:	80 81       	ld	r24, Z
     da8:	48 2f       	mov	r20, r24
     daa:	8b 81       	ldd	r24, Y+3	; 0x03
     dac:	28 2f       	mov	r18, r24
     dae:	30 e0       	ldi	r19, 0x00	; 0
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	02 2e       	mov	r0, r18
     db6:	02 c0       	rjmp	.+4      	; 0xdbc <DIO_u8SetPinDirection+0xe4>
     db8:	88 0f       	add	r24, r24
     dba:	99 1f       	adc	r25, r25
     dbc:	0a 94       	dec	r0
     dbe:	e2 f7       	brpl	.-8      	; 0xdb8 <DIO_u8SetPinDirection+0xe0>
     dc0:	80 95       	com	r24
     dc2:	84 23       	and	r24, r20
     dc4:	8c 93       	st	X, r24
     dc6:	a8 c0       	rjmp	.+336    	; 0xf18 <DIO_u8SetPinDirection+0x240>
				break;
			}
			break;
			case DIO_u8_PORTB:
			switch(Copy_u8PinDirection)
     dc8:	8c 81       	ldd	r24, Y+4	; 0x04
     dca:	28 2f       	mov	r18, r24
     dcc:	30 e0       	ldi	r19, 0x00	; 0
     dce:	3a 87       	std	Y+10, r19	; 0x0a
     dd0:	29 87       	std	Y+9, r18	; 0x09
     dd2:	89 85       	ldd	r24, Y+9	; 0x09
     dd4:	9a 85       	ldd	r25, Y+10	; 0x0a
     dd6:	00 97       	sbiw	r24, 0x00	; 0
     dd8:	d1 f0       	breq	.+52     	; 0xe0e <DIO_u8SetPinDirection+0x136>
     dda:	29 85       	ldd	r18, Y+9	; 0x09
     ddc:	3a 85       	ldd	r19, Y+10	; 0x0a
     dde:	21 30       	cpi	r18, 0x01	; 1
     de0:	31 05       	cpc	r19, r1
     de2:	09 f0       	breq	.+2      	; 0xde6 <DIO_u8SetPinDirection+0x10e>
     de4:	99 c0       	rjmp	.+306    	; 0xf18 <DIO_u8SetPinDirection+0x240>
			{
				case DIO_u8_OUTPUT:
				SET_BIT(DDRB_u8_REG,Copy_u8PinID);
     de6:	a7 e3       	ldi	r26, 0x37	; 55
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	e7 e3       	ldi	r30, 0x37	; 55
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	80 81       	ld	r24, Z
     df0:	48 2f       	mov	r20, r24
     df2:	8b 81       	ldd	r24, Y+3	; 0x03
     df4:	28 2f       	mov	r18, r24
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	81 e0       	ldi	r24, 0x01	; 1
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	02 2e       	mov	r0, r18
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <DIO_u8SetPinDirection+0x12c>
     e00:	88 0f       	add	r24, r24
     e02:	99 1f       	adc	r25, r25
     e04:	0a 94       	dec	r0
     e06:	e2 f7       	brpl	.-8      	; 0xe00 <DIO_u8SetPinDirection+0x128>
     e08:	84 2b       	or	r24, r20
     e0a:	8c 93       	st	X, r24
     e0c:	85 c0       	rjmp	.+266    	; 0xf18 <DIO_u8SetPinDirection+0x240>
				break;
				case DIO_u8_INPUT:
				CLR_BIT(DDRB_u8_REG,Copy_u8PinID);
     e0e:	a7 e3       	ldi	r26, 0x37	; 55
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	e7 e3       	ldi	r30, 0x37	; 55
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	80 81       	ld	r24, Z
     e18:	48 2f       	mov	r20, r24
     e1a:	8b 81       	ldd	r24, Y+3	; 0x03
     e1c:	28 2f       	mov	r18, r24
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	02 2e       	mov	r0, r18
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <DIO_u8SetPinDirection+0x154>
     e28:	88 0f       	add	r24, r24
     e2a:	99 1f       	adc	r25, r25
     e2c:	0a 94       	dec	r0
     e2e:	e2 f7       	brpl	.-8      	; 0xe28 <DIO_u8SetPinDirection+0x150>
     e30:	80 95       	com	r24
     e32:	84 23       	and	r24, r20
     e34:	8c 93       	st	X, r24
     e36:	70 c0       	rjmp	.+224    	; 0xf18 <DIO_u8SetPinDirection+0x240>
				break;
			}
			break;
			case DIO_u8_PORTC:
			switch(Copy_u8PinDirection)
     e38:	8c 81       	ldd	r24, Y+4	; 0x04
     e3a:	28 2f       	mov	r18, r24
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	38 87       	std	Y+8, r19	; 0x08
     e40:	2f 83       	std	Y+7, r18	; 0x07
     e42:	8f 81       	ldd	r24, Y+7	; 0x07
     e44:	98 85       	ldd	r25, Y+8	; 0x08
     e46:	00 97       	sbiw	r24, 0x00	; 0
     e48:	d1 f0       	breq	.+52     	; 0xe7e <DIO_u8SetPinDirection+0x1a6>
     e4a:	2f 81       	ldd	r18, Y+7	; 0x07
     e4c:	38 85       	ldd	r19, Y+8	; 0x08
     e4e:	21 30       	cpi	r18, 0x01	; 1
     e50:	31 05       	cpc	r19, r1
     e52:	09 f0       	breq	.+2      	; 0xe56 <DIO_u8SetPinDirection+0x17e>
     e54:	61 c0       	rjmp	.+194    	; 0xf18 <DIO_u8SetPinDirection+0x240>
			{
				case DIO_u8_OUTPUT:
				SET_BIT(DDRC_u8_REG,Copy_u8PinID);
     e56:	a4 e3       	ldi	r26, 0x34	; 52
     e58:	b0 e0       	ldi	r27, 0x00	; 0
     e5a:	e4 e3       	ldi	r30, 0x34	; 52
     e5c:	f0 e0       	ldi	r31, 0x00	; 0
     e5e:	80 81       	ld	r24, Z
     e60:	48 2f       	mov	r20, r24
     e62:	8b 81       	ldd	r24, Y+3	; 0x03
     e64:	28 2f       	mov	r18, r24
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	81 e0       	ldi	r24, 0x01	; 1
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	02 2e       	mov	r0, r18
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <DIO_u8SetPinDirection+0x19c>
     e70:	88 0f       	add	r24, r24
     e72:	99 1f       	adc	r25, r25
     e74:	0a 94       	dec	r0
     e76:	e2 f7       	brpl	.-8      	; 0xe70 <DIO_u8SetPinDirection+0x198>
     e78:	84 2b       	or	r24, r20
     e7a:	8c 93       	st	X, r24
     e7c:	4d c0       	rjmp	.+154    	; 0xf18 <DIO_u8SetPinDirection+0x240>
				break;
				case DIO_u8_INPUT:
				CLR_BIT(DDRC_u8_REG,Copy_u8PinID);
     e7e:	a4 e3       	ldi	r26, 0x34	; 52
     e80:	b0 e0       	ldi	r27, 0x00	; 0
     e82:	e4 e3       	ldi	r30, 0x34	; 52
     e84:	f0 e0       	ldi	r31, 0x00	; 0
     e86:	80 81       	ld	r24, Z
     e88:	48 2f       	mov	r20, r24
     e8a:	8b 81       	ldd	r24, Y+3	; 0x03
     e8c:	28 2f       	mov	r18, r24
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	81 e0       	ldi	r24, 0x01	; 1
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	02 2e       	mov	r0, r18
     e96:	02 c0       	rjmp	.+4      	; 0xe9c <DIO_u8SetPinDirection+0x1c4>
     e98:	88 0f       	add	r24, r24
     e9a:	99 1f       	adc	r25, r25
     e9c:	0a 94       	dec	r0
     e9e:	e2 f7       	brpl	.-8      	; 0xe98 <DIO_u8SetPinDirection+0x1c0>
     ea0:	80 95       	com	r24
     ea2:	84 23       	and	r24, r20
     ea4:	8c 93       	st	X, r24
     ea6:	38 c0       	rjmp	.+112    	; 0xf18 <DIO_u8SetPinDirection+0x240>
				break;
			}
			break;
			case DIO_u8_PORTD:
			switch(Copy_u8PinDirection)
     ea8:	8c 81       	ldd	r24, Y+4	; 0x04
     eaa:	28 2f       	mov	r18, r24
     eac:	30 e0       	ldi	r19, 0x00	; 0
     eae:	3e 83       	std	Y+6, r19	; 0x06
     eb0:	2d 83       	std	Y+5, r18	; 0x05
     eb2:	8d 81       	ldd	r24, Y+5	; 0x05
     eb4:	9e 81       	ldd	r25, Y+6	; 0x06
     eb6:	00 97       	sbiw	r24, 0x00	; 0
     eb8:	c9 f0       	breq	.+50     	; 0xeec <DIO_u8SetPinDirection+0x214>
     eba:	2d 81       	ldd	r18, Y+5	; 0x05
     ebc:	3e 81       	ldd	r19, Y+6	; 0x06
     ebe:	21 30       	cpi	r18, 0x01	; 1
     ec0:	31 05       	cpc	r19, r1
     ec2:	51 f5       	brne	.+84     	; 0xf18 <DIO_u8SetPinDirection+0x240>
			{
				case DIO_u8_OUTPUT:
				SET_BIT(DDRD_u8_REG,Copy_u8PinID);
     ec4:	a1 e3       	ldi	r26, 0x31	; 49
     ec6:	b0 e0       	ldi	r27, 0x00	; 0
     ec8:	e1 e3       	ldi	r30, 0x31	; 49
     eca:	f0 e0       	ldi	r31, 0x00	; 0
     ecc:	80 81       	ld	r24, Z
     ece:	48 2f       	mov	r20, r24
     ed0:	8b 81       	ldd	r24, Y+3	; 0x03
     ed2:	28 2f       	mov	r18, r24
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	02 2e       	mov	r0, r18
     edc:	02 c0       	rjmp	.+4      	; 0xee2 <DIO_u8SetPinDirection+0x20a>
     ede:	88 0f       	add	r24, r24
     ee0:	99 1f       	adc	r25, r25
     ee2:	0a 94       	dec	r0
     ee4:	e2 f7       	brpl	.-8      	; 0xede <DIO_u8SetPinDirection+0x206>
     ee6:	84 2b       	or	r24, r20
     ee8:	8c 93       	st	X, r24
     eea:	16 c0       	rjmp	.+44     	; 0xf18 <DIO_u8SetPinDirection+0x240>
				break;
				case DIO_u8_INPUT:
				CLR_BIT(DDRD_u8_REG,Copy_u8PinID);
     eec:	a1 e3       	ldi	r26, 0x31	; 49
     eee:	b0 e0       	ldi	r27, 0x00	; 0
     ef0:	e1 e3       	ldi	r30, 0x31	; 49
     ef2:	f0 e0       	ldi	r31, 0x00	; 0
     ef4:	80 81       	ld	r24, Z
     ef6:	48 2f       	mov	r20, r24
     ef8:	8b 81       	ldd	r24, Y+3	; 0x03
     efa:	28 2f       	mov	r18, r24
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	81 e0       	ldi	r24, 0x01	; 1
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	02 2e       	mov	r0, r18
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <DIO_u8SetPinDirection+0x232>
     f06:	88 0f       	add	r24, r24
     f08:	99 1f       	adc	r25, r25
     f0a:	0a 94       	dec	r0
     f0c:	e2 f7       	brpl	.-8      	; 0xf06 <DIO_u8SetPinDirection+0x22e>
     f0e:	80 95       	com	r24
     f10:	84 23       	and	r24, r20
     f12:	8c 93       	st	X, r24
     f14:	01 c0       	rjmp	.+2      	; 0xf18 <DIO_u8SetPinDirection+0x240>
			break;
		}
	}
	else
	{
		Local_u8ReturnState = STD_TYPES_NOK;
     f16:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ReturnState;
     f18:	89 81       	ldd	r24, Y+1	; 0x01
}
     f1a:	2e 96       	adiw	r28, 0x0e	; 14
     f1c:	0f b6       	in	r0, 0x3f	; 63
     f1e:	f8 94       	cli
     f20:	de bf       	out	0x3e, r29	; 62
     f22:	0f be       	out	0x3f, r0	; 63
     f24:	cd bf       	out	0x3d, r28	; 61
     f26:	cf 91       	pop	r28
     f28:	df 91       	pop	r29
     f2a:	08 95       	ret

00000f2c <DIO_u8SetPinValue>:
u8 DIO_u8SetPinValue     (u8 Copy_u8PortID, u8 Copy_u8PinID, u8 Copy_u8PinValue)
{
     f2c:	df 93       	push	r29
     f2e:	cf 93       	push	r28
     f30:	cd b7       	in	r28, 0x3d	; 61
     f32:	de b7       	in	r29, 0x3e	; 62
     f34:	2e 97       	sbiw	r28, 0x0e	; 14
     f36:	0f b6       	in	r0, 0x3f	; 63
     f38:	f8 94       	cli
     f3a:	de bf       	out	0x3e, r29	; 62
     f3c:	0f be       	out	0x3f, r0	; 63
     f3e:	cd bf       	out	0x3d, r28	; 61
     f40:	8a 83       	std	Y+2, r24	; 0x02
     f42:	6b 83       	std	Y+3, r22	; 0x03
     f44:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ReturnState = STD_TYPES_OK;
     f46:	81 e0       	ldi	r24, 0x01	; 1
     f48:	89 83       	std	Y+1, r24	; 0x01
	  if((Copy_u8PortID <= DIO_u8_PORTD)  && (Copy_u8PinID <= DIO_u8_PIN7) && ((Copy_u8PinValue == DIO_u8_HIGH) || (Copy_u8PinValue == DIO_u8_LOW)))
     f4a:	8a 81       	ldd	r24, Y+2	; 0x02
     f4c:	84 30       	cpi	r24, 0x04	; 4
     f4e:	08 f0       	brcs	.+2      	; 0xf52 <DIO_u8SetPinValue+0x26>
     f50:	0c c1       	rjmp	.+536    	; 0x116a <DIO_u8SetPinValue+0x23e>
     f52:	8b 81       	ldd	r24, Y+3	; 0x03
     f54:	88 30       	cpi	r24, 0x08	; 8
     f56:	08 f0       	brcs	.+2      	; 0xf5a <DIO_u8SetPinValue+0x2e>
     f58:	08 c1       	rjmp	.+528    	; 0x116a <DIO_u8SetPinValue+0x23e>
     f5a:	8c 81       	ldd	r24, Y+4	; 0x04
     f5c:	81 30       	cpi	r24, 0x01	; 1
     f5e:	21 f0       	breq	.+8      	; 0xf68 <DIO_u8SetPinValue+0x3c>
     f60:	8c 81       	ldd	r24, Y+4	; 0x04
     f62:	88 23       	and	r24, r24
     f64:	09 f0       	breq	.+2      	; 0xf68 <DIO_u8SetPinValue+0x3c>
     f66:	01 c1       	rjmp	.+514    	; 0x116a <DIO_u8SetPinValue+0x23e>
	  {
		  switch (Copy_u8PortID)
     f68:	8a 81       	ldd	r24, Y+2	; 0x02
     f6a:	28 2f       	mov	r18, r24
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	3e 87       	std	Y+14, r19	; 0x0e
     f70:	2d 87       	std	Y+13, r18	; 0x0d
     f72:	8d 85       	ldd	r24, Y+13	; 0x0d
     f74:	9e 85       	ldd	r25, Y+14	; 0x0e
     f76:	81 30       	cpi	r24, 0x01	; 1
     f78:	91 05       	cpc	r25, r1
     f7a:	09 f4       	brne	.+2      	; 0xf7e <DIO_u8SetPinValue+0x52>
     f7c:	4f c0       	rjmp	.+158    	; 0x101c <DIO_u8SetPinValue+0xf0>
     f7e:	2d 85       	ldd	r18, Y+13	; 0x0d
     f80:	3e 85       	ldd	r19, Y+14	; 0x0e
     f82:	22 30       	cpi	r18, 0x02	; 2
     f84:	31 05       	cpc	r19, r1
     f86:	2c f4       	brge	.+10     	; 0xf92 <DIO_u8SetPinValue+0x66>
     f88:	8d 85       	ldd	r24, Y+13	; 0x0d
     f8a:	9e 85       	ldd	r25, Y+14	; 0x0e
     f8c:	00 97       	sbiw	r24, 0x00	; 0
     f8e:	71 f0       	breq	.+28     	; 0xfac <DIO_u8SetPinValue+0x80>
     f90:	ed c0       	rjmp	.+474    	; 0x116c <DIO_u8SetPinValue+0x240>
     f92:	2d 85       	ldd	r18, Y+13	; 0x0d
     f94:	3e 85       	ldd	r19, Y+14	; 0x0e
     f96:	22 30       	cpi	r18, 0x02	; 2
     f98:	31 05       	cpc	r19, r1
     f9a:	09 f4       	brne	.+2      	; 0xf9e <DIO_u8SetPinValue+0x72>
     f9c:	77 c0       	rjmp	.+238    	; 0x108c <DIO_u8SetPinValue+0x160>
     f9e:	8d 85       	ldd	r24, Y+13	; 0x0d
     fa0:	9e 85       	ldd	r25, Y+14	; 0x0e
     fa2:	83 30       	cpi	r24, 0x03	; 3
     fa4:	91 05       	cpc	r25, r1
     fa6:	09 f4       	brne	.+2      	; 0xfaa <DIO_u8SetPinValue+0x7e>
     fa8:	a9 c0       	rjmp	.+338    	; 0x10fc <DIO_u8SetPinValue+0x1d0>
     faa:	e0 c0       	rjmp	.+448    	; 0x116c <DIO_u8SetPinValue+0x240>
		  {
			  case DIO_u8_PORTA:
			     switch(Copy_u8PinValue)
     fac:	8c 81       	ldd	r24, Y+4	; 0x04
     fae:	28 2f       	mov	r18, r24
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	3c 87       	std	Y+12, r19	; 0x0c
     fb4:	2b 87       	std	Y+11, r18	; 0x0b
     fb6:	8b 85       	ldd	r24, Y+11	; 0x0b
     fb8:	9c 85       	ldd	r25, Y+12	; 0x0c
     fba:	00 97       	sbiw	r24, 0x00	; 0
     fbc:	d1 f0       	breq	.+52     	; 0xff2 <DIO_u8SetPinValue+0xc6>
     fbe:	2b 85       	ldd	r18, Y+11	; 0x0b
     fc0:	3c 85       	ldd	r19, Y+12	; 0x0c
     fc2:	21 30       	cpi	r18, 0x01	; 1
     fc4:	31 05       	cpc	r19, r1
     fc6:	09 f0       	breq	.+2      	; 0xfca <DIO_u8SetPinValue+0x9e>
     fc8:	d1 c0       	rjmp	.+418    	; 0x116c <DIO_u8SetPinValue+0x240>
				 {
					case DIO_u8_HIGH:
					 SET_BIT(PORTA_u8_REG,Copy_u8PinID);
     fca:	ab e3       	ldi	r26, 0x3B	; 59
     fcc:	b0 e0       	ldi	r27, 0x00	; 0
     fce:	eb e3       	ldi	r30, 0x3B	; 59
     fd0:	f0 e0       	ldi	r31, 0x00	; 0
     fd2:	80 81       	ld	r24, Z
     fd4:	48 2f       	mov	r20, r24
     fd6:	8b 81       	ldd	r24, Y+3	; 0x03
     fd8:	28 2f       	mov	r18, r24
     fda:	30 e0       	ldi	r19, 0x00	; 0
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	02 2e       	mov	r0, r18
     fe2:	02 c0       	rjmp	.+4      	; 0xfe8 <DIO_u8SetPinValue+0xbc>
     fe4:	88 0f       	add	r24, r24
     fe6:	99 1f       	adc	r25, r25
     fe8:	0a 94       	dec	r0
     fea:	e2 f7       	brpl	.-8      	; 0xfe4 <DIO_u8SetPinValue+0xb8>
     fec:	84 2b       	or	r24, r20
     fee:	8c 93       	st	X, r24
     ff0:	bd c0       	rjmp	.+378    	; 0x116c <DIO_u8SetPinValue+0x240>
					break;
					case DIO_u8_LOW:
					 CLR_BIT(PORTA_u8_REG,Copy_u8PinID);
     ff2:	ab e3       	ldi	r26, 0x3B	; 59
     ff4:	b0 e0       	ldi	r27, 0x00	; 0
     ff6:	eb e3       	ldi	r30, 0x3B	; 59
     ff8:	f0 e0       	ldi	r31, 0x00	; 0
     ffa:	80 81       	ld	r24, Z
     ffc:	48 2f       	mov	r20, r24
     ffe:	8b 81       	ldd	r24, Y+3	; 0x03
    1000:	28 2f       	mov	r18, r24
    1002:	30 e0       	ldi	r19, 0x00	; 0
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	02 2e       	mov	r0, r18
    100a:	02 c0       	rjmp	.+4      	; 0x1010 <DIO_u8SetPinValue+0xe4>
    100c:	88 0f       	add	r24, r24
    100e:	99 1f       	adc	r25, r25
    1010:	0a 94       	dec	r0
    1012:	e2 f7       	brpl	.-8      	; 0x100c <DIO_u8SetPinValue+0xe0>
    1014:	80 95       	com	r24
    1016:	84 23       	and	r24, r20
    1018:	8c 93       	st	X, r24
    101a:	a8 c0       	rjmp	.+336    	; 0x116c <DIO_u8SetPinValue+0x240>
					break;   
				 }
			   break;
			   case DIO_u8_PORTB:
			     switch(Copy_u8PinValue)
    101c:	8c 81       	ldd	r24, Y+4	; 0x04
    101e:	28 2f       	mov	r18, r24
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	3a 87       	std	Y+10, r19	; 0x0a
    1024:	29 87       	std	Y+9, r18	; 0x09
    1026:	89 85       	ldd	r24, Y+9	; 0x09
    1028:	9a 85       	ldd	r25, Y+10	; 0x0a
    102a:	00 97       	sbiw	r24, 0x00	; 0
    102c:	d1 f0       	breq	.+52     	; 0x1062 <DIO_u8SetPinValue+0x136>
    102e:	29 85       	ldd	r18, Y+9	; 0x09
    1030:	3a 85       	ldd	r19, Y+10	; 0x0a
    1032:	21 30       	cpi	r18, 0x01	; 1
    1034:	31 05       	cpc	r19, r1
    1036:	09 f0       	breq	.+2      	; 0x103a <DIO_u8SetPinValue+0x10e>
    1038:	99 c0       	rjmp	.+306    	; 0x116c <DIO_u8SetPinValue+0x240>
				  {
					case DIO_u8_HIGH:
					 SET_BIT(PORTB_u8_REG,Copy_u8PinID);
    103a:	a8 e3       	ldi	r26, 0x38	; 56
    103c:	b0 e0       	ldi	r27, 0x00	; 0
    103e:	e8 e3       	ldi	r30, 0x38	; 56
    1040:	f0 e0       	ldi	r31, 0x00	; 0
    1042:	80 81       	ld	r24, Z
    1044:	48 2f       	mov	r20, r24
    1046:	8b 81       	ldd	r24, Y+3	; 0x03
    1048:	28 2f       	mov	r18, r24
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	02 2e       	mov	r0, r18
    1052:	02 c0       	rjmp	.+4      	; 0x1058 <DIO_u8SetPinValue+0x12c>
    1054:	88 0f       	add	r24, r24
    1056:	99 1f       	adc	r25, r25
    1058:	0a 94       	dec	r0
    105a:	e2 f7       	brpl	.-8      	; 0x1054 <DIO_u8SetPinValue+0x128>
    105c:	84 2b       	or	r24, r20
    105e:	8c 93       	st	X, r24
    1060:	85 c0       	rjmp	.+266    	; 0x116c <DIO_u8SetPinValue+0x240>
					break;
					case DIO_u8_LOW:
					 CLR_BIT(PORTB_u8_REG,Copy_u8PinID);
    1062:	a8 e3       	ldi	r26, 0x38	; 56
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	e8 e3       	ldi	r30, 0x38	; 56
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	80 81       	ld	r24, Z
    106c:	48 2f       	mov	r20, r24
    106e:	8b 81       	ldd	r24, Y+3	; 0x03
    1070:	28 2f       	mov	r18, r24
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	02 2e       	mov	r0, r18
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <DIO_u8SetPinValue+0x154>
    107c:	88 0f       	add	r24, r24
    107e:	99 1f       	adc	r25, r25
    1080:	0a 94       	dec	r0
    1082:	e2 f7       	brpl	.-8      	; 0x107c <DIO_u8SetPinValue+0x150>
    1084:	80 95       	com	r24
    1086:	84 23       	and	r24, r20
    1088:	8c 93       	st	X, r24
    108a:	70 c0       	rjmp	.+224    	; 0x116c <DIO_u8SetPinValue+0x240>
					break;
				  }
			   break;
			   case DIO_u8_PORTC:
			     switch(Copy_u8PinValue)
    108c:	8c 81       	ldd	r24, Y+4	; 0x04
    108e:	28 2f       	mov	r18, r24
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	38 87       	std	Y+8, r19	; 0x08
    1094:	2f 83       	std	Y+7, r18	; 0x07
    1096:	8f 81       	ldd	r24, Y+7	; 0x07
    1098:	98 85       	ldd	r25, Y+8	; 0x08
    109a:	00 97       	sbiw	r24, 0x00	; 0
    109c:	d1 f0       	breq	.+52     	; 0x10d2 <DIO_u8SetPinValue+0x1a6>
    109e:	2f 81       	ldd	r18, Y+7	; 0x07
    10a0:	38 85       	ldd	r19, Y+8	; 0x08
    10a2:	21 30       	cpi	r18, 0x01	; 1
    10a4:	31 05       	cpc	r19, r1
    10a6:	09 f0       	breq	.+2      	; 0x10aa <DIO_u8SetPinValue+0x17e>
    10a8:	61 c0       	rjmp	.+194    	; 0x116c <DIO_u8SetPinValue+0x240>
				  {
					case DIO_u8_HIGH:
					 SET_BIT(PORTC_u8_REG,Copy_u8PinID);
    10aa:	a5 e3       	ldi	r26, 0x35	; 53
    10ac:	b0 e0       	ldi	r27, 0x00	; 0
    10ae:	e5 e3       	ldi	r30, 0x35	; 53
    10b0:	f0 e0       	ldi	r31, 0x00	; 0
    10b2:	80 81       	ld	r24, Z
    10b4:	48 2f       	mov	r20, r24
    10b6:	8b 81       	ldd	r24, Y+3	; 0x03
    10b8:	28 2f       	mov	r18, r24
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	81 e0       	ldi	r24, 0x01	; 1
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	02 2e       	mov	r0, r18
    10c2:	02 c0       	rjmp	.+4      	; 0x10c8 <DIO_u8SetPinValue+0x19c>
    10c4:	88 0f       	add	r24, r24
    10c6:	99 1f       	adc	r25, r25
    10c8:	0a 94       	dec	r0
    10ca:	e2 f7       	brpl	.-8      	; 0x10c4 <DIO_u8SetPinValue+0x198>
    10cc:	84 2b       	or	r24, r20
    10ce:	8c 93       	st	X, r24
    10d0:	4d c0       	rjmp	.+154    	; 0x116c <DIO_u8SetPinValue+0x240>
					break;
					case DIO_u8_LOW:
					 CLR_BIT(PORTC_u8_REG,Copy_u8PinID);
    10d2:	a5 e3       	ldi	r26, 0x35	; 53
    10d4:	b0 e0       	ldi	r27, 0x00	; 0
    10d6:	e5 e3       	ldi	r30, 0x35	; 53
    10d8:	f0 e0       	ldi	r31, 0x00	; 0
    10da:	80 81       	ld	r24, Z
    10dc:	48 2f       	mov	r20, r24
    10de:	8b 81       	ldd	r24, Y+3	; 0x03
    10e0:	28 2f       	mov	r18, r24
    10e2:	30 e0       	ldi	r19, 0x00	; 0
    10e4:	81 e0       	ldi	r24, 0x01	; 1
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	02 2e       	mov	r0, r18
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <DIO_u8SetPinValue+0x1c4>
    10ec:	88 0f       	add	r24, r24
    10ee:	99 1f       	adc	r25, r25
    10f0:	0a 94       	dec	r0
    10f2:	e2 f7       	brpl	.-8      	; 0x10ec <DIO_u8SetPinValue+0x1c0>
    10f4:	80 95       	com	r24
    10f6:	84 23       	and	r24, r20
    10f8:	8c 93       	st	X, r24
    10fa:	38 c0       	rjmp	.+112    	; 0x116c <DIO_u8SetPinValue+0x240>
					break;
				  }
			   break;
			   case DIO_u8_PORTD:
			     switch(Copy_u8PinValue)
    10fc:	8c 81       	ldd	r24, Y+4	; 0x04
    10fe:	28 2f       	mov	r18, r24
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	3e 83       	std	Y+6, r19	; 0x06
    1104:	2d 83       	std	Y+5, r18	; 0x05
    1106:	8d 81       	ldd	r24, Y+5	; 0x05
    1108:	9e 81       	ldd	r25, Y+6	; 0x06
    110a:	00 97       	sbiw	r24, 0x00	; 0
    110c:	c9 f0       	breq	.+50     	; 0x1140 <DIO_u8SetPinValue+0x214>
    110e:	2d 81       	ldd	r18, Y+5	; 0x05
    1110:	3e 81       	ldd	r19, Y+6	; 0x06
    1112:	21 30       	cpi	r18, 0x01	; 1
    1114:	31 05       	cpc	r19, r1
    1116:	51 f5       	brne	.+84     	; 0x116c <DIO_u8SetPinValue+0x240>
				  { 
					case DIO_u8_HIGH:
					 SET_BIT(PORTD_u8_REG,Copy_u8PinID);
    1118:	a2 e3       	ldi	r26, 0x32	; 50
    111a:	b0 e0       	ldi	r27, 0x00	; 0
    111c:	e2 e3       	ldi	r30, 0x32	; 50
    111e:	f0 e0       	ldi	r31, 0x00	; 0
    1120:	80 81       	ld	r24, Z
    1122:	48 2f       	mov	r20, r24
    1124:	8b 81       	ldd	r24, Y+3	; 0x03
    1126:	28 2f       	mov	r18, r24
    1128:	30 e0       	ldi	r19, 0x00	; 0
    112a:	81 e0       	ldi	r24, 0x01	; 1
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	02 2e       	mov	r0, r18
    1130:	02 c0       	rjmp	.+4      	; 0x1136 <DIO_u8SetPinValue+0x20a>
    1132:	88 0f       	add	r24, r24
    1134:	99 1f       	adc	r25, r25
    1136:	0a 94       	dec	r0
    1138:	e2 f7       	brpl	.-8      	; 0x1132 <DIO_u8SetPinValue+0x206>
    113a:	84 2b       	or	r24, r20
    113c:	8c 93       	st	X, r24
    113e:	16 c0       	rjmp	.+44     	; 0x116c <DIO_u8SetPinValue+0x240>
					break;
					case DIO_u8_LOW:
					 CLR_BIT(PORTD_u8_REG,Copy_u8PinID);
    1140:	a2 e3       	ldi	r26, 0x32	; 50
    1142:	b0 e0       	ldi	r27, 0x00	; 0
    1144:	e2 e3       	ldi	r30, 0x32	; 50
    1146:	f0 e0       	ldi	r31, 0x00	; 0
    1148:	80 81       	ld	r24, Z
    114a:	48 2f       	mov	r20, r24
    114c:	8b 81       	ldd	r24, Y+3	; 0x03
    114e:	28 2f       	mov	r18, r24
    1150:	30 e0       	ldi	r19, 0x00	; 0
    1152:	81 e0       	ldi	r24, 0x01	; 1
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	02 2e       	mov	r0, r18
    1158:	02 c0       	rjmp	.+4      	; 0x115e <DIO_u8SetPinValue+0x232>
    115a:	88 0f       	add	r24, r24
    115c:	99 1f       	adc	r25, r25
    115e:	0a 94       	dec	r0
    1160:	e2 f7       	brpl	.-8      	; 0x115a <DIO_u8SetPinValue+0x22e>
    1162:	80 95       	com	r24
    1164:	84 23       	and	r24, r20
    1166:	8c 93       	st	X, r24
    1168:	01 c0       	rjmp	.+2      	; 0x116c <DIO_u8SetPinValue+0x240>
			   break;
		   }
	  }
	  else
	  {
	      Local_u8ReturnState = STD_TYPES_NOK;
    116a:	19 82       	std	Y+1, r1	; 0x01
	  }
	return Local_u8ReturnState;
    116c:	89 81       	ldd	r24, Y+1	; 0x01
}
    116e:	2e 96       	adiw	r28, 0x0e	; 14
    1170:	0f b6       	in	r0, 0x3f	; 63
    1172:	f8 94       	cli
    1174:	de bf       	out	0x3e, r29	; 62
    1176:	0f be       	out	0x3f, r0	; 63
    1178:	cd bf       	out	0x3d, r28	; 61
    117a:	cf 91       	pop	r28
    117c:	df 91       	pop	r29
    117e:	08 95       	ret

00001180 <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue     (u8 Copy_u8PortID, u8 Copy_u8PinID, u8 * Copy_pu8ReturnedPinValue)
{
    1180:	df 93       	push	r29
    1182:	cf 93       	push	r28
    1184:	cd b7       	in	r28, 0x3d	; 61
    1186:	de b7       	in	r29, 0x3e	; 62
    1188:	27 97       	sbiw	r28, 0x07	; 7
    118a:	0f b6       	in	r0, 0x3f	; 63
    118c:	f8 94       	cli
    118e:	de bf       	out	0x3e, r29	; 62
    1190:	0f be       	out	0x3f, r0	; 63
    1192:	cd bf       	out	0x3d, r28	; 61
    1194:	8a 83       	std	Y+2, r24	; 0x02
    1196:	6b 83       	std	Y+3, r22	; 0x03
    1198:	5d 83       	std	Y+5, r21	; 0x05
    119a:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ReturnState = STD_TYPES_OK;
    119c:	81 e0       	ldi	r24, 0x01	; 1
    119e:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8PortID <= DIO_u8_PORTD)  && (Copy_u8PinID <= DIO_u8_PIN7) && (Copy_pu8ReturnedPinValue != NULL))
    11a0:	8a 81       	ldd	r24, Y+2	; 0x02
    11a2:	84 30       	cpi	r24, 0x04	; 4
    11a4:	08 f0       	brcs	.+2      	; 0x11a8 <DIO_u8GetPinValue+0x28>
    11a6:	ea c0       	rjmp	.+468    	; 0x137c <DIO_u8GetPinValue+0x1fc>
    11a8:	8b 81       	ldd	r24, Y+3	; 0x03
    11aa:	88 30       	cpi	r24, 0x08	; 8
    11ac:	08 f0       	brcs	.+2      	; 0x11b0 <DIO_u8GetPinValue+0x30>
    11ae:	e6 c0       	rjmp	.+460    	; 0x137c <DIO_u8GetPinValue+0x1fc>
    11b0:	8c 81       	ldd	r24, Y+4	; 0x04
    11b2:	9d 81       	ldd	r25, Y+5	; 0x05
    11b4:	00 97       	sbiw	r24, 0x00	; 0
    11b6:	09 f4       	brne	.+2      	; 0x11ba <DIO_u8GetPinValue+0x3a>
    11b8:	e1 c0       	rjmp	.+450    	; 0x137c <DIO_u8GetPinValue+0x1fc>
	{
		switch (Copy_u8PortID)
    11ba:	8a 81       	ldd	r24, Y+2	; 0x02
    11bc:	28 2f       	mov	r18, r24
    11be:	30 e0       	ldi	r19, 0x00	; 0
    11c0:	3f 83       	std	Y+7, r19	; 0x07
    11c2:	2e 83       	std	Y+6, r18	; 0x06
    11c4:	4e 81       	ldd	r20, Y+6	; 0x06
    11c6:	5f 81       	ldd	r21, Y+7	; 0x07
    11c8:	41 30       	cpi	r20, 0x01	; 1
    11ca:	51 05       	cpc	r21, r1
    11cc:	09 f4       	brne	.+2      	; 0x11d0 <DIO_u8GetPinValue+0x50>
    11ce:	48 c0       	rjmp	.+144    	; 0x1260 <DIO_u8GetPinValue+0xe0>
    11d0:	8e 81       	ldd	r24, Y+6	; 0x06
    11d2:	9f 81       	ldd	r25, Y+7	; 0x07
    11d4:	82 30       	cpi	r24, 0x02	; 2
    11d6:	91 05       	cpc	r25, r1
    11d8:	34 f4       	brge	.+12     	; 0x11e6 <DIO_u8GetPinValue+0x66>
    11da:	2e 81       	ldd	r18, Y+6	; 0x06
    11dc:	3f 81       	ldd	r19, Y+7	; 0x07
    11de:	21 15       	cp	r18, r1
    11e0:	31 05       	cpc	r19, r1
    11e2:	71 f0       	breq	.+28     	; 0x1200 <DIO_u8GetPinValue+0x80>
    11e4:	cc c0       	rjmp	.+408    	; 0x137e <DIO_u8GetPinValue+0x1fe>
    11e6:	4e 81       	ldd	r20, Y+6	; 0x06
    11e8:	5f 81       	ldd	r21, Y+7	; 0x07
    11ea:	42 30       	cpi	r20, 0x02	; 2
    11ec:	51 05       	cpc	r21, r1
    11ee:	09 f4       	brne	.+2      	; 0x11f2 <DIO_u8GetPinValue+0x72>
    11f0:	67 c0       	rjmp	.+206    	; 0x12c0 <DIO_u8GetPinValue+0x140>
    11f2:	8e 81       	ldd	r24, Y+6	; 0x06
    11f4:	9f 81       	ldd	r25, Y+7	; 0x07
    11f6:	83 30       	cpi	r24, 0x03	; 3
    11f8:	91 05       	cpc	r25, r1
    11fa:	09 f4       	brne	.+2      	; 0x11fe <DIO_u8GetPinValue+0x7e>
    11fc:	90 c0       	rjmp	.+288    	; 0x131e <DIO_u8GetPinValue+0x19e>
    11fe:	bf c0       	rjmp	.+382    	; 0x137e <DIO_u8GetPinValue+0x1fe>
		{
			case DIO_u8_PORTA: 
			   if(GET_BIT(PINA_u8_REG,Copy_u8PinID)== 0)
    1200:	e9 e3       	ldi	r30, 0x39	; 57
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	80 81       	ld	r24, Z
    1206:	28 2f       	mov	r18, r24
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	8b 81       	ldd	r24, Y+3	; 0x03
    120c:	88 2f       	mov	r24, r24
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	a9 01       	movw	r20, r18
    1212:	02 c0       	rjmp	.+4      	; 0x1218 <DIO_u8GetPinValue+0x98>
    1214:	55 95       	asr	r21
    1216:	47 95       	ror	r20
    1218:	8a 95       	dec	r24
    121a:	e2 f7       	brpl	.-8      	; 0x1214 <DIO_u8GetPinValue+0x94>
    121c:	ca 01       	movw	r24, r20
    121e:	81 70       	andi	r24, 0x01	; 1
    1220:	90 70       	andi	r25, 0x00	; 0
    1222:	00 97       	sbiw	r24, 0x00	; 0
    1224:	21 f4       	brne	.+8      	; 0x122e <DIO_u8GetPinValue+0xae>
			   {
				   *Copy_pu8ReturnedPinValue = DIO_u8_LOW;
    1226:	ec 81       	ldd	r30, Y+4	; 0x04
    1228:	fd 81       	ldd	r31, Y+5	; 0x05
    122a:	10 82       	st	Z, r1
    122c:	a8 c0       	rjmp	.+336    	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   }
			   else if(GET_BIT(PINA_u8_REG,Copy_u8PinID)!=0)
    122e:	e9 e3       	ldi	r30, 0x39	; 57
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	80 81       	ld	r24, Z
    1234:	28 2f       	mov	r18, r24
    1236:	30 e0       	ldi	r19, 0x00	; 0
    1238:	8b 81       	ldd	r24, Y+3	; 0x03
    123a:	88 2f       	mov	r24, r24
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	a9 01       	movw	r20, r18
    1240:	02 c0       	rjmp	.+4      	; 0x1246 <DIO_u8GetPinValue+0xc6>
    1242:	55 95       	asr	r21
    1244:	47 95       	ror	r20
    1246:	8a 95       	dec	r24
    1248:	e2 f7       	brpl	.-8      	; 0x1242 <DIO_u8GetPinValue+0xc2>
    124a:	ca 01       	movw	r24, r20
    124c:	81 70       	andi	r24, 0x01	; 1
    124e:	90 70       	andi	r25, 0x00	; 0
    1250:	88 23       	and	r24, r24
    1252:	09 f4       	brne	.+2      	; 0x1256 <DIO_u8GetPinValue+0xd6>
    1254:	94 c0       	rjmp	.+296    	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   {
				   *Copy_pu8ReturnedPinValue =DIO_u8_HIGH;
    1256:	ec 81       	ldd	r30, Y+4	; 0x04
    1258:	fd 81       	ldd	r31, Y+5	; 0x05
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	80 83       	st	Z, r24
    125e:	8f c0       	rjmp	.+286    	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   }
			break;
			case DIO_u8_PORTB: 
			   if(GET_BIT(PINB_u8_REG,Copy_u8PinID)== 0)
    1260:	e6 e3       	ldi	r30, 0x36	; 54
    1262:	f0 e0       	ldi	r31, 0x00	; 0
    1264:	80 81       	ld	r24, Z
    1266:	28 2f       	mov	r18, r24
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	8b 81       	ldd	r24, Y+3	; 0x03
    126c:	88 2f       	mov	r24, r24
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	a9 01       	movw	r20, r18
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <DIO_u8GetPinValue+0xf8>
    1274:	55 95       	asr	r21
    1276:	47 95       	ror	r20
    1278:	8a 95       	dec	r24
    127a:	e2 f7       	brpl	.-8      	; 0x1274 <DIO_u8GetPinValue+0xf4>
    127c:	ca 01       	movw	r24, r20
    127e:	81 70       	andi	r24, 0x01	; 1
    1280:	90 70       	andi	r25, 0x00	; 0
    1282:	00 97       	sbiw	r24, 0x00	; 0
    1284:	21 f4       	brne	.+8      	; 0x128e <DIO_u8GetPinValue+0x10e>
			    {
				   *Copy_pu8ReturnedPinValue = DIO_u8_LOW;
    1286:	ec 81       	ldd	r30, Y+4	; 0x04
    1288:	fd 81       	ldd	r31, Y+5	; 0x05
    128a:	10 82       	st	Z, r1
    128c:	78 c0       	rjmp	.+240    	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   }
			   else if(GET_BIT(PINB_u8_REG,Copy_u8PinID)!=0)
    128e:	e6 e3       	ldi	r30, 0x36	; 54
    1290:	f0 e0       	ldi	r31, 0x00	; 0
    1292:	80 81       	ld	r24, Z
    1294:	28 2f       	mov	r18, r24
    1296:	30 e0       	ldi	r19, 0x00	; 0
    1298:	8b 81       	ldd	r24, Y+3	; 0x03
    129a:	88 2f       	mov	r24, r24
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	a9 01       	movw	r20, r18
    12a0:	02 c0       	rjmp	.+4      	; 0x12a6 <DIO_u8GetPinValue+0x126>
    12a2:	55 95       	asr	r21
    12a4:	47 95       	ror	r20
    12a6:	8a 95       	dec	r24
    12a8:	e2 f7       	brpl	.-8      	; 0x12a2 <DIO_u8GetPinValue+0x122>
    12aa:	ca 01       	movw	r24, r20
    12ac:	81 70       	andi	r24, 0x01	; 1
    12ae:	90 70       	andi	r25, 0x00	; 0
    12b0:	88 23       	and	r24, r24
    12b2:	09 f4       	brne	.+2      	; 0x12b6 <DIO_u8GetPinValue+0x136>
    12b4:	64 c0       	rjmp	.+200    	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   {
				   *Copy_pu8ReturnedPinValue =DIO_u8_HIGH;
    12b6:	ec 81       	ldd	r30, Y+4	; 0x04
    12b8:	fd 81       	ldd	r31, Y+5	; 0x05
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	80 83       	st	Z, r24
    12be:	5f c0       	rjmp	.+190    	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   }
			break;
			case DIO_u8_PORTC: 
			   if(GET_BIT(PINC_u8_REG,Copy_u8PinID)== 0)
    12c0:	e3 e3       	ldi	r30, 0x33	; 51
    12c2:	f0 e0       	ldi	r31, 0x00	; 0
    12c4:	80 81       	ld	r24, Z
    12c6:	28 2f       	mov	r18, r24
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	8b 81       	ldd	r24, Y+3	; 0x03
    12cc:	88 2f       	mov	r24, r24
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	a9 01       	movw	r20, r18
    12d2:	02 c0       	rjmp	.+4      	; 0x12d8 <DIO_u8GetPinValue+0x158>
    12d4:	55 95       	asr	r21
    12d6:	47 95       	ror	r20
    12d8:	8a 95       	dec	r24
    12da:	e2 f7       	brpl	.-8      	; 0x12d4 <DIO_u8GetPinValue+0x154>
    12dc:	ca 01       	movw	r24, r20
    12de:	81 70       	andi	r24, 0x01	; 1
    12e0:	90 70       	andi	r25, 0x00	; 0
    12e2:	00 97       	sbiw	r24, 0x00	; 0
    12e4:	21 f4       	brne	.+8      	; 0x12ee <DIO_u8GetPinValue+0x16e>
			   {
				   *Copy_pu8ReturnedPinValue = DIO_u8_LOW;
    12e6:	ec 81       	ldd	r30, Y+4	; 0x04
    12e8:	fd 81       	ldd	r31, Y+5	; 0x05
    12ea:	10 82       	st	Z, r1
    12ec:	48 c0       	rjmp	.+144    	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   }
			   else if(GET_BIT(PINC_u8_REG,Copy_u8PinID)!=0)
    12ee:	e3 e3       	ldi	r30, 0x33	; 51
    12f0:	f0 e0       	ldi	r31, 0x00	; 0
    12f2:	80 81       	ld	r24, Z
    12f4:	28 2f       	mov	r18, r24
    12f6:	30 e0       	ldi	r19, 0x00	; 0
    12f8:	8b 81       	ldd	r24, Y+3	; 0x03
    12fa:	88 2f       	mov	r24, r24
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	a9 01       	movw	r20, r18
    1300:	02 c0       	rjmp	.+4      	; 0x1306 <DIO_u8GetPinValue+0x186>
    1302:	55 95       	asr	r21
    1304:	47 95       	ror	r20
    1306:	8a 95       	dec	r24
    1308:	e2 f7       	brpl	.-8      	; 0x1302 <DIO_u8GetPinValue+0x182>
    130a:	ca 01       	movw	r24, r20
    130c:	81 70       	andi	r24, 0x01	; 1
    130e:	90 70       	andi	r25, 0x00	; 0
    1310:	88 23       	and	r24, r24
    1312:	a9 f1       	breq	.+106    	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   {
				   *Copy_pu8ReturnedPinValue =DIO_u8_HIGH;
    1314:	ec 81       	ldd	r30, Y+4	; 0x04
    1316:	fd 81       	ldd	r31, Y+5	; 0x05
    1318:	81 e0       	ldi	r24, 0x01	; 1
    131a:	80 83       	st	Z, r24
    131c:	30 c0       	rjmp	.+96     	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   }
			break;
			case DIO_u8_PORTD: 
			   if(GET_BIT(PIND_u8_REG,Copy_u8PinID)== 0)
    131e:	e0 e3       	ldi	r30, 0x30	; 48
    1320:	f0 e0       	ldi	r31, 0x00	; 0
    1322:	80 81       	ld	r24, Z
    1324:	28 2f       	mov	r18, r24
    1326:	30 e0       	ldi	r19, 0x00	; 0
    1328:	8b 81       	ldd	r24, Y+3	; 0x03
    132a:	88 2f       	mov	r24, r24
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	a9 01       	movw	r20, r18
    1330:	02 c0       	rjmp	.+4      	; 0x1336 <DIO_u8GetPinValue+0x1b6>
    1332:	55 95       	asr	r21
    1334:	47 95       	ror	r20
    1336:	8a 95       	dec	r24
    1338:	e2 f7       	brpl	.-8      	; 0x1332 <DIO_u8GetPinValue+0x1b2>
    133a:	ca 01       	movw	r24, r20
    133c:	81 70       	andi	r24, 0x01	; 1
    133e:	90 70       	andi	r25, 0x00	; 0
    1340:	00 97       	sbiw	r24, 0x00	; 0
    1342:	21 f4       	brne	.+8      	; 0x134c <DIO_u8GetPinValue+0x1cc>
			   {
				   *Copy_pu8ReturnedPinValue = DIO_u8_LOW;
    1344:	ec 81       	ldd	r30, Y+4	; 0x04
    1346:	fd 81       	ldd	r31, Y+5	; 0x05
    1348:	10 82       	st	Z, r1
    134a:	19 c0       	rjmp	.+50     	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   }
			   else if(GET_BIT(PIND_u8_REG,Copy_u8PinID)!=0)
    134c:	e0 e3       	ldi	r30, 0x30	; 48
    134e:	f0 e0       	ldi	r31, 0x00	; 0
    1350:	80 81       	ld	r24, Z
    1352:	28 2f       	mov	r18, r24
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	8b 81       	ldd	r24, Y+3	; 0x03
    1358:	88 2f       	mov	r24, r24
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	a9 01       	movw	r20, r18
    135e:	02 c0       	rjmp	.+4      	; 0x1364 <DIO_u8GetPinValue+0x1e4>
    1360:	55 95       	asr	r21
    1362:	47 95       	ror	r20
    1364:	8a 95       	dec	r24
    1366:	e2 f7       	brpl	.-8      	; 0x1360 <DIO_u8GetPinValue+0x1e0>
    1368:	ca 01       	movw	r24, r20
    136a:	81 70       	andi	r24, 0x01	; 1
    136c:	90 70       	andi	r25, 0x00	; 0
    136e:	88 23       	and	r24, r24
    1370:	31 f0       	breq	.+12     	; 0x137e <DIO_u8GetPinValue+0x1fe>
			   {
				   *Copy_pu8ReturnedPinValue =DIO_u8_HIGH;
    1372:	ec 81       	ldd	r30, Y+4	; 0x04
    1374:	fd 81       	ldd	r31, Y+5	; 0x05
    1376:	81 e0       	ldi	r24, 0x01	; 1
    1378:	80 83       	st	Z, r24
    137a:	01 c0       	rjmp	.+2      	; 0x137e <DIO_u8GetPinValue+0x1fe>
			break;
		}
	}
	else
	{
		Local_u8ReturnState = STD_TYPES_NOK;
    137c:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ReturnState;
    137e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1380:	27 96       	adiw	r28, 0x07	; 7
    1382:	0f b6       	in	r0, 0x3f	; 63
    1384:	f8 94       	cli
    1386:	de bf       	out	0x3e, r29	; 62
    1388:	0f be       	out	0x3f, r0	; 63
    138a:	cd bf       	out	0x3d, r28	; 61
    138c:	cf 91       	pop	r28
    138e:	df 91       	pop	r29
    1390:	08 95       	ret

00001392 <DIO_u8SetPortDirection>:
u8 DIO_u8SetPortDirection(u8 Copy_u8PortID, u8 Copy_u8PortDirection )
{
    1392:	df 93       	push	r29
    1394:	cf 93       	push	r28
    1396:	cd b7       	in	r28, 0x3d	; 61
    1398:	de b7       	in	r29, 0x3e	; 62
    139a:	2d 97       	sbiw	r28, 0x0d	; 13
    139c:	0f b6       	in	r0, 0x3f	; 63
    139e:	f8 94       	cli
    13a0:	de bf       	out	0x3e, r29	; 62
    13a2:	0f be       	out	0x3f, r0	; 63
    13a4:	cd bf       	out	0x3d, r28	; 61
    13a6:	8a 83       	std	Y+2, r24	; 0x02
    13a8:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ReturnState = STD_TYPES_OK;
    13aa:	81 e0       	ldi	r24, 0x01	; 1
    13ac:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8PortID <= DIO_u8_PORTD) && ((Copy_u8PortDirection == DIO_u8_OUTPUT) || (Copy_u8PortDirection == DIO_u8_INPUT)))
    13ae:	8a 81       	ldd	r24, Y+2	; 0x02
    13b0:	84 30       	cpi	r24, 0x04	; 4
    13b2:	08 f0       	brcs	.+2      	; 0x13b6 <DIO_u8SetPortDirection+0x24>
    13b4:	87 c0       	rjmp	.+270    	; 0x14c4 <DIO_u8SetPortDirection+0x132>
    13b6:	8b 81       	ldd	r24, Y+3	; 0x03
    13b8:	81 30       	cpi	r24, 0x01	; 1
    13ba:	21 f0       	breq	.+8      	; 0x13c4 <DIO_u8SetPortDirection+0x32>
    13bc:	8b 81       	ldd	r24, Y+3	; 0x03
    13be:	88 23       	and	r24, r24
    13c0:	09 f0       	breq	.+2      	; 0x13c4 <DIO_u8SetPortDirection+0x32>
    13c2:	80 c0       	rjmp	.+256    	; 0x14c4 <DIO_u8SetPortDirection+0x132>
	{
		switch(Copy_u8PortID)
    13c4:	8a 81       	ldd	r24, Y+2	; 0x02
    13c6:	28 2f       	mov	r18, r24
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	3d 87       	std	Y+13, r19	; 0x0d
    13cc:	2c 87       	std	Y+12, r18	; 0x0c
    13ce:	8c 85       	ldd	r24, Y+12	; 0x0c
    13d0:	9d 85       	ldd	r25, Y+13	; 0x0d
    13d2:	81 30       	cpi	r24, 0x01	; 1
    13d4:	91 05       	cpc	r25, r1
    13d6:	71 f1       	breq	.+92     	; 0x1434 <DIO_u8SetPortDirection+0xa2>
    13d8:	2c 85       	ldd	r18, Y+12	; 0x0c
    13da:	3d 85       	ldd	r19, Y+13	; 0x0d
    13dc:	22 30       	cpi	r18, 0x02	; 2
    13de:	31 05       	cpc	r19, r1
    13e0:	2c f4       	brge	.+10     	; 0x13ec <DIO_u8SetPortDirection+0x5a>
    13e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    13e4:	9d 85       	ldd	r25, Y+13	; 0x0d
    13e6:	00 97       	sbiw	r24, 0x00	; 0
    13e8:	69 f0       	breq	.+26     	; 0x1404 <DIO_u8SetPortDirection+0x72>
    13ea:	6d c0       	rjmp	.+218    	; 0x14c6 <DIO_u8SetPortDirection+0x134>
    13ec:	2c 85       	ldd	r18, Y+12	; 0x0c
    13ee:	3d 85       	ldd	r19, Y+13	; 0x0d
    13f0:	22 30       	cpi	r18, 0x02	; 2
    13f2:	31 05       	cpc	r19, r1
    13f4:	b9 f1       	breq	.+110    	; 0x1464 <DIO_u8SetPortDirection+0xd2>
    13f6:	8c 85       	ldd	r24, Y+12	; 0x0c
    13f8:	9d 85       	ldd	r25, Y+13	; 0x0d
    13fa:	83 30       	cpi	r24, 0x03	; 3
    13fc:	91 05       	cpc	r25, r1
    13fe:	09 f4       	brne	.+2      	; 0x1402 <DIO_u8SetPortDirection+0x70>
    1400:	49 c0       	rjmp	.+146    	; 0x1494 <DIO_u8SetPortDirection+0x102>
    1402:	61 c0       	rjmp	.+194    	; 0x14c6 <DIO_u8SetPortDirection+0x134>
		{
			case DIO_u8_PORTA:
			switch(Copy_u8PortDirection)
    1404:	8b 81       	ldd	r24, Y+3	; 0x03
    1406:	28 2f       	mov	r18, r24
    1408:	30 e0       	ldi	r19, 0x00	; 0
    140a:	3b 87       	std	Y+11, r19	; 0x0b
    140c:	2a 87       	std	Y+10, r18	; 0x0a
    140e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1410:	9b 85       	ldd	r25, Y+11	; 0x0b
    1412:	00 97       	sbiw	r24, 0x00	; 0
    1414:	31 f0       	breq	.+12     	; 0x1422 <DIO_u8SetPortDirection+0x90>
    1416:	2a 85       	ldd	r18, Y+10	; 0x0a
    1418:	3b 85       	ldd	r19, Y+11	; 0x0b
    141a:	21 30       	cpi	r18, 0x01	; 1
    141c:	31 05       	cpc	r19, r1
    141e:	29 f0       	breq	.+10     	; 0x142a <DIO_u8SetPortDirection+0x98>
    1420:	52 c0       	rjmp	.+164    	; 0x14c6 <DIO_u8SetPortDirection+0x134>
			{
				case DIO_u8_INPUT: DDRA_u8_REG = 0x00;break;
    1422:	ea e3       	ldi	r30, 0x3A	; 58
    1424:	f0 e0       	ldi	r31, 0x00	; 0
    1426:	10 82       	st	Z, r1
    1428:	4e c0       	rjmp	.+156    	; 0x14c6 <DIO_u8SetPortDirection+0x134>
				case DIO_u8_OUTPUT:DDRA_u8_REG = 0xFF;break;
    142a:	ea e3       	ldi	r30, 0x3A	; 58
    142c:	f0 e0       	ldi	r31, 0x00	; 0
    142e:	8f ef       	ldi	r24, 0xFF	; 255
    1430:	80 83       	st	Z, r24
    1432:	49 c0       	rjmp	.+146    	; 0x14c6 <DIO_u8SetPortDirection+0x134>
			}
			break;
			case DIO_u8_PORTB:
			switch(Copy_u8PortDirection)
    1434:	8b 81       	ldd	r24, Y+3	; 0x03
    1436:	28 2f       	mov	r18, r24
    1438:	30 e0       	ldi	r19, 0x00	; 0
    143a:	39 87       	std	Y+9, r19	; 0x09
    143c:	28 87       	std	Y+8, r18	; 0x08
    143e:	88 85       	ldd	r24, Y+8	; 0x08
    1440:	99 85       	ldd	r25, Y+9	; 0x09
    1442:	00 97       	sbiw	r24, 0x00	; 0
    1444:	31 f0       	breq	.+12     	; 0x1452 <DIO_u8SetPortDirection+0xc0>
    1446:	28 85       	ldd	r18, Y+8	; 0x08
    1448:	39 85       	ldd	r19, Y+9	; 0x09
    144a:	21 30       	cpi	r18, 0x01	; 1
    144c:	31 05       	cpc	r19, r1
    144e:	29 f0       	breq	.+10     	; 0x145a <DIO_u8SetPortDirection+0xc8>
    1450:	3a c0       	rjmp	.+116    	; 0x14c6 <DIO_u8SetPortDirection+0x134>
			{
				case DIO_u8_INPUT: DDRB_u8_REG = 0x00;break;
    1452:	e7 e3       	ldi	r30, 0x37	; 55
    1454:	f0 e0       	ldi	r31, 0x00	; 0
    1456:	10 82       	st	Z, r1
    1458:	36 c0       	rjmp	.+108    	; 0x14c6 <DIO_u8SetPortDirection+0x134>
				case DIO_u8_OUTPUT:DDRB_u8_REG = 0xFF;break;
    145a:	e7 e3       	ldi	r30, 0x37	; 55
    145c:	f0 e0       	ldi	r31, 0x00	; 0
    145e:	8f ef       	ldi	r24, 0xFF	; 255
    1460:	80 83       	st	Z, r24
    1462:	31 c0       	rjmp	.+98     	; 0x14c6 <DIO_u8SetPortDirection+0x134>
			}
			break;
			case DIO_u8_PORTC:
			switch(Copy_u8PortDirection)
    1464:	8b 81       	ldd	r24, Y+3	; 0x03
    1466:	28 2f       	mov	r18, r24
    1468:	30 e0       	ldi	r19, 0x00	; 0
    146a:	3f 83       	std	Y+7, r19	; 0x07
    146c:	2e 83       	std	Y+6, r18	; 0x06
    146e:	8e 81       	ldd	r24, Y+6	; 0x06
    1470:	9f 81       	ldd	r25, Y+7	; 0x07
    1472:	00 97       	sbiw	r24, 0x00	; 0
    1474:	31 f0       	breq	.+12     	; 0x1482 <DIO_u8SetPortDirection+0xf0>
    1476:	2e 81       	ldd	r18, Y+6	; 0x06
    1478:	3f 81       	ldd	r19, Y+7	; 0x07
    147a:	21 30       	cpi	r18, 0x01	; 1
    147c:	31 05       	cpc	r19, r1
    147e:	29 f0       	breq	.+10     	; 0x148a <DIO_u8SetPortDirection+0xf8>
    1480:	22 c0       	rjmp	.+68     	; 0x14c6 <DIO_u8SetPortDirection+0x134>
			{
				case DIO_u8_INPUT: DDRC_u8_REG = 0x00;break;
    1482:	e4 e3       	ldi	r30, 0x34	; 52
    1484:	f0 e0       	ldi	r31, 0x00	; 0
    1486:	10 82       	st	Z, r1
    1488:	1e c0       	rjmp	.+60     	; 0x14c6 <DIO_u8SetPortDirection+0x134>
				case DIO_u8_OUTPUT:DDRC_u8_REG = 0xFF;break;
    148a:	e4 e3       	ldi	r30, 0x34	; 52
    148c:	f0 e0       	ldi	r31, 0x00	; 0
    148e:	8f ef       	ldi	r24, 0xFF	; 255
    1490:	80 83       	st	Z, r24
    1492:	19 c0       	rjmp	.+50     	; 0x14c6 <DIO_u8SetPortDirection+0x134>
			}
			break;
			case DIO_u8_PORTD:
			switch(Copy_u8PortDirection)
    1494:	8b 81       	ldd	r24, Y+3	; 0x03
    1496:	28 2f       	mov	r18, r24
    1498:	30 e0       	ldi	r19, 0x00	; 0
    149a:	3d 83       	std	Y+5, r19	; 0x05
    149c:	2c 83       	std	Y+4, r18	; 0x04
    149e:	8c 81       	ldd	r24, Y+4	; 0x04
    14a0:	9d 81       	ldd	r25, Y+5	; 0x05
    14a2:	00 97       	sbiw	r24, 0x00	; 0
    14a4:	31 f0       	breq	.+12     	; 0x14b2 <DIO_u8SetPortDirection+0x120>
    14a6:	2c 81       	ldd	r18, Y+4	; 0x04
    14a8:	3d 81       	ldd	r19, Y+5	; 0x05
    14aa:	21 30       	cpi	r18, 0x01	; 1
    14ac:	31 05       	cpc	r19, r1
    14ae:	29 f0       	breq	.+10     	; 0x14ba <DIO_u8SetPortDirection+0x128>
    14b0:	0a c0       	rjmp	.+20     	; 0x14c6 <DIO_u8SetPortDirection+0x134>
			{
				case DIO_u8_INPUT: DDRD_u8_REG = 0x00;break;
    14b2:	e1 e3       	ldi	r30, 0x31	; 49
    14b4:	f0 e0       	ldi	r31, 0x00	; 0
    14b6:	10 82       	st	Z, r1
    14b8:	06 c0       	rjmp	.+12     	; 0x14c6 <DIO_u8SetPortDirection+0x134>
				case DIO_u8_OUTPUT:DDRD_u8_REG = 0xFF;break;
    14ba:	e1 e3       	ldi	r30, 0x31	; 49
    14bc:	f0 e0       	ldi	r31, 0x00	; 0
    14be:	8f ef       	ldi	r24, 0xFF	; 255
    14c0:	80 83       	st	Z, r24
    14c2:	01 c0       	rjmp	.+2      	; 0x14c6 <DIO_u8SetPortDirection+0x134>
			break;
		}
	}
	else
	{
		Local_u8ReturnState = STD_TYPES_NOK;
    14c4:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ReturnState;
    14c6:	89 81       	ldd	r24, Y+1	; 0x01
}
    14c8:	2d 96       	adiw	r28, 0x0d	; 13
    14ca:	0f b6       	in	r0, 0x3f	; 63
    14cc:	f8 94       	cli
    14ce:	de bf       	out	0x3e, r29	; 62
    14d0:	0f be       	out	0x3f, r0	; 63
    14d2:	cd bf       	out	0x3d, r28	; 61
    14d4:	cf 91       	pop	r28
    14d6:	df 91       	pop	r29
    14d8:	08 95       	ret

000014da <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue    (u8 Copy_u8PortID, u8 Copy_u8PortValue)
{
    14da:	df 93       	push	r29
    14dc:	cf 93       	push	r28
    14de:	00 d0       	rcall	.+0      	; 0x14e0 <DIO_u8SetPortValue+0x6>
    14e0:	00 d0       	rcall	.+0      	; 0x14e2 <DIO_u8SetPortValue+0x8>
    14e2:	0f 92       	push	r0
    14e4:	cd b7       	in	r28, 0x3d	; 61
    14e6:	de b7       	in	r29, 0x3e	; 62
    14e8:	8a 83       	std	Y+2, r24	; 0x02
    14ea:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ReturnState = STD_TYPES_OK;
    14ec:	81 e0       	ldi	r24, 0x01	; 1
    14ee:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8PortID)
    14f0:	8a 81       	ldd	r24, Y+2	; 0x02
    14f2:	28 2f       	mov	r18, r24
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	3d 83       	std	Y+5, r19	; 0x05
    14f8:	2c 83       	std	Y+4, r18	; 0x04
    14fa:	8c 81       	ldd	r24, Y+4	; 0x04
    14fc:	9d 81       	ldd	r25, Y+5	; 0x05
    14fe:	81 30       	cpi	r24, 0x01	; 1
    1500:	91 05       	cpc	r25, r1
    1502:	d1 f0       	breq	.+52     	; 0x1538 <DIO_u8SetPortValue+0x5e>
    1504:	2c 81       	ldd	r18, Y+4	; 0x04
    1506:	3d 81       	ldd	r19, Y+5	; 0x05
    1508:	22 30       	cpi	r18, 0x02	; 2
    150a:	31 05       	cpc	r19, r1
    150c:	2c f4       	brge	.+10     	; 0x1518 <DIO_u8SetPortValue+0x3e>
    150e:	8c 81       	ldd	r24, Y+4	; 0x04
    1510:	9d 81       	ldd	r25, Y+5	; 0x05
    1512:	00 97       	sbiw	r24, 0x00	; 0
    1514:	61 f0       	breq	.+24     	; 0x152e <DIO_u8SetPortValue+0x54>
    1516:	1f c0       	rjmp	.+62     	; 0x1556 <DIO_u8SetPortValue+0x7c>
    1518:	2c 81       	ldd	r18, Y+4	; 0x04
    151a:	3d 81       	ldd	r19, Y+5	; 0x05
    151c:	22 30       	cpi	r18, 0x02	; 2
    151e:	31 05       	cpc	r19, r1
    1520:	81 f0       	breq	.+32     	; 0x1542 <DIO_u8SetPortValue+0x68>
    1522:	8c 81       	ldd	r24, Y+4	; 0x04
    1524:	9d 81       	ldd	r25, Y+5	; 0x05
    1526:	83 30       	cpi	r24, 0x03	; 3
    1528:	91 05       	cpc	r25, r1
    152a:	81 f0       	breq	.+32     	; 0x154c <DIO_u8SetPortValue+0x72>
    152c:	14 c0       	rjmp	.+40     	; 0x1556 <DIO_u8SetPortValue+0x7c>
	{
		case DIO_u8_PORTA:PORTA_u8_REG = Copy_u8PortValue; break;
    152e:	eb e3       	ldi	r30, 0x3B	; 59
    1530:	f0 e0       	ldi	r31, 0x00	; 0
    1532:	8b 81       	ldd	r24, Y+3	; 0x03
    1534:	80 83       	st	Z, r24
    1536:	10 c0       	rjmp	.+32     	; 0x1558 <DIO_u8SetPortValue+0x7e>
		case DIO_u8_PORTB:PORTB_u8_REG = Copy_u8PortValue; break;
    1538:	e8 e3       	ldi	r30, 0x38	; 56
    153a:	f0 e0       	ldi	r31, 0x00	; 0
    153c:	8b 81       	ldd	r24, Y+3	; 0x03
    153e:	80 83       	st	Z, r24
    1540:	0b c0       	rjmp	.+22     	; 0x1558 <DIO_u8SetPortValue+0x7e>
		case DIO_u8_PORTC:PORTC_u8_REG = Copy_u8PortValue; break;
    1542:	e5 e3       	ldi	r30, 0x35	; 53
    1544:	f0 e0       	ldi	r31, 0x00	; 0
    1546:	8b 81       	ldd	r24, Y+3	; 0x03
    1548:	80 83       	st	Z, r24
    154a:	06 c0       	rjmp	.+12     	; 0x1558 <DIO_u8SetPortValue+0x7e>
		case DIO_u8_PORTD:PORTD_u8_REG = Copy_u8PortValue; break;
    154c:	e2 e3       	ldi	r30, 0x32	; 50
    154e:	f0 e0       	ldi	r31, 0x00	; 0
    1550:	8b 81       	ldd	r24, Y+3	; 0x03
    1552:	80 83       	st	Z, r24
    1554:	01 c0       	rjmp	.+2      	; 0x1558 <DIO_u8SetPortValue+0x7e>
		default : Local_u8ReturnState = STD_TYPES_NOK;
    1556:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ReturnState;
    1558:	89 81       	ldd	r24, Y+1	; 0x01
}
    155a:	0f 90       	pop	r0
    155c:	0f 90       	pop	r0
    155e:	0f 90       	pop	r0
    1560:	0f 90       	pop	r0
    1562:	0f 90       	pop	r0
    1564:	cf 91       	pop	r28
    1566:	df 91       	pop	r29
    1568:	08 95       	ret

0000156a <DIO_u8GetPortValue>:

u8 DIO_u8GetPortValue    (u8 Copy_u8PortID, u8 * Copy_pu8ReturnedPortValue)
{
    156a:	df 93       	push	r29
    156c:	cf 93       	push	r28
    156e:	00 d0       	rcall	.+0      	; 0x1570 <DIO_u8GetPortValue+0x6>
    1570:	00 d0       	rcall	.+0      	; 0x1572 <DIO_u8GetPortValue+0x8>
    1572:	00 d0       	rcall	.+0      	; 0x1574 <DIO_u8GetPortValue+0xa>
    1574:	cd b7       	in	r28, 0x3d	; 61
    1576:	de b7       	in	r29, 0x3e	; 62
    1578:	8a 83       	std	Y+2, r24	; 0x02
    157a:	7c 83       	std	Y+4, r23	; 0x04
    157c:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ReturnState = STD_TYPES_OK;
    157e:	81 e0       	ldi	r24, 0x01	; 1
    1580:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_pu8ReturnedPortValue != NULL)
    1582:	8b 81       	ldd	r24, Y+3	; 0x03
    1584:	9c 81       	ldd	r25, Y+4	; 0x04
    1586:	00 97       	sbiw	r24, 0x00	; 0
    1588:	e9 f1       	breq	.+122    	; 0x1604 <DIO_u8GetPortValue+0x9a>
	{
		switch(Copy_u8PortID)
    158a:	8a 81       	ldd	r24, Y+2	; 0x02
    158c:	28 2f       	mov	r18, r24
    158e:	30 e0       	ldi	r19, 0x00	; 0
    1590:	3e 83       	std	Y+6, r19	; 0x06
    1592:	2d 83       	std	Y+5, r18	; 0x05
    1594:	8d 81       	ldd	r24, Y+5	; 0x05
    1596:	9e 81       	ldd	r25, Y+6	; 0x06
    1598:	81 30       	cpi	r24, 0x01	; 1
    159a:	91 05       	cpc	r25, r1
    159c:	e1 f0       	breq	.+56     	; 0x15d6 <DIO_u8GetPortValue+0x6c>
    159e:	2d 81       	ldd	r18, Y+5	; 0x05
    15a0:	3e 81       	ldd	r19, Y+6	; 0x06
    15a2:	22 30       	cpi	r18, 0x02	; 2
    15a4:	31 05       	cpc	r19, r1
    15a6:	2c f4       	brge	.+10     	; 0x15b2 <DIO_u8GetPortValue+0x48>
    15a8:	8d 81       	ldd	r24, Y+5	; 0x05
    15aa:	9e 81       	ldd	r25, Y+6	; 0x06
    15ac:	00 97       	sbiw	r24, 0x00	; 0
    15ae:	61 f0       	breq	.+24     	; 0x15c8 <DIO_u8GetPortValue+0x5e>
    15b0:	27 c0       	rjmp	.+78     	; 0x1600 <DIO_u8GetPortValue+0x96>
    15b2:	2d 81       	ldd	r18, Y+5	; 0x05
    15b4:	3e 81       	ldd	r19, Y+6	; 0x06
    15b6:	22 30       	cpi	r18, 0x02	; 2
    15b8:	31 05       	cpc	r19, r1
    15ba:	a1 f0       	breq	.+40     	; 0x15e4 <DIO_u8GetPortValue+0x7a>
    15bc:	8d 81       	ldd	r24, Y+5	; 0x05
    15be:	9e 81       	ldd	r25, Y+6	; 0x06
    15c0:	83 30       	cpi	r24, 0x03	; 3
    15c2:	91 05       	cpc	r25, r1
    15c4:	b1 f0       	breq	.+44     	; 0x15f2 <DIO_u8GetPortValue+0x88>
    15c6:	1c c0       	rjmp	.+56     	; 0x1600 <DIO_u8GetPortValue+0x96>
		{
		   case DIO_u8_PORTA: *Copy_pu8ReturnedPortValue = PINA_u8_REG; break;
    15c8:	e9 e3       	ldi	r30, 0x39	; 57
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	80 81       	ld	r24, Z
    15ce:	eb 81       	ldd	r30, Y+3	; 0x03
    15d0:	fc 81       	ldd	r31, Y+4	; 0x04
    15d2:	80 83       	st	Z, r24
    15d4:	18 c0       	rjmp	.+48     	; 0x1606 <DIO_u8GetPortValue+0x9c>
		   case DIO_u8_PORTB: *Copy_pu8ReturnedPortValue = PINB_u8_REG; break;
    15d6:	e6 e3       	ldi	r30, 0x36	; 54
    15d8:	f0 e0       	ldi	r31, 0x00	; 0
    15da:	80 81       	ld	r24, Z
    15dc:	eb 81       	ldd	r30, Y+3	; 0x03
    15de:	fc 81       	ldd	r31, Y+4	; 0x04
    15e0:	80 83       	st	Z, r24
    15e2:	11 c0       	rjmp	.+34     	; 0x1606 <DIO_u8GetPortValue+0x9c>
		   case DIO_u8_PORTC: *Copy_pu8ReturnedPortValue = PINC_u8_REG; break;
    15e4:	e3 e3       	ldi	r30, 0x33	; 51
    15e6:	f0 e0       	ldi	r31, 0x00	; 0
    15e8:	80 81       	ld	r24, Z
    15ea:	eb 81       	ldd	r30, Y+3	; 0x03
    15ec:	fc 81       	ldd	r31, Y+4	; 0x04
    15ee:	80 83       	st	Z, r24
    15f0:	0a c0       	rjmp	.+20     	; 0x1606 <DIO_u8GetPortValue+0x9c>
		   case DIO_u8_PORTD: *Copy_pu8ReturnedPortValue = PIND_u8_REG; break;
    15f2:	e0 e3       	ldi	r30, 0x30	; 48
    15f4:	f0 e0       	ldi	r31, 0x00	; 0
    15f6:	80 81       	ld	r24, Z
    15f8:	eb 81       	ldd	r30, Y+3	; 0x03
    15fa:	fc 81       	ldd	r31, Y+4	; 0x04
    15fc:	80 83       	st	Z, r24
    15fe:	03 c0       	rjmp	.+6      	; 0x1606 <DIO_u8GetPortValue+0x9c>
		   default : Local_u8ReturnState = STD_TYPES_NOK;
    1600:	19 82       	std	Y+1, r1	; 0x01
    1602:	01 c0       	rjmp	.+2      	; 0x1606 <DIO_u8GetPortValue+0x9c>
		}
	}
	else
	{
		Local_u8ReturnState = STD_TYPES_NOK;
    1604:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ReturnState;
    1606:	89 81       	ldd	r24, Y+1	; 0x01
    1608:	26 96       	adiw	r28, 0x06	; 6
    160a:	0f b6       	in	r0, 0x3f	; 63
    160c:	f8 94       	cli
    160e:	de bf       	out	0x3e, r29	; 62
    1610:	0f be       	out	0x3f, r0	; 63
    1612:	cd bf       	out	0x3d, r28	; 61
    1614:	cf 91       	pop	r28
    1616:	df 91       	pop	r29
    1618:	08 95       	ret

0000161a <LCD_voidInit>:
#include "LCD_interface.h"
#include "LCD_private.h"
#include "LCD_config.h"

void LCD_voidInit     (void)
{
    161a:	0f 93       	push	r16
    161c:	1f 93       	push	r17
    161e:	df 93       	push	r29
    1620:	cf 93       	push	r28
    1622:	cd b7       	in	r28, 0x3d	; 61
    1624:	de b7       	in	r29, 0x3e	; 62
    1626:	cc 54       	subi	r28, 0x4C	; 76
    1628:	d0 40       	sbci	r29, 0x00	; 0
    162a:	0f b6       	in	r0, 0x3f	; 63
    162c:	f8 94       	cli
    162e:	de bf       	out	0x3e, r29	; 62
    1630:	0f be       	out	0x3f, r0	; 63
    1632:	cd bf       	out	0x3d, r28	; 61
    1634:	fe 01       	movw	r30, r28
    1636:	e7 5b       	subi	r30, 0xB7	; 183
    1638:	ff 4f       	sbci	r31, 0xFF	; 255
    163a:	80 e0       	ldi	r24, 0x00	; 0
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	ac e0       	ldi	r26, 0x0C	; 12
    1640:	b2 e4       	ldi	r27, 0x42	; 66
    1642:	80 83       	st	Z, r24
    1644:	91 83       	std	Z+1, r25	; 0x01
    1646:	a2 83       	std	Z+2, r26	; 0x02
    1648:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    164a:	8e 01       	movw	r16, r28
    164c:	0b 5b       	subi	r16, 0xBB	; 187
    164e:	1f 4f       	sbci	r17, 0xFF	; 255
    1650:	fe 01       	movw	r30, r28
    1652:	e7 5b       	subi	r30, 0xB7	; 183
    1654:	ff 4f       	sbci	r31, 0xFF	; 255
    1656:	60 81       	ld	r22, Z
    1658:	71 81       	ldd	r23, Z+1	; 0x01
    165a:	82 81       	ldd	r24, Z+2	; 0x02
    165c:	93 81       	ldd	r25, Z+3	; 0x03
    165e:	20 e0       	ldi	r18, 0x00	; 0
    1660:	30 e0       	ldi	r19, 0x00	; 0
    1662:	4a ef       	ldi	r20, 0xFA	; 250
    1664:	54 e4       	ldi	r21, 0x44	; 68
    1666:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    166a:	dc 01       	movw	r26, r24
    166c:	cb 01       	movw	r24, r22
    166e:	f8 01       	movw	r30, r16
    1670:	80 83       	st	Z, r24
    1672:	91 83       	std	Z+1, r25	; 0x01
    1674:	a2 83       	std	Z+2, r26	; 0x02
    1676:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1678:	fe 01       	movw	r30, r28
    167a:	eb 5b       	subi	r30, 0xBB	; 187
    167c:	ff 4f       	sbci	r31, 0xFF	; 255
    167e:	60 81       	ld	r22, Z
    1680:	71 81       	ldd	r23, Z+1	; 0x01
    1682:	82 81       	ldd	r24, Z+2	; 0x02
    1684:	93 81       	ldd	r25, Z+3	; 0x03
    1686:	20 e0       	ldi	r18, 0x00	; 0
    1688:	30 e0       	ldi	r19, 0x00	; 0
    168a:	40 e8       	ldi	r20, 0x80	; 128
    168c:	5f e3       	ldi	r21, 0x3F	; 63
    168e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1692:	88 23       	and	r24, r24
    1694:	44 f4       	brge	.+16     	; 0x16a6 <LCD_voidInit+0x8c>
		__ticks = 1;
    1696:	fe 01       	movw	r30, r28
    1698:	ed 5b       	subi	r30, 0xBD	; 189
    169a:	ff 4f       	sbci	r31, 0xFF	; 255
    169c:	81 e0       	ldi	r24, 0x01	; 1
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	91 83       	std	Z+1, r25	; 0x01
    16a2:	80 83       	st	Z, r24
    16a4:	64 c0       	rjmp	.+200    	; 0x176e <LCD_voidInit+0x154>
	else if (__tmp > 65535)
    16a6:	fe 01       	movw	r30, r28
    16a8:	eb 5b       	subi	r30, 0xBB	; 187
    16aa:	ff 4f       	sbci	r31, 0xFF	; 255
    16ac:	60 81       	ld	r22, Z
    16ae:	71 81       	ldd	r23, Z+1	; 0x01
    16b0:	82 81       	ldd	r24, Z+2	; 0x02
    16b2:	93 81       	ldd	r25, Z+3	; 0x03
    16b4:	20 e0       	ldi	r18, 0x00	; 0
    16b6:	3f ef       	ldi	r19, 0xFF	; 255
    16b8:	4f e7       	ldi	r20, 0x7F	; 127
    16ba:	57 e4       	ldi	r21, 0x47	; 71
    16bc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    16c0:	18 16       	cp	r1, r24
    16c2:	0c f0       	brlt	.+2      	; 0x16c6 <LCD_voidInit+0xac>
    16c4:	43 c0       	rjmp	.+134    	; 0x174c <LCD_voidInit+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16c6:	fe 01       	movw	r30, r28
    16c8:	e7 5b       	subi	r30, 0xB7	; 183
    16ca:	ff 4f       	sbci	r31, 0xFF	; 255
    16cc:	60 81       	ld	r22, Z
    16ce:	71 81       	ldd	r23, Z+1	; 0x01
    16d0:	82 81       	ldd	r24, Z+2	; 0x02
    16d2:	93 81       	ldd	r25, Z+3	; 0x03
    16d4:	20 e0       	ldi	r18, 0x00	; 0
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	40 e2       	ldi	r20, 0x20	; 32
    16da:	51 e4       	ldi	r21, 0x41	; 65
    16dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16e0:	dc 01       	movw	r26, r24
    16e2:	cb 01       	movw	r24, r22
    16e4:	8e 01       	movw	r16, r28
    16e6:	0d 5b       	subi	r16, 0xBD	; 189
    16e8:	1f 4f       	sbci	r17, 0xFF	; 255
    16ea:	bc 01       	movw	r22, r24
    16ec:	cd 01       	movw	r24, r26
    16ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16f2:	dc 01       	movw	r26, r24
    16f4:	cb 01       	movw	r24, r22
    16f6:	f8 01       	movw	r30, r16
    16f8:	91 83       	std	Z+1, r25	; 0x01
    16fa:	80 83       	st	Z, r24
    16fc:	1f c0       	rjmp	.+62     	; 0x173c <LCD_voidInit+0x122>
    16fe:	fe 01       	movw	r30, r28
    1700:	ef 5b       	subi	r30, 0xBF	; 191
    1702:	ff 4f       	sbci	r31, 0xFF	; 255
    1704:	88 ec       	ldi	r24, 0xC8	; 200
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	91 83       	std	Z+1, r25	; 0x01
    170a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    170c:	fe 01       	movw	r30, r28
    170e:	ef 5b       	subi	r30, 0xBF	; 191
    1710:	ff 4f       	sbci	r31, 0xFF	; 255
    1712:	80 81       	ld	r24, Z
    1714:	91 81       	ldd	r25, Z+1	; 0x01
    1716:	01 97       	sbiw	r24, 0x01	; 1
    1718:	f1 f7       	brne	.-4      	; 0x1716 <LCD_voidInit+0xfc>
    171a:	fe 01       	movw	r30, r28
    171c:	ef 5b       	subi	r30, 0xBF	; 191
    171e:	ff 4f       	sbci	r31, 0xFF	; 255
    1720:	91 83       	std	Z+1, r25	; 0x01
    1722:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1724:	de 01       	movw	r26, r28
    1726:	ad 5b       	subi	r26, 0xBD	; 189
    1728:	bf 4f       	sbci	r27, 0xFF	; 255
    172a:	fe 01       	movw	r30, r28
    172c:	ed 5b       	subi	r30, 0xBD	; 189
    172e:	ff 4f       	sbci	r31, 0xFF	; 255
    1730:	80 81       	ld	r24, Z
    1732:	91 81       	ldd	r25, Z+1	; 0x01
    1734:	01 97       	sbiw	r24, 0x01	; 1
    1736:	11 96       	adiw	r26, 0x01	; 1
    1738:	9c 93       	st	X, r25
    173a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    173c:	fe 01       	movw	r30, r28
    173e:	ed 5b       	subi	r30, 0xBD	; 189
    1740:	ff 4f       	sbci	r31, 0xFF	; 255
    1742:	80 81       	ld	r24, Z
    1744:	91 81       	ldd	r25, Z+1	; 0x01
    1746:	00 97       	sbiw	r24, 0x00	; 0
    1748:	d1 f6       	brne	.-76     	; 0x16fe <LCD_voidInit+0xe4>
    174a:	24 c0       	rjmp	.+72     	; 0x1794 <LCD_voidInit+0x17a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    174c:	8e 01       	movw	r16, r28
    174e:	0d 5b       	subi	r16, 0xBD	; 189
    1750:	1f 4f       	sbci	r17, 0xFF	; 255
    1752:	fe 01       	movw	r30, r28
    1754:	eb 5b       	subi	r30, 0xBB	; 187
    1756:	ff 4f       	sbci	r31, 0xFF	; 255
    1758:	60 81       	ld	r22, Z
    175a:	71 81       	ldd	r23, Z+1	; 0x01
    175c:	82 81       	ldd	r24, Z+2	; 0x02
    175e:	93 81       	ldd	r25, Z+3	; 0x03
    1760:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1764:	dc 01       	movw	r26, r24
    1766:	cb 01       	movw	r24, r22
    1768:	f8 01       	movw	r30, r16
    176a:	91 83       	std	Z+1, r25	; 0x01
    176c:	80 83       	st	Z, r24
    176e:	fe 01       	movw	r30, r28
    1770:	ed 5b       	subi	r30, 0xBD	; 189
    1772:	ff 4f       	sbci	r31, 0xFF	; 255
    1774:	80 81       	ld	r24, Z
    1776:	91 81       	ldd	r25, Z+1	; 0x01
    1778:	fe 01       	movw	r30, r28
    177a:	ff 96       	adiw	r30, 0x3f	; 63
    177c:	91 83       	std	Z+1, r25	; 0x01
    177e:	80 83       	st	Z, r24
    1780:	fe 01       	movw	r30, r28
    1782:	ff 96       	adiw	r30, 0x3f	; 63
    1784:	80 81       	ld	r24, Z
    1786:	91 81       	ldd	r25, Z+1	; 0x01
    1788:	01 97       	sbiw	r24, 0x01	; 1
    178a:	f1 f7       	brne	.-4      	; 0x1788 <LCD_voidInit+0x16e>
    178c:	fe 01       	movw	r30, r28
    178e:	ff 96       	adiw	r30, 0x3f	; 63
    1790:	91 83       	std	Z+1, r25	; 0x01
    1792:	80 83       	st	Z, r24
	_delay_ms(35);
	/* Function Set Cmnd 0b00111000 */
	LCD_voidSendCmnd(0b00111000);
    1794:	88 e3       	ldi	r24, 0x38	; 56
    1796:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    179a:	80 e0       	ldi	r24, 0x00	; 0
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	a0 e2       	ldi	r26, 0x20	; 32
    17a0:	b2 e4       	ldi	r27, 0x42	; 66
    17a2:	8b af       	std	Y+59, r24	; 0x3b
    17a4:	9c af       	std	Y+60, r25	; 0x3c
    17a6:	ad af       	std	Y+61, r26	; 0x3d
    17a8:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    17aa:	6b ad       	ldd	r22, Y+59	; 0x3b
    17ac:	7c ad       	ldd	r23, Y+60	; 0x3c
    17ae:	8d ad       	ldd	r24, Y+61	; 0x3d
    17b0:	9e ad       	ldd	r25, Y+62	; 0x3e
    17b2:	2b ea       	ldi	r18, 0xAB	; 171
    17b4:	3a ea       	ldi	r19, 0xAA	; 170
    17b6:	4a e2       	ldi	r20, 0x2A	; 42
    17b8:	50 e4       	ldi	r21, 0x40	; 64
    17ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17be:	dc 01       	movw	r26, r24
    17c0:	cb 01       	movw	r24, r22
    17c2:	8f ab       	std	Y+55, r24	; 0x37
    17c4:	98 af       	std	Y+56, r25	; 0x38
    17c6:	a9 af       	std	Y+57, r26	; 0x39
    17c8:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    17ca:	6f a9       	ldd	r22, Y+55	; 0x37
    17cc:	78 ad       	ldd	r23, Y+56	; 0x38
    17ce:	89 ad       	ldd	r24, Y+57	; 0x39
    17d0:	9a ad       	ldd	r25, Y+58	; 0x3a
    17d2:	20 e0       	ldi	r18, 0x00	; 0
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	40 e8       	ldi	r20, 0x80	; 128
    17d8:	5f e3       	ldi	r21, 0x3F	; 63
    17da:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    17de:	88 23       	and	r24, r24
    17e0:	1c f4       	brge	.+6      	; 0x17e8 <LCD_voidInit+0x1ce>
		__ticks = 1;
    17e2:	81 e0       	ldi	r24, 0x01	; 1
    17e4:	8e ab       	std	Y+54, r24	; 0x36
    17e6:	91 c0       	rjmp	.+290    	; 0x190a <LCD_voidInit+0x2f0>
	else if (__tmp > 255)
    17e8:	6f a9       	ldd	r22, Y+55	; 0x37
    17ea:	78 ad       	ldd	r23, Y+56	; 0x38
    17ec:	89 ad       	ldd	r24, Y+57	; 0x39
    17ee:	9a ad       	ldd	r25, Y+58	; 0x3a
    17f0:	20 e0       	ldi	r18, 0x00	; 0
    17f2:	30 e0       	ldi	r19, 0x00	; 0
    17f4:	4f e7       	ldi	r20, 0x7F	; 127
    17f6:	53 e4       	ldi	r21, 0x43	; 67
    17f8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    17fc:	18 16       	cp	r1, r24
    17fe:	0c f0       	brlt	.+2      	; 0x1802 <LCD_voidInit+0x1e8>
    1800:	7b c0       	rjmp	.+246    	; 0x18f8 <LCD_voidInit+0x2de>
	{
		_delay_ms(__us / 1000.0);
    1802:	6b ad       	ldd	r22, Y+59	; 0x3b
    1804:	7c ad       	ldd	r23, Y+60	; 0x3c
    1806:	8d ad       	ldd	r24, Y+61	; 0x3d
    1808:	9e ad       	ldd	r25, Y+62	; 0x3e
    180a:	20 e0       	ldi	r18, 0x00	; 0
    180c:	30 e0       	ldi	r19, 0x00	; 0
    180e:	4a e7       	ldi	r20, 0x7A	; 122
    1810:	54 e4       	ldi	r21, 0x44	; 68
    1812:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1816:	dc 01       	movw	r26, r24
    1818:	cb 01       	movw	r24, r22
    181a:	8a ab       	std	Y+50, r24	; 0x32
    181c:	9b ab       	std	Y+51, r25	; 0x33
    181e:	ac ab       	std	Y+52, r26	; 0x34
    1820:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1822:	6a a9       	ldd	r22, Y+50	; 0x32
    1824:	7b a9       	ldd	r23, Y+51	; 0x33
    1826:	8c a9       	ldd	r24, Y+52	; 0x34
    1828:	9d a9       	ldd	r25, Y+53	; 0x35
    182a:	20 e0       	ldi	r18, 0x00	; 0
    182c:	30 e0       	ldi	r19, 0x00	; 0
    182e:	4a ef       	ldi	r20, 0xFA	; 250
    1830:	54 e4       	ldi	r21, 0x44	; 68
    1832:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1836:	dc 01       	movw	r26, r24
    1838:	cb 01       	movw	r24, r22
    183a:	8e a7       	std	Y+46, r24	; 0x2e
    183c:	9f a7       	std	Y+47, r25	; 0x2f
    183e:	a8 ab       	std	Y+48, r26	; 0x30
    1840:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    1842:	6e a5       	ldd	r22, Y+46	; 0x2e
    1844:	7f a5       	ldd	r23, Y+47	; 0x2f
    1846:	88 a9       	ldd	r24, Y+48	; 0x30
    1848:	99 a9       	ldd	r25, Y+49	; 0x31
    184a:	20 e0       	ldi	r18, 0x00	; 0
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	40 e8       	ldi	r20, 0x80	; 128
    1850:	5f e3       	ldi	r21, 0x3F	; 63
    1852:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1856:	88 23       	and	r24, r24
    1858:	2c f4       	brge	.+10     	; 0x1864 <LCD_voidInit+0x24a>
		__ticks = 1;
    185a:	81 e0       	ldi	r24, 0x01	; 1
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	9d a7       	std	Y+45, r25	; 0x2d
    1860:	8c a7       	std	Y+44, r24	; 0x2c
    1862:	3f c0       	rjmp	.+126    	; 0x18e2 <LCD_voidInit+0x2c8>
	else if (__tmp > 65535)
    1864:	6e a5       	ldd	r22, Y+46	; 0x2e
    1866:	7f a5       	ldd	r23, Y+47	; 0x2f
    1868:	88 a9       	ldd	r24, Y+48	; 0x30
    186a:	99 a9       	ldd	r25, Y+49	; 0x31
    186c:	20 e0       	ldi	r18, 0x00	; 0
    186e:	3f ef       	ldi	r19, 0xFF	; 255
    1870:	4f e7       	ldi	r20, 0x7F	; 127
    1872:	57 e4       	ldi	r21, 0x47	; 71
    1874:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1878:	18 16       	cp	r1, r24
    187a:	4c f5       	brge	.+82     	; 0x18ce <LCD_voidInit+0x2b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    187c:	6a a9       	ldd	r22, Y+50	; 0x32
    187e:	7b a9       	ldd	r23, Y+51	; 0x33
    1880:	8c a9       	ldd	r24, Y+52	; 0x34
    1882:	9d a9       	ldd	r25, Y+53	; 0x35
    1884:	20 e0       	ldi	r18, 0x00	; 0
    1886:	30 e0       	ldi	r19, 0x00	; 0
    1888:	40 e2       	ldi	r20, 0x20	; 32
    188a:	51 e4       	ldi	r21, 0x41	; 65
    188c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1890:	dc 01       	movw	r26, r24
    1892:	cb 01       	movw	r24, r22
    1894:	bc 01       	movw	r22, r24
    1896:	cd 01       	movw	r24, r26
    1898:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    189c:	dc 01       	movw	r26, r24
    189e:	cb 01       	movw	r24, r22
    18a0:	9d a7       	std	Y+45, r25	; 0x2d
    18a2:	8c a7       	std	Y+44, r24	; 0x2c
    18a4:	0f c0       	rjmp	.+30     	; 0x18c4 <LCD_voidInit+0x2aa>
    18a6:	88 ec       	ldi	r24, 0xC8	; 200
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	9b a7       	std	Y+43, r25	; 0x2b
    18ac:	8a a7       	std	Y+42, r24	; 0x2a
    18ae:	8a a5       	ldd	r24, Y+42	; 0x2a
    18b0:	9b a5       	ldd	r25, Y+43	; 0x2b
    18b2:	01 97       	sbiw	r24, 0x01	; 1
    18b4:	f1 f7       	brne	.-4      	; 0x18b2 <LCD_voidInit+0x298>
    18b6:	9b a7       	std	Y+43, r25	; 0x2b
    18b8:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18ba:	8c a5       	ldd	r24, Y+44	; 0x2c
    18bc:	9d a5       	ldd	r25, Y+45	; 0x2d
    18be:	01 97       	sbiw	r24, 0x01	; 1
    18c0:	9d a7       	std	Y+45, r25	; 0x2d
    18c2:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18c4:	8c a5       	ldd	r24, Y+44	; 0x2c
    18c6:	9d a5       	ldd	r25, Y+45	; 0x2d
    18c8:	00 97       	sbiw	r24, 0x00	; 0
    18ca:	69 f7       	brne	.-38     	; 0x18a6 <LCD_voidInit+0x28c>
    18cc:	24 c0       	rjmp	.+72     	; 0x1916 <LCD_voidInit+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ce:	6e a5       	ldd	r22, Y+46	; 0x2e
    18d0:	7f a5       	ldd	r23, Y+47	; 0x2f
    18d2:	88 a9       	ldd	r24, Y+48	; 0x30
    18d4:	99 a9       	ldd	r25, Y+49	; 0x31
    18d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18da:	dc 01       	movw	r26, r24
    18dc:	cb 01       	movw	r24, r22
    18de:	9d a7       	std	Y+45, r25	; 0x2d
    18e0:	8c a7       	std	Y+44, r24	; 0x2c
    18e2:	8c a5       	ldd	r24, Y+44	; 0x2c
    18e4:	9d a5       	ldd	r25, Y+45	; 0x2d
    18e6:	99 a7       	std	Y+41, r25	; 0x29
    18e8:	88 a7       	std	Y+40, r24	; 0x28
    18ea:	88 a5       	ldd	r24, Y+40	; 0x28
    18ec:	99 a5       	ldd	r25, Y+41	; 0x29
    18ee:	01 97       	sbiw	r24, 0x01	; 1
    18f0:	f1 f7       	brne	.-4      	; 0x18ee <LCD_voidInit+0x2d4>
    18f2:	99 a7       	std	Y+41, r25	; 0x29
    18f4:	88 a7       	std	Y+40, r24	; 0x28
    18f6:	0f c0       	rjmp	.+30     	; 0x1916 <LCD_voidInit+0x2fc>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    18f8:	6f a9       	ldd	r22, Y+55	; 0x37
    18fa:	78 ad       	ldd	r23, Y+56	; 0x38
    18fc:	89 ad       	ldd	r24, Y+57	; 0x39
    18fe:	9a ad       	ldd	r25, Y+58	; 0x3a
    1900:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1904:	dc 01       	movw	r26, r24
    1906:	cb 01       	movw	r24, r22
    1908:	8e ab       	std	Y+54, r24	; 0x36
    190a:	8e a9       	ldd	r24, Y+54	; 0x36
    190c:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    190e:	8f a1       	ldd	r24, Y+39	; 0x27
    1910:	8a 95       	dec	r24
    1912:	f1 f7       	brne	.-4      	; 0x1910 <LCD_voidInit+0x2f6>
    1914:	8f a3       	std	Y+39, r24	; 0x27
	_delay_us(40);
	LCD_voidSendCmnd(0b00001111);
    1916:	8f e0       	ldi	r24, 0x0F	; 15
    1918:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    191c:	80 e0       	ldi	r24, 0x00	; 0
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	a0 e2       	ldi	r26, 0x20	; 32
    1922:	b2 e4       	ldi	r27, 0x42	; 66
    1924:	8b a3       	std	Y+35, r24	; 0x23
    1926:	9c a3       	std	Y+36, r25	; 0x24
    1928:	ad a3       	std	Y+37, r26	; 0x25
    192a:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    192c:	6b a1       	ldd	r22, Y+35	; 0x23
    192e:	7c a1       	ldd	r23, Y+36	; 0x24
    1930:	8d a1       	ldd	r24, Y+37	; 0x25
    1932:	9e a1       	ldd	r25, Y+38	; 0x26
    1934:	2b ea       	ldi	r18, 0xAB	; 171
    1936:	3a ea       	ldi	r19, 0xAA	; 170
    1938:	4a e2       	ldi	r20, 0x2A	; 42
    193a:	50 e4       	ldi	r21, 0x40	; 64
    193c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1940:	dc 01       	movw	r26, r24
    1942:	cb 01       	movw	r24, r22
    1944:	8f 8f       	std	Y+31, r24	; 0x1f
    1946:	98 a3       	std	Y+32, r25	; 0x20
    1948:	a9 a3       	std	Y+33, r26	; 0x21
    194a:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    194c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    194e:	78 a1       	ldd	r23, Y+32	; 0x20
    1950:	89 a1       	ldd	r24, Y+33	; 0x21
    1952:	9a a1       	ldd	r25, Y+34	; 0x22
    1954:	20 e0       	ldi	r18, 0x00	; 0
    1956:	30 e0       	ldi	r19, 0x00	; 0
    1958:	40 e8       	ldi	r20, 0x80	; 128
    195a:	5f e3       	ldi	r21, 0x3F	; 63
    195c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1960:	88 23       	and	r24, r24
    1962:	1c f4       	brge	.+6      	; 0x196a <LCD_voidInit+0x350>
		__ticks = 1;
    1964:	81 e0       	ldi	r24, 0x01	; 1
    1966:	8e 8f       	std	Y+30, r24	; 0x1e
    1968:	91 c0       	rjmp	.+290    	; 0x1a8c <LCD_voidInit+0x472>
	else if (__tmp > 255)
    196a:	6f 8d       	ldd	r22, Y+31	; 0x1f
    196c:	78 a1       	ldd	r23, Y+32	; 0x20
    196e:	89 a1       	ldd	r24, Y+33	; 0x21
    1970:	9a a1       	ldd	r25, Y+34	; 0x22
    1972:	20 e0       	ldi	r18, 0x00	; 0
    1974:	30 e0       	ldi	r19, 0x00	; 0
    1976:	4f e7       	ldi	r20, 0x7F	; 127
    1978:	53 e4       	ldi	r21, 0x43	; 67
    197a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    197e:	18 16       	cp	r1, r24
    1980:	0c f0       	brlt	.+2      	; 0x1984 <LCD_voidInit+0x36a>
    1982:	7b c0       	rjmp	.+246    	; 0x1a7a <LCD_voidInit+0x460>
	{
		_delay_ms(__us / 1000.0);
    1984:	6b a1       	ldd	r22, Y+35	; 0x23
    1986:	7c a1       	ldd	r23, Y+36	; 0x24
    1988:	8d a1       	ldd	r24, Y+37	; 0x25
    198a:	9e a1       	ldd	r25, Y+38	; 0x26
    198c:	20 e0       	ldi	r18, 0x00	; 0
    198e:	30 e0       	ldi	r19, 0x00	; 0
    1990:	4a e7       	ldi	r20, 0x7A	; 122
    1992:	54 e4       	ldi	r21, 0x44	; 68
    1994:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1998:	dc 01       	movw	r26, r24
    199a:	cb 01       	movw	r24, r22
    199c:	8a 8f       	std	Y+26, r24	; 0x1a
    199e:	9b 8f       	std	Y+27, r25	; 0x1b
    19a0:	ac 8f       	std	Y+28, r26	; 0x1c
    19a2:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19a4:	6a 8d       	ldd	r22, Y+26	; 0x1a
    19a6:	7b 8d       	ldd	r23, Y+27	; 0x1b
    19a8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    19aa:	9d 8d       	ldd	r25, Y+29	; 0x1d
    19ac:	20 e0       	ldi	r18, 0x00	; 0
    19ae:	30 e0       	ldi	r19, 0x00	; 0
    19b0:	4a ef       	ldi	r20, 0xFA	; 250
    19b2:	54 e4       	ldi	r21, 0x44	; 68
    19b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19b8:	dc 01       	movw	r26, r24
    19ba:	cb 01       	movw	r24, r22
    19bc:	8e 8b       	std	Y+22, r24	; 0x16
    19be:	9f 8b       	std	Y+23, r25	; 0x17
    19c0:	a8 8f       	std	Y+24, r26	; 0x18
    19c2:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    19c4:	6e 89       	ldd	r22, Y+22	; 0x16
    19c6:	7f 89       	ldd	r23, Y+23	; 0x17
    19c8:	88 8d       	ldd	r24, Y+24	; 0x18
    19ca:	99 8d       	ldd	r25, Y+25	; 0x19
    19cc:	20 e0       	ldi	r18, 0x00	; 0
    19ce:	30 e0       	ldi	r19, 0x00	; 0
    19d0:	40 e8       	ldi	r20, 0x80	; 128
    19d2:	5f e3       	ldi	r21, 0x3F	; 63
    19d4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    19d8:	88 23       	and	r24, r24
    19da:	2c f4       	brge	.+10     	; 0x19e6 <LCD_voidInit+0x3cc>
		__ticks = 1;
    19dc:	81 e0       	ldi	r24, 0x01	; 1
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	9d 8b       	std	Y+21, r25	; 0x15
    19e2:	8c 8b       	std	Y+20, r24	; 0x14
    19e4:	3f c0       	rjmp	.+126    	; 0x1a64 <LCD_voidInit+0x44a>
	else if (__tmp > 65535)
    19e6:	6e 89       	ldd	r22, Y+22	; 0x16
    19e8:	7f 89       	ldd	r23, Y+23	; 0x17
    19ea:	88 8d       	ldd	r24, Y+24	; 0x18
    19ec:	99 8d       	ldd	r25, Y+25	; 0x19
    19ee:	20 e0       	ldi	r18, 0x00	; 0
    19f0:	3f ef       	ldi	r19, 0xFF	; 255
    19f2:	4f e7       	ldi	r20, 0x7F	; 127
    19f4:	57 e4       	ldi	r21, 0x47	; 71
    19f6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    19fa:	18 16       	cp	r1, r24
    19fc:	4c f5       	brge	.+82     	; 0x1a50 <LCD_voidInit+0x436>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19fe:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1a00:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1a02:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1a04:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1a06:	20 e0       	ldi	r18, 0x00	; 0
    1a08:	30 e0       	ldi	r19, 0x00	; 0
    1a0a:	40 e2       	ldi	r20, 0x20	; 32
    1a0c:	51 e4       	ldi	r21, 0x41	; 65
    1a0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a12:	dc 01       	movw	r26, r24
    1a14:	cb 01       	movw	r24, r22
    1a16:	bc 01       	movw	r22, r24
    1a18:	cd 01       	movw	r24, r26
    1a1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a1e:	dc 01       	movw	r26, r24
    1a20:	cb 01       	movw	r24, r22
    1a22:	9d 8b       	std	Y+21, r25	; 0x15
    1a24:	8c 8b       	std	Y+20, r24	; 0x14
    1a26:	0f c0       	rjmp	.+30     	; 0x1a46 <LCD_voidInit+0x42c>
    1a28:	88 ec       	ldi	r24, 0xC8	; 200
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	9b 8b       	std	Y+19, r25	; 0x13
    1a2e:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1a30:	8a 89       	ldd	r24, Y+18	; 0x12
    1a32:	9b 89       	ldd	r25, Y+19	; 0x13
    1a34:	01 97       	sbiw	r24, 0x01	; 1
    1a36:	f1 f7       	brne	.-4      	; 0x1a34 <LCD_voidInit+0x41a>
    1a38:	9b 8b       	std	Y+19, r25	; 0x13
    1a3a:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a3c:	8c 89       	ldd	r24, Y+20	; 0x14
    1a3e:	9d 89       	ldd	r25, Y+21	; 0x15
    1a40:	01 97       	sbiw	r24, 0x01	; 1
    1a42:	9d 8b       	std	Y+21, r25	; 0x15
    1a44:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a46:	8c 89       	ldd	r24, Y+20	; 0x14
    1a48:	9d 89       	ldd	r25, Y+21	; 0x15
    1a4a:	00 97       	sbiw	r24, 0x00	; 0
    1a4c:	69 f7       	brne	.-38     	; 0x1a28 <LCD_voidInit+0x40e>
    1a4e:	24 c0       	rjmp	.+72     	; 0x1a98 <LCD_voidInit+0x47e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a50:	6e 89       	ldd	r22, Y+22	; 0x16
    1a52:	7f 89       	ldd	r23, Y+23	; 0x17
    1a54:	88 8d       	ldd	r24, Y+24	; 0x18
    1a56:	99 8d       	ldd	r25, Y+25	; 0x19
    1a58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a5c:	dc 01       	movw	r26, r24
    1a5e:	cb 01       	movw	r24, r22
    1a60:	9d 8b       	std	Y+21, r25	; 0x15
    1a62:	8c 8b       	std	Y+20, r24	; 0x14
    1a64:	8c 89       	ldd	r24, Y+20	; 0x14
    1a66:	9d 89       	ldd	r25, Y+21	; 0x15
    1a68:	99 8b       	std	Y+17, r25	; 0x11
    1a6a:	88 8b       	std	Y+16, r24	; 0x10
    1a6c:	88 89       	ldd	r24, Y+16	; 0x10
    1a6e:	99 89       	ldd	r25, Y+17	; 0x11
    1a70:	01 97       	sbiw	r24, 0x01	; 1
    1a72:	f1 f7       	brne	.-4      	; 0x1a70 <LCD_voidInit+0x456>
    1a74:	99 8b       	std	Y+17, r25	; 0x11
    1a76:	88 8b       	std	Y+16, r24	; 0x10
    1a78:	0f c0       	rjmp	.+30     	; 0x1a98 <LCD_voidInit+0x47e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1a7a:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1a7c:	78 a1       	ldd	r23, Y+32	; 0x20
    1a7e:	89 a1       	ldd	r24, Y+33	; 0x21
    1a80:	9a a1       	ldd	r25, Y+34	; 0x22
    1a82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a86:	dc 01       	movw	r26, r24
    1a88:	cb 01       	movw	r24, r22
    1a8a:	8e 8f       	std	Y+30, r24	; 0x1e
    1a8c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a8e:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1a90:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a92:	8a 95       	dec	r24
    1a94:	f1 f7       	brne	.-4      	; 0x1a92 <LCD_voidInit+0x478>
    1a96:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(40);
	LCD_voidSendCmnd(0b00000001);
    1a98:	81 e0       	ldi	r24, 0x01	; 1
    1a9a:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    1a9e:	80 e0       	ldi	r24, 0x00	; 0
    1aa0:	90 e0       	ldi	r25, 0x00	; 0
    1aa2:	a0 e0       	ldi	r26, 0x00	; 0
    1aa4:	b0 e4       	ldi	r27, 0x40	; 64
    1aa6:	8b 87       	std	Y+11, r24	; 0x0b
    1aa8:	9c 87       	std	Y+12, r25	; 0x0c
    1aaa:	ad 87       	std	Y+13, r26	; 0x0d
    1aac:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1aae:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ab0:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ab2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ab4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ab6:	20 e0       	ldi	r18, 0x00	; 0
    1ab8:	30 e0       	ldi	r19, 0x00	; 0
    1aba:	4a ef       	ldi	r20, 0xFA	; 250
    1abc:	54 e4       	ldi	r21, 0x44	; 68
    1abe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ac2:	dc 01       	movw	r26, r24
    1ac4:	cb 01       	movw	r24, r22
    1ac6:	8f 83       	std	Y+7, r24	; 0x07
    1ac8:	98 87       	std	Y+8, r25	; 0x08
    1aca:	a9 87       	std	Y+9, r26	; 0x09
    1acc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1ace:	6f 81       	ldd	r22, Y+7	; 0x07
    1ad0:	78 85       	ldd	r23, Y+8	; 0x08
    1ad2:	89 85       	ldd	r24, Y+9	; 0x09
    1ad4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ad6:	20 e0       	ldi	r18, 0x00	; 0
    1ad8:	30 e0       	ldi	r19, 0x00	; 0
    1ada:	40 e8       	ldi	r20, 0x80	; 128
    1adc:	5f e3       	ldi	r21, 0x3F	; 63
    1ade:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1ae2:	88 23       	and	r24, r24
    1ae4:	2c f4       	brge	.+10     	; 0x1af0 <LCD_voidInit+0x4d6>
		__ticks = 1;
    1ae6:	81 e0       	ldi	r24, 0x01	; 1
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	9e 83       	std	Y+6, r25	; 0x06
    1aec:	8d 83       	std	Y+5, r24	; 0x05
    1aee:	3f c0       	rjmp	.+126    	; 0x1b6e <LCD_voidInit+0x554>
	else if (__tmp > 65535)
    1af0:	6f 81       	ldd	r22, Y+7	; 0x07
    1af2:	78 85       	ldd	r23, Y+8	; 0x08
    1af4:	89 85       	ldd	r24, Y+9	; 0x09
    1af6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1af8:	20 e0       	ldi	r18, 0x00	; 0
    1afa:	3f ef       	ldi	r19, 0xFF	; 255
    1afc:	4f e7       	ldi	r20, 0x7F	; 127
    1afe:	57 e4       	ldi	r21, 0x47	; 71
    1b00:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1b04:	18 16       	cp	r1, r24
    1b06:	4c f5       	brge	.+82     	; 0x1b5a <LCD_voidInit+0x540>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b08:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b0a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b0c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b0e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b10:	20 e0       	ldi	r18, 0x00	; 0
    1b12:	30 e0       	ldi	r19, 0x00	; 0
    1b14:	40 e2       	ldi	r20, 0x20	; 32
    1b16:	51 e4       	ldi	r21, 0x41	; 65
    1b18:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b1c:	dc 01       	movw	r26, r24
    1b1e:	cb 01       	movw	r24, r22
    1b20:	bc 01       	movw	r22, r24
    1b22:	cd 01       	movw	r24, r26
    1b24:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b28:	dc 01       	movw	r26, r24
    1b2a:	cb 01       	movw	r24, r22
    1b2c:	9e 83       	std	Y+6, r25	; 0x06
    1b2e:	8d 83       	std	Y+5, r24	; 0x05
    1b30:	0f c0       	rjmp	.+30     	; 0x1b50 <LCD_voidInit+0x536>
    1b32:	88 ec       	ldi	r24, 0xC8	; 200
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	9c 83       	std	Y+4, r25	; 0x04
    1b38:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1b3a:	8b 81       	ldd	r24, Y+3	; 0x03
    1b3c:	9c 81       	ldd	r25, Y+4	; 0x04
    1b3e:	01 97       	sbiw	r24, 0x01	; 1
    1b40:	f1 f7       	brne	.-4      	; 0x1b3e <LCD_voidInit+0x524>
    1b42:	9c 83       	std	Y+4, r25	; 0x04
    1b44:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b46:	8d 81       	ldd	r24, Y+5	; 0x05
    1b48:	9e 81       	ldd	r25, Y+6	; 0x06
    1b4a:	01 97       	sbiw	r24, 0x01	; 1
    1b4c:	9e 83       	std	Y+6, r25	; 0x06
    1b4e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b50:	8d 81       	ldd	r24, Y+5	; 0x05
    1b52:	9e 81       	ldd	r25, Y+6	; 0x06
    1b54:	00 97       	sbiw	r24, 0x00	; 0
    1b56:	69 f7       	brne	.-38     	; 0x1b32 <LCD_voidInit+0x518>
    1b58:	14 c0       	rjmp	.+40     	; 0x1b82 <LCD_voidInit+0x568>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b5a:	6f 81       	ldd	r22, Y+7	; 0x07
    1b5c:	78 85       	ldd	r23, Y+8	; 0x08
    1b5e:	89 85       	ldd	r24, Y+9	; 0x09
    1b60:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b66:	dc 01       	movw	r26, r24
    1b68:	cb 01       	movw	r24, r22
    1b6a:	9e 83       	std	Y+6, r25	; 0x06
    1b6c:	8d 83       	std	Y+5, r24	; 0x05
    1b6e:	8d 81       	ldd	r24, Y+5	; 0x05
    1b70:	9e 81       	ldd	r25, Y+6	; 0x06
    1b72:	9a 83       	std	Y+2, r25	; 0x02
    1b74:	89 83       	std	Y+1, r24	; 0x01
    1b76:	89 81       	ldd	r24, Y+1	; 0x01
    1b78:	9a 81       	ldd	r25, Y+2	; 0x02
    1b7a:	01 97       	sbiw	r24, 0x01	; 1
    1b7c:	f1 f7       	brne	.-4      	; 0x1b7a <LCD_voidInit+0x560>
    1b7e:	9a 83       	std	Y+2, r25	; 0x02
    1b80:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	LCD_voidSendCmnd(0b00000110);
    1b82:	86 e0       	ldi	r24, 0x06	; 6
    1b84:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
	
}
    1b88:	c4 5b       	subi	r28, 0xB4	; 180
    1b8a:	df 4f       	sbci	r29, 0xFF	; 255
    1b8c:	0f b6       	in	r0, 0x3f	; 63
    1b8e:	f8 94       	cli
    1b90:	de bf       	out	0x3e, r29	; 62
    1b92:	0f be       	out	0x3f, r0	; 63
    1b94:	cd bf       	out	0x3d, r28	; 61
    1b96:	cf 91       	pop	r28
    1b98:	df 91       	pop	r29
    1b9a:	1f 91       	pop	r17
    1b9c:	0f 91       	pop	r16
    1b9e:	08 95       	ret

00001ba0 <LCD_voidClear>:

void LCD_voidClear       (void)
{
    1ba0:	df 93       	push	r29
    1ba2:	cf 93       	push	r28
    1ba4:	cd b7       	in	r28, 0x3d	; 61
    1ba6:	de b7       	in	r29, 0x3e	; 62
    1ba8:	2e 97       	sbiw	r28, 0x0e	; 14
    1baa:	0f b6       	in	r0, 0x3f	; 63
    1bac:	f8 94       	cli
    1bae:	de bf       	out	0x3e, r29	; 62
    1bb0:	0f be       	out	0x3f, r0	; 63
    1bb2:	cd bf       	out	0x3d, r28	; 61
	LCD_voidSendCmnd(0b00000001);
    1bb4:	81 e0       	ldi	r24, 0x01	; 1
    1bb6:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    1bba:	80 e0       	ldi	r24, 0x00	; 0
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	a0 ea       	ldi	r26, 0xA0	; 160
    1bc0:	b1 e4       	ldi	r27, 0x41	; 65
    1bc2:	8b 87       	std	Y+11, r24	; 0x0b
    1bc4:	9c 87       	std	Y+12, r25	; 0x0c
    1bc6:	ad 87       	std	Y+13, r26	; 0x0d
    1bc8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bca:	6b 85       	ldd	r22, Y+11	; 0x0b
    1bcc:	7c 85       	ldd	r23, Y+12	; 0x0c
    1bce:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bd0:	9e 85       	ldd	r25, Y+14	; 0x0e
    1bd2:	20 e0       	ldi	r18, 0x00	; 0
    1bd4:	30 e0       	ldi	r19, 0x00	; 0
    1bd6:	4a ef       	ldi	r20, 0xFA	; 250
    1bd8:	54 e4       	ldi	r21, 0x44	; 68
    1bda:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bde:	dc 01       	movw	r26, r24
    1be0:	cb 01       	movw	r24, r22
    1be2:	8f 83       	std	Y+7, r24	; 0x07
    1be4:	98 87       	std	Y+8, r25	; 0x08
    1be6:	a9 87       	std	Y+9, r26	; 0x09
    1be8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1bea:	6f 81       	ldd	r22, Y+7	; 0x07
    1bec:	78 85       	ldd	r23, Y+8	; 0x08
    1bee:	89 85       	ldd	r24, Y+9	; 0x09
    1bf0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bf2:	20 e0       	ldi	r18, 0x00	; 0
    1bf4:	30 e0       	ldi	r19, 0x00	; 0
    1bf6:	40 e8       	ldi	r20, 0x80	; 128
    1bf8:	5f e3       	ldi	r21, 0x3F	; 63
    1bfa:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1bfe:	88 23       	and	r24, r24
    1c00:	2c f4       	brge	.+10     	; 0x1c0c <LCD_voidClear+0x6c>
		__ticks = 1;
    1c02:	81 e0       	ldi	r24, 0x01	; 1
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	9e 83       	std	Y+6, r25	; 0x06
    1c08:	8d 83       	std	Y+5, r24	; 0x05
    1c0a:	3f c0       	rjmp	.+126    	; 0x1c8a <LCD_voidClear+0xea>
	else if (__tmp > 65535)
    1c0c:	6f 81       	ldd	r22, Y+7	; 0x07
    1c0e:	78 85       	ldd	r23, Y+8	; 0x08
    1c10:	89 85       	ldd	r24, Y+9	; 0x09
    1c12:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c14:	20 e0       	ldi	r18, 0x00	; 0
    1c16:	3f ef       	ldi	r19, 0xFF	; 255
    1c18:	4f e7       	ldi	r20, 0x7F	; 127
    1c1a:	57 e4       	ldi	r21, 0x47	; 71
    1c1c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1c20:	18 16       	cp	r1, r24
    1c22:	4c f5       	brge	.+82     	; 0x1c76 <LCD_voidClear+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c24:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c26:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c28:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c2a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c2c:	20 e0       	ldi	r18, 0x00	; 0
    1c2e:	30 e0       	ldi	r19, 0x00	; 0
    1c30:	40 e2       	ldi	r20, 0x20	; 32
    1c32:	51 e4       	ldi	r21, 0x41	; 65
    1c34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c38:	dc 01       	movw	r26, r24
    1c3a:	cb 01       	movw	r24, r22
    1c3c:	bc 01       	movw	r22, r24
    1c3e:	cd 01       	movw	r24, r26
    1c40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c44:	dc 01       	movw	r26, r24
    1c46:	cb 01       	movw	r24, r22
    1c48:	9e 83       	std	Y+6, r25	; 0x06
    1c4a:	8d 83       	std	Y+5, r24	; 0x05
    1c4c:	0f c0       	rjmp	.+30     	; 0x1c6c <LCD_voidClear+0xcc>
    1c4e:	88 ec       	ldi	r24, 0xC8	; 200
    1c50:	90 e0       	ldi	r25, 0x00	; 0
    1c52:	9c 83       	std	Y+4, r25	; 0x04
    1c54:	8b 83       	std	Y+3, r24	; 0x03
    1c56:	8b 81       	ldd	r24, Y+3	; 0x03
    1c58:	9c 81       	ldd	r25, Y+4	; 0x04
    1c5a:	01 97       	sbiw	r24, 0x01	; 1
    1c5c:	f1 f7       	brne	.-4      	; 0x1c5a <LCD_voidClear+0xba>
    1c5e:	9c 83       	std	Y+4, r25	; 0x04
    1c60:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c62:	8d 81       	ldd	r24, Y+5	; 0x05
    1c64:	9e 81       	ldd	r25, Y+6	; 0x06
    1c66:	01 97       	sbiw	r24, 0x01	; 1
    1c68:	9e 83       	std	Y+6, r25	; 0x06
    1c6a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c6c:	8d 81       	ldd	r24, Y+5	; 0x05
    1c6e:	9e 81       	ldd	r25, Y+6	; 0x06
    1c70:	00 97       	sbiw	r24, 0x00	; 0
    1c72:	69 f7       	brne	.-38     	; 0x1c4e <LCD_voidClear+0xae>
    1c74:	14 c0       	rjmp	.+40     	; 0x1c9e <LCD_voidClear+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c76:	6f 81       	ldd	r22, Y+7	; 0x07
    1c78:	78 85       	ldd	r23, Y+8	; 0x08
    1c7a:	89 85       	ldd	r24, Y+9	; 0x09
    1c7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c7e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c82:	dc 01       	movw	r26, r24
    1c84:	cb 01       	movw	r24, r22
    1c86:	9e 83       	std	Y+6, r25	; 0x06
    1c88:	8d 83       	std	Y+5, r24	; 0x05
    1c8a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c8c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c8e:	9a 83       	std	Y+2, r25	; 0x02
    1c90:	89 83       	std	Y+1, r24	; 0x01
    1c92:	89 81       	ldd	r24, Y+1	; 0x01
    1c94:	9a 81       	ldd	r25, Y+2	; 0x02
    1c96:	01 97       	sbiw	r24, 0x01	; 1
    1c98:	f1 f7       	brne	.-4      	; 0x1c96 <LCD_voidClear+0xf6>
    1c9a:	9a 83       	std	Y+2, r25	; 0x02
    1c9c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(20);
}
    1c9e:	2e 96       	adiw	r28, 0x0e	; 14
    1ca0:	0f b6       	in	r0, 0x3f	; 63
    1ca2:	f8 94       	cli
    1ca4:	de bf       	out	0x3e, r29	; 62
    1ca6:	0f be       	out	0x3f, r0	; 63
    1ca8:	cd bf       	out	0x3d, r28	; 61
    1caa:	cf 91       	pop	r28
    1cac:	df 91       	pop	r29
    1cae:	08 95       	ret

00001cb0 <LCD_voidCursorBlinkerOff>:

void LCD_voidCursorBlinkerOff(void)
{
    1cb0:	df 93       	push	r29
    1cb2:	cf 93       	push	r28
    1cb4:	cd b7       	in	r28, 0x3d	; 61
    1cb6:	de b7       	in	r29, 0x3e	; 62
    1cb8:	2e 97       	sbiw	r28, 0x0e	; 14
    1cba:	0f b6       	in	r0, 0x3f	; 63
    1cbc:	f8 94       	cli
    1cbe:	de bf       	out	0x3e, r29	; 62
    1cc0:	0f be       	out	0x3f, r0	; 63
    1cc2:	cd bf       	out	0x3d, r28	; 61
	LCD_voidSendCmnd(0b00001100);
    1cc4:	8c e0       	ldi	r24, 0x0C	; 12
    1cc6:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    1cca:	80 e0       	ldi	r24, 0x00	; 0
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	a0 ea       	ldi	r26, 0xA0	; 160
    1cd0:	b1 e4       	ldi	r27, 0x41	; 65
    1cd2:	8b 87       	std	Y+11, r24	; 0x0b
    1cd4:	9c 87       	std	Y+12, r25	; 0x0c
    1cd6:	ad 87       	std	Y+13, r26	; 0x0d
    1cd8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cda:	6b 85       	ldd	r22, Y+11	; 0x0b
    1cdc:	7c 85       	ldd	r23, Y+12	; 0x0c
    1cde:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ce0:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ce2:	20 e0       	ldi	r18, 0x00	; 0
    1ce4:	30 e0       	ldi	r19, 0x00	; 0
    1ce6:	4a ef       	ldi	r20, 0xFA	; 250
    1ce8:	54 e4       	ldi	r21, 0x44	; 68
    1cea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cee:	dc 01       	movw	r26, r24
    1cf0:	cb 01       	movw	r24, r22
    1cf2:	8f 83       	std	Y+7, r24	; 0x07
    1cf4:	98 87       	std	Y+8, r25	; 0x08
    1cf6:	a9 87       	std	Y+9, r26	; 0x09
    1cf8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1cfa:	6f 81       	ldd	r22, Y+7	; 0x07
    1cfc:	78 85       	ldd	r23, Y+8	; 0x08
    1cfe:	89 85       	ldd	r24, Y+9	; 0x09
    1d00:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d02:	20 e0       	ldi	r18, 0x00	; 0
    1d04:	30 e0       	ldi	r19, 0x00	; 0
    1d06:	40 e8       	ldi	r20, 0x80	; 128
    1d08:	5f e3       	ldi	r21, 0x3F	; 63
    1d0a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1d0e:	88 23       	and	r24, r24
    1d10:	2c f4       	brge	.+10     	; 0x1d1c <LCD_voidCursorBlinkerOff+0x6c>
		__ticks = 1;
    1d12:	81 e0       	ldi	r24, 0x01	; 1
    1d14:	90 e0       	ldi	r25, 0x00	; 0
    1d16:	9e 83       	std	Y+6, r25	; 0x06
    1d18:	8d 83       	std	Y+5, r24	; 0x05
    1d1a:	3f c0       	rjmp	.+126    	; 0x1d9a <LCD_voidCursorBlinkerOff+0xea>
	else if (__tmp > 65535)
    1d1c:	6f 81       	ldd	r22, Y+7	; 0x07
    1d1e:	78 85       	ldd	r23, Y+8	; 0x08
    1d20:	89 85       	ldd	r24, Y+9	; 0x09
    1d22:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d24:	20 e0       	ldi	r18, 0x00	; 0
    1d26:	3f ef       	ldi	r19, 0xFF	; 255
    1d28:	4f e7       	ldi	r20, 0x7F	; 127
    1d2a:	57 e4       	ldi	r21, 0x47	; 71
    1d2c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1d30:	18 16       	cp	r1, r24
    1d32:	4c f5       	brge	.+82     	; 0x1d86 <LCD_voidCursorBlinkerOff+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d34:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d36:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d38:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d3a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d3c:	20 e0       	ldi	r18, 0x00	; 0
    1d3e:	30 e0       	ldi	r19, 0x00	; 0
    1d40:	40 e2       	ldi	r20, 0x20	; 32
    1d42:	51 e4       	ldi	r21, 0x41	; 65
    1d44:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d48:	dc 01       	movw	r26, r24
    1d4a:	cb 01       	movw	r24, r22
    1d4c:	bc 01       	movw	r22, r24
    1d4e:	cd 01       	movw	r24, r26
    1d50:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d54:	dc 01       	movw	r26, r24
    1d56:	cb 01       	movw	r24, r22
    1d58:	9e 83       	std	Y+6, r25	; 0x06
    1d5a:	8d 83       	std	Y+5, r24	; 0x05
    1d5c:	0f c0       	rjmp	.+30     	; 0x1d7c <LCD_voidCursorBlinkerOff+0xcc>
    1d5e:	88 ec       	ldi	r24, 0xC8	; 200
    1d60:	90 e0       	ldi	r25, 0x00	; 0
    1d62:	9c 83       	std	Y+4, r25	; 0x04
    1d64:	8b 83       	std	Y+3, r24	; 0x03
    1d66:	8b 81       	ldd	r24, Y+3	; 0x03
    1d68:	9c 81       	ldd	r25, Y+4	; 0x04
    1d6a:	01 97       	sbiw	r24, 0x01	; 1
    1d6c:	f1 f7       	brne	.-4      	; 0x1d6a <LCD_voidCursorBlinkerOff+0xba>
    1d6e:	9c 83       	std	Y+4, r25	; 0x04
    1d70:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d72:	8d 81       	ldd	r24, Y+5	; 0x05
    1d74:	9e 81       	ldd	r25, Y+6	; 0x06
    1d76:	01 97       	sbiw	r24, 0x01	; 1
    1d78:	9e 83       	std	Y+6, r25	; 0x06
    1d7a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d7c:	8d 81       	ldd	r24, Y+5	; 0x05
    1d7e:	9e 81       	ldd	r25, Y+6	; 0x06
    1d80:	00 97       	sbiw	r24, 0x00	; 0
    1d82:	69 f7       	brne	.-38     	; 0x1d5e <LCD_voidCursorBlinkerOff+0xae>
    1d84:	14 c0       	rjmp	.+40     	; 0x1dae <LCD_voidCursorBlinkerOff+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d86:	6f 81       	ldd	r22, Y+7	; 0x07
    1d88:	78 85       	ldd	r23, Y+8	; 0x08
    1d8a:	89 85       	ldd	r24, Y+9	; 0x09
    1d8c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d92:	dc 01       	movw	r26, r24
    1d94:	cb 01       	movw	r24, r22
    1d96:	9e 83       	std	Y+6, r25	; 0x06
    1d98:	8d 83       	std	Y+5, r24	; 0x05
    1d9a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d9c:	9e 81       	ldd	r25, Y+6	; 0x06
    1d9e:	9a 83       	std	Y+2, r25	; 0x02
    1da0:	89 83       	std	Y+1, r24	; 0x01
    1da2:	89 81       	ldd	r24, Y+1	; 0x01
    1da4:	9a 81       	ldd	r25, Y+2	; 0x02
    1da6:	01 97       	sbiw	r24, 0x01	; 1
    1da8:	f1 f7       	brne	.-4      	; 0x1da6 <LCD_voidCursorBlinkerOff+0xf6>
    1daa:	9a 83       	std	Y+2, r25	; 0x02
    1dac:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(20);
}
    1dae:	2e 96       	adiw	r28, 0x0e	; 14
    1db0:	0f b6       	in	r0, 0x3f	; 63
    1db2:	f8 94       	cli
    1db4:	de bf       	out	0x3e, r29	; 62
    1db6:	0f be       	out	0x3f, r0	; 63
    1db8:	cd bf       	out	0x3d, r28	; 61
    1dba:	cf 91       	pop	r28
    1dbc:	df 91       	pop	r29
    1dbe:	08 95       	ret

00001dc0 <LCD_voidSendCmnd>:

void LCD_voidSendCmnd (u8 Copy_u8Cmnd)
{
    1dc0:	df 93       	push	r29
    1dc2:	cf 93       	push	r28
    1dc4:	cd b7       	in	r28, 0x3d	; 61
    1dc6:	de b7       	in	r29, 0x3e	; 62
    1dc8:	e1 97       	sbiw	r28, 0x31	; 49
    1dca:	0f b6       	in	r0, 0x3f	; 63
    1dcc:	f8 94       	cli
    1dce:	de bf       	out	0x3e, r29	; 62
    1dd0:	0f be       	out	0x3f, r0	; 63
    1dd2:	cd bf       	out	0x3d, r28	; 61
    1dd4:	89 ab       	std	Y+49, r24	; 0x31
	/* Rs = 0 */
	DIO_u8SetPinValue(LCD_u8_CONTROL_PORT,LCD_u8_RS_PIN,DIO_u8_LOW);
    1dd6:	83 e0       	ldi	r24, 0x03	; 3
    1dd8:	67 e0       	ldi	r22, 0x07	; 7
    1dda:	40 e0       	ldi	r20, 0x00	; 0
    1ddc:	0e 94 96 07 	call	0xf2c	; 0xf2c <DIO_u8SetPinValue>
	/* Rw = 0 */
	DIO_u8SetPinValue(LCD_u8_CONTROL_PORT,LCD_u8_RW_PIN,DIO_u8_LOW);
    1de0:	83 e0       	ldi	r24, 0x03	; 3
    1de2:	66 e0       	ldi	r22, 0x06	; 6
    1de4:	40 e0       	ldi	r20, 0x00	; 0
    1de6:	0e 94 96 07 	call	0xf2c	; 0xf2c <DIO_u8SetPinValue>
	/* Send Cmnd byte to the Data Pins of LCD */
	DIO_u8SetPortValue(LCD_u8_DATA_PORT,Copy_u8Cmnd);
    1dea:	82 e0       	ldi	r24, 0x02	; 2
    1dec:	69 a9       	ldd	r22, Y+49	; 0x31
    1dee:	0e 94 6d 0a 	call	0x14da	; 0x14da <DIO_u8SetPortValue>
	/* Pulse of Enable E = 1 , E = 0 */
	DIO_u8SetPinValue(LCD_u8_CONTROL_PORT,LCD_u8_E_PIN,DIO_u8_HIGH);
    1df2:	83 e0       	ldi	r24, 0x03	; 3
    1df4:	65 e0       	ldi	r22, 0x05	; 5
    1df6:	41 e0       	ldi	r20, 0x01	; 1
    1df8:	0e 94 96 07 	call	0xf2c	; 0xf2c <DIO_u8SetPinValue>
    1dfc:	80 e0       	ldi	r24, 0x00	; 0
    1dfe:	90 e0       	ldi	r25, 0x00	; 0
    1e00:	a0 e8       	ldi	r26, 0x80	; 128
    1e02:	bf e3       	ldi	r27, 0x3F	; 63
    1e04:	8d a7       	std	Y+45, r24	; 0x2d
    1e06:	9e a7       	std	Y+46, r25	; 0x2e
    1e08:	af a7       	std	Y+47, r26	; 0x2f
    1e0a:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1e0c:	6d a5       	ldd	r22, Y+45	; 0x2d
    1e0e:	7e a5       	ldd	r23, Y+46	; 0x2e
    1e10:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e12:	98 a9       	ldd	r25, Y+48	; 0x30
    1e14:	2b ea       	ldi	r18, 0xAB	; 171
    1e16:	3a ea       	ldi	r19, 0xAA	; 170
    1e18:	4a e2       	ldi	r20, 0x2A	; 42
    1e1a:	50 e4       	ldi	r21, 0x40	; 64
    1e1c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e20:	dc 01       	movw	r26, r24
    1e22:	cb 01       	movw	r24, r22
    1e24:	89 a7       	std	Y+41, r24	; 0x29
    1e26:	9a a7       	std	Y+42, r25	; 0x2a
    1e28:	ab a7       	std	Y+43, r26	; 0x2b
    1e2a:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    1e2c:	69 a5       	ldd	r22, Y+41	; 0x29
    1e2e:	7a a5       	ldd	r23, Y+42	; 0x2a
    1e30:	8b a5       	ldd	r24, Y+43	; 0x2b
    1e32:	9c a5       	ldd	r25, Y+44	; 0x2c
    1e34:	20 e0       	ldi	r18, 0x00	; 0
    1e36:	30 e0       	ldi	r19, 0x00	; 0
    1e38:	40 e8       	ldi	r20, 0x80	; 128
    1e3a:	5f e3       	ldi	r21, 0x3F	; 63
    1e3c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1e40:	88 23       	and	r24, r24
    1e42:	1c f4       	brge	.+6      	; 0x1e4a <LCD_voidSendCmnd+0x8a>
		__ticks = 1;
    1e44:	81 e0       	ldi	r24, 0x01	; 1
    1e46:	88 a7       	std	Y+40, r24	; 0x28
    1e48:	91 c0       	rjmp	.+290    	; 0x1f6c <LCD_voidSendCmnd+0x1ac>
	else if (__tmp > 255)
    1e4a:	69 a5       	ldd	r22, Y+41	; 0x29
    1e4c:	7a a5       	ldd	r23, Y+42	; 0x2a
    1e4e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1e50:	9c a5       	ldd	r25, Y+44	; 0x2c
    1e52:	20 e0       	ldi	r18, 0x00	; 0
    1e54:	30 e0       	ldi	r19, 0x00	; 0
    1e56:	4f e7       	ldi	r20, 0x7F	; 127
    1e58:	53 e4       	ldi	r21, 0x43	; 67
    1e5a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1e5e:	18 16       	cp	r1, r24
    1e60:	0c f0       	brlt	.+2      	; 0x1e64 <LCD_voidSendCmnd+0xa4>
    1e62:	7b c0       	rjmp	.+246    	; 0x1f5a <LCD_voidSendCmnd+0x19a>
	{
		_delay_ms(__us / 1000.0);
    1e64:	6d a5       	ldd	r22, Y+45	; 0x2d
    1e66:	7e a5       	ldd	r23, Y+46	; 0x2e
    1e68:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e6a:	98 a9       	ldd	r25, Y+48	; 0x30
    1e6c:	20 e0       	ldi	r18, 0x00	; 0
    1e6e:	30 e0       	ldi	r19, 0x00	; 0
    1e70:	4a e7       	ldi	r20, 0x7A	; 122
    1e72:	54 e4       	ldi	r21, 0x44	; 68
    1e74:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1e78:	dc 01       	movw	r26, r24
    1e7a:	cb 01       	movw	r24, r22
    1e7c:	8c a3       	std	Y+36, r24	; 0x24
    1e7e:	9d a3       	std	Y+37, r25	; 0x25
    1e80:	ae a3       	std	Y+38, r26	; 0x26
    1e82:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e84:	6c a1       	ldd	r22, Y+36	; 0x24
    1e86:	7d a1       	ldd	r23, Y+37	; 0x25
    1e88:	8e a1       	ldd	r24, Y+38	; 0x26
    1e8a:	9f a1       	ldd	r25, Y+39	; 0x27
    1e8c:	20 e0       	ldi	r18, 0x00	; 0
    1e8e:	30 e0       	ldi	r19, 0x00	; 0
    1e90:	4a ef       	ldi	r20, 0xFA	; 250
    1e92:	54 e4       	ldi	r21, 0x44	; 68
    1e94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e98:	dc 01       	movw	r26, r24
    1e9a:	cb 01       	movw	r24, r22
    1e9c:	88 a3       	std	Y+32, r24	; 0x20
    1e9e:	99 a3       	std	Y+33, r25	; 0x21
    1ea0:	aa a3       	std	Y+34, r26	; 0x22
    1ea2:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    1ea4:	68 a1       	ldd	r22, Y+32	; 0x20
    1ea6:	79 a1       	ldd	r23, Y+33	; 0x21
    1ea8:	8a a1       	ldd	r24, Y+34	; 0x22
    1eaa:	9b a1       	ldd	r25, Y+35	; 0x23
    1eac:	20 e0       	ldi	r18, 0x00	; 0
    1eae:	30 e0       	ldi	r19, 0x00	; 0
    1eb0:	40 e8       	ldi	r20, 0x80	; 128
    1eb2:	5f e3       	ldi	r21, 0x3F	; 63
    1eb4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1eb8:	88 23       	and	r24, r24
    1eba:	2c f4       	brge	.+10     	; 0x1ec6 <LCD_voidSendCmnd+0x106>
		__ticks = 1;
    1ebc:	81 e0       	ldi	r24, 0x01	; 1
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	9f 8f       	std	Y+31, r25	; 0x1f
    1ec2:	8e 8f       	std	Y+30, r24	; 0x1e
    1ec4:	3f c0       	rjmp	.+126    	; 0x1f44 <LCD_voidSendCmnd+0x184>
	else if (__tmp > 65535)
    1ec6:	68 a1       	ldd	r22, Y+32	; 0x20
    1ec8:	79 a1       	ldd	r23, Y+33	; 0x21
    1eca:	8a a1       	ldd	r24, Y+34	; 0x22
    1ecc:	9b a1       	ldd	r25, Y+35	; 0x23
    1ece:	20 e0       	ldi	r18, 0x00	; 0
    1ed0:	3f ef       	ldi	r19, 0xFF	; 255
    1ed2:	4f e7       	ldi	r20, 0x7F	; 127
    1ed4:	57 e4       	ldi	r21, 0x47	; 71
    1ed6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1eda:	18 16       	cp	r1, r24
    1edc:	4c f5       	brge	.+82     	; 0x1f30 <LCD_voidSendCmnd+0x170>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ede:	6c a1       	ldd	r22, Y+36	; 0x24
    1ee0:	7d a1       	ldd	r23, Y+37	; 0x25
    1ee2:	8e a1       	ldd	r24, Y+38	; 0x26
    1ee4:	9f a1       	ldd	r25, Y+39	; 0x27
    1ee6:	20 e0       	ldi	r18, 0x00	; 0
    1ee8:	30 e0       	ldi	r19, 0x00	; 0
    1eea:	40 e2       	ldi	r20, 0x20	; 32
    1eec:	51 e4       	ldi	r21, 0x41	; 65
    1eee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ef2:	dc 01       	movw	r26, r24
    1ef4:	cb 01       	movw	r24, r22
    1ef6:	bc 01       	movw	r22, r24
    1ef8:	cd 01       	movw	r24, r26
    1efa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1efe:	dc 01       	movw	r26, r24
    1f00:	cb 01       	movw	r24, r22
    1f02:	9f 8f       	std	Y+31, r25	; 0x1f
    1f04:	8e 8f       	std	Y+30, r24	; 0x1e
    1f06:	0f c0       	rjmp	.+30     	; 0x1f26 <LCD_voidSendCmnd+0x166>
    1f08:	88 ec       	ldi	r24, 0xC8	; 200
    1f0a:	90 e0       	ldi	r25, 0x00	; 0
    1f0c:	9d 8f       	std	Y+29, r25	; 0x1d
    1f0e:	8c 8f       	std	Y+28, r24	; 0x1c
    1f10:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f12:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1f14:	01 97       	sbiw	r24, 0x01	; 1
    1f16:	f1 f7       	brne	.-4      	; 0x1f14 <LCD_voidSendCmnd+0x154>
    1f18:	9d 8f       	std	Y+29, r25	; 0x1d
    1f1a:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f1c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1f1e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1f20:	01 97       	sbiw	r24, 0x01	; 1
    1f22:	9f 8f       	std	Y+31, r25	; 0x1f
    1f24:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f26:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1f28:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1f2a:	00 97       	sbiw	r24, 0x00	; 0
    1f2c:	69 f7       	brne	.-38     	; 0x1f08 <LCD_voidSendCmnd+0x148>
    1f2e:	24 c0       	rjmp	.+72     	; 0x1f78 <LCD_voidSendCmnd+0x1b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f30:	68 a1       	ldd	r22, Y+32	; 0x20
    1f32:	79 a1       	ldd	r23, Y+33	; 0x21
    1f34:	8a a1       	ldd	r24, Y+34	; 0x22
    1f36:	9b a1       	ldd	r25, Y+35	; 0x23
    1f38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f3c:	dc 01       	movw	r26, r24
    1f3e:	cb 01       	movw	r24, r22
    1f40:	9f 8f       	std	Y+31, r25	; 0x1f
    1f42:	8e 8f       	std	Y+30, r24	; 0x1e
    1f44:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1f46:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1f48:	9b 8f       	std	Y+27, r25	; 0x1b
    1f4a:	8a 8f       	std	Y+26, r24	; 0x1a
    1f4c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1f4e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1f50:	01 97       	sbiw	r24, 0x01	; 1
    1f52:	f1 f7       	brne	.-4      	; 0x1f50 <LCD_voidSendCmnd+0x190>
    1f54:	9b 8f       	std	Y+27, r25	; 0x1b
    1f56:	8a 8f       	std	Y+26, r24	; 0x1a
    1f58:	0f c0       	rjmp	.+30     	; 0x1f78 <LCD_voidSendCmnd+0x1b8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1f5a:	69 a5       	ldd	r22, Y+41	; 0x29
    1f5c:	7a a5       	ldd	r23, Y+42	; 0x2a
    1f5e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1f60:	9c a5       	ldd	r25, Y+44	; 0x2c
    1f62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f66:	dc 01       	movw	r26, r24
    1f68:	cb 01       	movw	r24, r22
    1f6a:	88 a7       	std	Y+40, r24	; 0x28
    1f6c:	88 a5       	ldd	r24, Y+40	; 0x28
    1f6e:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1f70:	89 8d       	ldd	r24, Y+25	; 0x19
    1f72:	8a 95       	dec	r24
    1f74:	f1 f7       	brne	.-4      	; 0x1f72 <LCD_voidSendCmnd+0x1b2>
    1f76:	89 8f       	std	Y+25, r24	; 0x19
	_delay_us(1);
	DIO_u8SetPinValue(LCD_u8_CONTROL_PORT,LCD_u8_E_PIN,DIO_u8_LOW);
    1f78:	83 e0       	ldi	r24, 0x03	; 3
    1f7a:	65 e0       	ldi	r22, 0x05	; 5
    1f7c:	40 e0       	ldi	r20, 0x00	; 0
    1f7e:	0e 94 96 07 	call	0xf2c	; 0xf2c <DIO_u8SetPinValue>
    1f82:	80 e0       	ldi	r24, 0x00	; 0
    1f84:	90 e0       	ldi	r25, 0x00	; 0
    1f86:	a0 e8       	ldi	r26, 0x80	; 128
    1f88:	bf e3       	ldi	r27, 0x3F	; 63
    1f8a:	8d 8b       	std	Y+21, r24	; 0x15
    1f8c:	9e 8b       	std	Y+22, r25	; 0x16
    1f8e:	af 8b       	std	Y+23, r26	; 0x17
    1f90:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1f92:	6d 89       	ldd	r22, Y+21	; 0x15
    1f94:	7e 89       	ldd	r23, Y+22	; 0x16
    1f96:	8f 89       	ldd	r24, Y+23	; 0x17
    1f98:	98 8d       	ldd	r25, Y+24	; 0x18
    1f9a:	2b ea       	ldi	r18, 0xAB	; 171
    1f9c:	3a ea       	ldi	r19, 0xAA	; 170
    1f9e:	4a e2       	ldi	r20, 0x2A	; 42
    1fa0:	50 e4       	ldi	r21, 0x40	; 64
    1fa2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fa6:	dc 01       	movw	r26, r24
    1fa8:	cb 01       	movw	r24, r22
    1faa:	89 8b       	std	Y+17, r24	; 0x11
    1fac:	9a 8b       	std	Y+18, r25	; 0x12
    1fae:	ab 8b       	std	Y+19, r26	; 0x13
    1fb0:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    1fb2:	69 89       	ldd	r22, Y+17	; 0x11
    1fb4:	7a 89       	ldd	r23, Y+18	; 0x12
    1fb6:	8b 89       	ldd	r24, Y+19	; 0x13
    1fb8:	9c 89       	ldd	r25, Y+20	; 0x14
    1fba:	20 e0       	ldi	r18, 0x00	; 0
    1fbc:	30 e0       	ldi	r19, 0x00	; 0
    1fbe:	40 e8       	ldi	r20, 0x80	; 128
    1fc0:	5f e3       	ldi	r21, 0x3F	; 63
    1fc2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1fc6:	88 23       	and	r24, r24
    1fc8:	1c f4       	brge	.+6      	; 0x1fd0 <LCD_voidSendCmnd+0x210>
		__ticks = 1;
    1fca:	81 e0       	ldi	r24, 0x01	; 1
    1fcc:	88 8b       	std	Y+16, r24	; 0x10
    1fce:	91 c0       	rjmp	.+290    	; 0x20f2 <LCD_voidSendCmnd+0x332>
	else if (__tmp > 255)
    1fd0:	69 89       	ldd	r22, Y+17	; 0x11
    1fd2:	7a 89       	ldd	r23, Y+18	; 0x12
    1fd4:	8b 89       	ldd	r24, Y+19	; 0x13
    1fd6:	9c 89       	ldd	r25, Y+20	; 0x14
    1fd8:	20 e0       	ldi	r18, 0x00	; 0
    1fda:	30 e0       	ldi	r19, 0x00	; 0
    1fdc:	4f e7       	ldi	r20, 0x7F	; 127
    1fde:	53 e4       	ldi	r21, 0x43	; 67
    1fe0:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1fe4:	18 16       	cp	r1, r24
    1fe6:	0c f0       	brlt	.+2      	; 0x1fea <LCD_voidSendCmnd+0x22a>
    1fe8:	7b c0       	rjmp	.+246    	; 0x20e0 <LCD_voidSendCmnd+0x320>
	{
		_delay_ms(__us / 1000.0);
    1fea:	6d 89       	ldd	r22, Y+21	; 0x15
    1fec:	7e 89       	ldd	r23, Y+22	; 0x16
    1fee:	8f 89       	ldd	r24, Y+23	; 0x17
    1ff0:	98 8d       	ldd	r25, Y+24	; 0x18
    1ff2:	20 e0       	ldi	r18, 0x00	; 0
    1ff4:	30 e0       	ldi	r19, 0x00	; 0
    1ff6:	4a e7       	ldi	r20, 0x7A	; 122
    1ff8:	54 e4       	ldi	r21, 0x44	; 68
    1ffa:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1ffe:	dc 01       	movw	r26, r24
    2000:	cb 01       	movw	r24, r22
    2002:	8c 87       	std	Y+12, r24	; 0x0c
    2004:	9d 87       	std	Y+13, r25	; 0x0d
    2006:	ae 87       	std	Y+14, r26	; 0x0e
    2008:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    200a:	6c 85       	ldd	r22, Y+12	; 0x0c
    200c:	7d 85       	ldd	r23, Y+13	; 0x0d
    200e:	8e 85       	ldd	r24, Y+14	; 0x0e
    2010:	9f 85       	ldd	r25, Y+15	; 0x0f
    2012:	20 e0       	ldi	r18, 0x00	; 0
    2014:	30 e0       	ldi	r19, 0x00	; 0
    2016:	4a ef       	ldi	r20, 0xFA	; 250
    2018:	54 e4       	ldi	r21, 0x44	; 68
    201a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    201e:	dc 01       	movw	r26, r24
    2020:	cb 01       	movw	r24, r22
    2022:	88 87       	std	Y+8, r24	; 0x08
    2024:	99 87       	std	Y+9, r25	; 0x09
    2026:	aa 87       	std	Y+10, r26	; 0x0a
    2028:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    202a:	68 85       	ldd	r22, Y+8	; 0x08
    202c:	79 85       	ldd	r23, Y+9	; 0x09
    202e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2030:	9b 85       	ldd	r25, Y+11	; 0x0b
    2032:	20 e0       	ldi	r18, 0x00	; 0
    2034:	30 e0       	ldi	r19, 0x00	; 0
    2036:	40 e8       	ldi	r20, 0x80	; 128
    2038:	5f e3       	ldi	r21, 0x3F	; 63
    203a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    203e:	88 23       	and	r24, r24
    2040:	2c f4       	brge	.+10     	; 0x204c <LCD_voidSendCmnd+0x28c>
		__ticks = 1;
    2042:	81 e0       	ldi	r24, 0x01	; 1
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	9f 83       	std	Y+7, r25	; 0x07
    2048:	8e 83       	std	Y+6, r24	; 0x06
    204a:	3f c0       	rjmp	.+126    	; 0x20ca <LCD_voidSendCmnd+0x30a>
	else if (__tmp > 65535)
    204c:	68 85       	ldd	r22, Y+8	; 0x08
    204e:	79 85       	ldd	r23, Y+9	; 0x09
    2050:	8a 85       	ldd	r24, Y+10	; 0x0a
    2052:	9b 85       	ldd	r25, Y+11	; 0x0b
    2054:	20 e0       	ldi	r18, 0x00	; 0
    2056:	3f ef       	ldi	r19, 0xFF	; 255
    2058:	4f e7       	ldi	r20, 0x7F	; 127
    205a:	57 e4       	ldi	r21, 0x47	; 71
    205c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2060:	18 16       	cp	r1, r24
    2062:	4c f5       	brge	.+82     	; 0x20b6 <LCD_voidSendCmnd+0x2f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2064:	6c 85       	ldd	r22, Y+12	; 0x0c
    2066:	7d 85       	ldd	r23, Y+13	; 0x0d
    2068:	8e 85       	ldd	r24, Y+14	; 0x0e
    206a:	9f 85       	ldd	r25, Y+15	; 0x0f
    206c:	20 e0       	ldi	r18, 0x00	; 0
    206e:	30 e0       	ldi	r19, 0x00	; 0
    2070:	40 e2       	ldi	r20, 0x20	; 32
    2072:	51 e4       	ldi	r21, 0x41	; 65
    2074:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2078:	dc 01       	movw	r26, r24
    207a:	cb 01       	movw	r24, r22
    207c:	bc 01       	movw	r22, r24
    207e:	cd 01       	movw	r24, r26
    2080:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2084:	dc 01       	movw	r26, r24
    2086:	cb 01       	movw	r24, r22
    2088:	9f 83       	std	Y+7, r25	; 0x07
    208a:	8e 83       	std	Y+6, r24	; 0x06
    208c:	0f c0       	rjmp	.+30     	; 0x20ac <LCD_voidSendCmnd+0x2ec>
    208e:	88 ec       	ldi	r24, 0xC8	; 200
    2090:	90 e0       	ldi	r25, 0x00	; 0
    2092:	9d 83       	std	Y+5, r25	; 0x05
    2094:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2096:	8c 81       	ldd	r24, Y+4	; 0x04
    2098:	9d 81       	ldd	r25, Y+5	; 0x05
    209a:	01 97       	sbiw	r24, 0x01	; 1
    209c:	f1 f7       	brne	.-4      	; 0x209a <LCD_voidSendCmnd+0x2da>
    209e:	9d 83       	std	Y+5, r25	; 0x05
    20a0:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20a2:	8e 81       	ldd	r24, Y+6	; 0x06
    20a4:	9f 81       	ldd	r25, Y+7	; 0x07
    20a6:	01 97       	sbiw	r24, 0x01	; 1
    20a8:	9f 83       	std	Y+7, r25	; 0x07
    20aa:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20ac:	8e 81       	ldd	r24, Y+6	; 0x06
    20ae:	9f 81       	ldd	r25, Y+7	; 0x07
    20b0:	00 97       	sbiw	r24, 0x00	; 0
    20b2:	69 f7       	brne	.-38     	; 0x208e <LCD_voidSendCmnd+0x2ce>
    20b4:	24 c0       	rjmp	.+72     	; 0x20fe <LCD_voidSendCmnd+0x33e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20b6:	68 85       	ldd	r22, Y+8	; 0x08
    20b8:	79 85       	ldd	r23, Y+9	; 0x09
    20ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    20bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    20be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20c2:	dc 01       	movw	r26, r24
    20c4:	cb 01       	movw	r24, r22
    20c6:	9f 83       	std	Y+7, r25	; 0x07
    20c8:	8e 83       	std	Y+6, r24	; 0x06
    20ca:	8e 81       	ldd	r24, Y+6	; 0x06
    20cc:	9f 81       	ldd	r25, Y+7	; 0x07
    20ce:	9b 83       	std	Y+3, r25	; 0x03
    20d0:	8a 83       	std	Y+2, r24	; 0x02
    20d2:	8a 81       	ldd	r24, Y+2	; 0x02
    20d4:	9b 81       	ldd	r25, Y+3	; 0x03
    20d6:	01 97       	sbiw	r24, 0x01	; 1
    20d8:	f1 f7       	brne	.-4      	; 0x20d6 <LCD_voidSendCmnd+0x316>
    20da:	9b 83       	std	Y+3, r25	; 0x03
    20dc:	8a 83       	std	Y+2, r24	; 0x02
    20de:	0f c0       	rjmp	.+30     	; 0x20fe <LCD_voidSendCmnd+0x33e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    20e0:	69 89       	ldd	r22, Y+17	; 0x11
    20e2:	7a 89       	ldd	r23, Y+18	; 0x12
    20e4:	8b 89       	ldd	r24, Y+19	; 0x13
    20e6:	9c 89       	ldd	r25, Y+20	; 0x14
    20e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20ec:	dc 01       	movw	r26, r24
    20ee:	cb 01       	movw	r24, r22
    20f0:	88 8b       	std	Y+16, r24	; 0x10
    20f2:	88 89       	ldd	r24, Y+16	; 0x10
    20f4:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    20f6:	89 81       	ldd	r24, Y+1	; 0x01
    20f8:	8a 95       	dec	r24
    20fa:	f1 f7       	brne	.-4      	; 0x20f8 <LCD_voidSendCmnd+0x338>
    20fc:	89 83       	std	Y+1, r24	; 0x01
	_delay_us(1);
}
    20fe:	e1 96       	adiw	r28, 0x31	; 49
    2100:	0f b6       	in	r0, 0x3f	; 63
    2102:	f8 94       	cli
    2104:	de bf       	out	0x3e, r29	; 62
    2106:	0f be       	out	0x3f, r0	; 63
    2108:	cd bf       	out	0x3d, r28	; 61
    210a:	cf 91       	pop	r28
    210c:	df 91       	pop	r29
    210e:	08 95       	ret

00002110 <LCD_voidSendChar>:
void LCD_voidSendChar (u8 Copy_u8Char)
{
    2110:	df 93       	push	r29
    2112:	cf 93       	push	r28
    2114:	cd b7       	in	r28, 0x3d	; 61
    2116:	de b7       	in	r29, 0x3e	; 62
    2118:	e1 97       	sbiw	r28, 0x31	; 49
    211a:	0f b6       	in	r0, 0x3f	; 63
    211c:	f8 94       	cli
    211e:	de bf       	out	0x3e, r29	; 62
    2120:	0f be       	out	0x3f, r0	; 63
    2122:	cd bf       	out	0x3d, r28	; 61
    2124:	89 ab       	std	Y+49, r24	; 0x31
	/* Rs = 1 */
	DIO_u8SetPinValue(LCD_u8_CONTROL_PORT,LCD_u8_RS_PIN,DIO_u8_HIGH);
    2126:	83 e0       	ldi	r24, 0x03	; 3
    2128:	67 e0       	ldi	r22, 0x07	; 7
    212a:	41 e0       	ldi	r20, 0x01	; 1
    212c:	0e 94 96 07 	call	0xf2c	; 0xf2c <DIO_u8SetPinValue>
	/* Rw = 0 */
	DIO_u8SetPinValue(LCD_u8_CONTROL_PORT,LCD_u8_RW_PIN,DIO_u8_LOW);
    2130:	83 e0       	ldi	r24, 0x03	; 3
    2132:	66 e0       	ldi	r22, 0x06	; 6
    2134:	40 e0       	ldi	r20, 0x00	; 0
    2136:	0e 94 96 07 	call	0xf2c	; 0xf2c <DIO_u8SetPinValue>
	/* Send Char byte to the Data Pins of LCD */
	DIO_u8SetPortValue(LCD_u8_DATA_PORT,Copy_u8Char);
    213a:	82 e0       	ldi	r24, 0x02	; 2
    213c:	69 a9       	ldd	r22, Y+49	; 0x31
    213e:	0e 94 6d 0a 	call	0x14da	; 0x14da <DIO_u8SetPortValue>
	/* Pulse of Enable E = 1 , E = 0 */
	DIO_u8SetPinValue(LCD_u8_CONTROL_PORT,LCD_u8_E_PIN,DIO_u8_HIGH);
    2142:	83 e0       	ldi	r24, 0x03	; 3
    2144:	65 e0       	ldi	r22, 0x05	; 5
    2146:	41 e0       	ldi	r20, 0x01	; 1
    2148:	0e 94 96 07 	call	0xf2c	; 0xf2c <DIO_u8SetPinValue>
    214c:	80 e0       	ldi	r24, 0x00	; 0
    214e:	90 e0       	ldi	r25, 0x00	; 0
    2150:	a0 e8       	ldi	r26, 0x80	; 128
    2152:	bf e3       	ldi	r27, 0x3F	; 63
    2154:	8d a7       	std	Y+45, r24	; 0x2d
    2156:	9e a7       	std	Y+46, r25	; 0x2e
    2158:	af a7       	std	Y+47, r26	; 0x2f
    215a:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    215c:	6d a5       	ldd	r22, Y+45	; 0x2d
    215e:	7e a5       	ldd	r23, Y+46	; 0x2e
    2160:	8f a5       	ldd	r24, Y+47	; 0x2f
    2162:	98 a9       	ldd	r25, Y+48	; 0x30
    2164:	2b ea       	ldi	r18, 0xAB	; 171
    2166:	3a ea       	ldi	r19, 0xAA	; 170
    2168:	4a e2       	ldi	r20, 0x2A	; 42
    216a:	50 e4       	ldi	r21, 0x40	; 64
    216c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2170:	dc 01       	movw	r26, r24
    2172:	cb 01       	movw	r24, r22
    2174:	89 a7       	std	Y+41, r24	; 0x29
    2176:	9a a7       	std	Y+42, r25	; 0x2a
    2178:	ab a7       	std	Y+43, r26	; 0x2b
    217a:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    217c:	69 a5       	ldd	r22, Y+41	; 0x29
    217e:	7a a5       	ldd	r23, Y+42	; 0x2a
    2180:	8b a5       	ldd	r24, Y+43	; 0x2b
    2182:	9c a5       	ldd	r25, Y+44	; 0x2c
    2184:	20 e0       	ldi	r18, 0x00	; 0
    2186:	30 e0       	ldi	r19, 0x00	; 0
    2188:	40 e8       	ldi	r20, 0x80	; 128
    218a:	5f e3       	ldi	r21, 0x3F	; 63
    218c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2190:	88 23       	and	r24, r24
    2192:	1c f4       	brge	.+6      	; 0x219a <LCD_voidSendChar+0x8a>
		__ticks = 1;
    2194:	81 e0       	ldi	r24, 0x01	; 1
    2196:	88 a7       	std	Y+40, r24	; 0x28
    2198:	91 c0       	rjmp	.+290    	; 0x22bc <LCD_voidSendChar+0x1ac>
	else if (__tmp > 255)
    219a:	69 a5       	ldd	r22, Y+41	; 0x29
    219c:	7a a5       	ldd	r23, Y+42	; 0x2a
    219e:	8b a5       	ldd	r24, Y+43	; 0x2b
    21a0:	9c a5       	ldd	r25, Y+44	; 0x2c
    21a2:	20 e0       	ldi	r18, 0x00	; 0
    21a4:	30 e0       	ldi	r19, 0x00	; 0
    21a6:	4f e7       	ldi	r20, 0x7F	; 127
    21a8:	53 e4       	ldi	r21, 0x43	; 67
    21aa:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    21ae:	18 16       	cp	r1, r24
    21b0:	0c f0       	brlt	.+2      	; 0x21b4 <LCD_voidSendChar+0xa4>
    21b2:	7b c0       	rjmp	.+246    	; 0x22aa <LCD_voidSendChar+0x19a>
	{
		_delay_ms(__us / 1000.0);
    21b4:	6d a5       	ldd	r22, Y+45	; 0x2d
    21b6:	7e a5       	ldd	r23, Y+46	; 0x2e
    21b8:	8f a5       	ldd	r24, Y+47	; 0x2f
    21ba:	98 a9       	ldd	r25, Y+48	; 0x30
    21bc:	20 e0       	ldi	r18, 0x00	; 0
    21be:	30 e0       	ldi	r19, 0x00	; 0
    21c0:	4a e7       	ldi	r20, 0x7A	; 122
    21c2:	54 e4       	ldi	r21, 0x44	; 68
    21c4:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    21c8:	dc 01       	movw	r26, r24
    21ca:	cb 01       	movw	r24, r22
    21cc:	8c a3       	std	Y+36, r24	; 0x24
    21ce:	9d a3       	std	Y+37, r25	; 0x25
    21d0:	ae a3       	std	Y+38, r26	; 0x26
    21d2:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21d4:	6c a1       	ldd	r22, Y+36	; 0x24
    21d6:	7d a1       	ldd	r23, Y+37	; 0x25
    21d8:	8e a1       	ldd	r24, Y+38	; 0x26
    21da:	9f a1       	ldd	r25, Y+39	; 0x27
    21dc:	20 e0       	ldi	r18, 0x00	; 0
    21de:	30 e0       	ldi	r19, 0x00	; 0
    21e0:	4a ef       	ldi	r20, 0xFA	; 250
    21e2:	54 e4       	ldi	r21, 0x44	; 68
    21e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21e8:	dc 01       	movw	r26, r24
    21ea:	cb 01       	movw	r24, r22
    21ec:	88 a3       	std	Y+32, r24	; 0x20
    21ee:	99 a3       	std	Y+33, r25	; 0x21
    21f0:	aa a3       	std	Y+34, r26	; 0x22
    21f2:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    21f4:	68 a1       	ldd	r22, Y+32	; 0x20
    21f6:	79 a1       	ldd	r23, Y+33	; 0x21
    21f8:	8a a1       	ldd	r24, Y+34	; 0x22
    21fa:	9b a1       	ldd	r25, Y+35	; 0x23
    21fc:	20 e0       	ldi	r18, 0x00	; 0
    21fe:	30 e0       	ldi	r19, 0x00	; 0
    2200:	40 e8       	ldi	r20, 0x80	; 128
    2202:	5f e3       	ldi	r21, 0x3F	; 63
    2204:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2208:	88 23       	and	r24, r24
    220a:	2c f4       	brge	.+10     	; 0x2216 <LCD_voidSendChar+0x106>
		__ticks = 1;
    220c:	81 e0       	ldi	r24, 0x01	; 1
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	9f 8f       	std	Y+31, r25	; 0x1f
    2212:	8e 8f       	std	Y+30, r24	; 0x1e
    2214:	3f c0       	rjmp	.+126    	; 0x2294 <LCD_voidSendChar+0x184>
	else if (__tmp > 65535)
    2216:	68 a1       	ldd	r22, Y+32	; 0x20
    2218:	79 a1       	ldd	r23, Y+33	; 0x21
    221a:	8a a1       	ldd	r24, Y+34	; 0x22
    221c:	9b a1       	ldd	r25, Y+35	; 0x23
    221e:	20 e0       	ldi	r18, 0x00	; 0
    2220:	3f ef       	ldi	r19, 0xFF	; 255
    2222:	4f e7       	ldi	r20, 0x7F	; 127
    2224:	57 e4       	ldi	r21, 0x47	; 71
    2226:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    222a:	18 16       	cp	r1, r24
    222c:	4c f5       	brge	.+82     	; 0x2280 <LCD_voidSendChar+0x170>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    222e:	6c a1       	ldd	r22, Y+36	; 0x24
    2230:	7d a1       	ldd	r23, Y+37	; 0x25
    2232:	8e a1       	ldd	r24, Y+38	; 0x26
    2234:	9f a1       	ldd	r25, Y+39	; 0x27
    2236:	20 e0       	ldi	r18, 0x00	; 0
    2238:	30 e0       	ldi	r19, 0x00	; 0
    223a:	40 e2       	ldi	r20, 0x20	; 32
    223c:	51 e4       	ldi	r21, 0x41	; 65
    223e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2242:	dc 01       	movw	r26, r24
    2244:	cb 01       	movw	r24, r22
    2246:	bc 01       	movw	r22, r24
    2248:	cd 01       	movw	r24, r26
    224a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    224e:	dc 01       	movw	r26, r24
    2250:	cb 01       	movw	r24, r22
    2252:	9f 8f       	std	Y+31, r25	; 0x1f
    2254:	8e 8f       	std	Y+30, r24	; 0x1e
    2256:	0f c0       	rjmp	.+30     	; 0x2276 <LCD_voidSendChar+0x166>
    2258:	88 ec       	ldi	r24, 0xC8	; 200
    225a:	90 e0       	ldi	r25, 0x00	; 0
    225c:	9d 8f       	std	Y+29, r25	; 0x1d
    225e:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2260:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2262:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2264:	01 97       	sbiw	r24, 0x01	; 1
    2266:	f1 f7       	brne	.-4      	; 0x2264 <LCD_voidSendChar+0x154>
    2268:	9d 8f       	std	Y+29, r25	; 0x1d
    226a:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    226c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    226e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2270:	01 97       	sbiw	r24, 0x01	; 1
    2272:	9f 8f       	std	Y+31, r25	; 0x1f
    2274:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2276:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2278:	9f 8d       	ldd	r25, Y+31	; 0x1f
    227a:	00 97       	sbiw	r24, 0x00	; 0
    227c:	69 f7       	brne	.-38     	; 0x2258 <LCD_voidSendChar+0x148>
    227e:	24 c0       	rjmp	.+72     	; 0x22c8 <LCD_voidSendChar+0x1b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2280:	68 a1       	ldd	r22, Y+32	; 0x20
    2282:	79 a1       	ldd	r23, Y+33	; 0x21
    2284:	8a a1       	ldd	r24, Y+34	; 0x22
    2286:	9b a1       	ldd	r25, Y+35	; 0x23
    2288:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    228c:	dc 01       	movw	r26, r24
    228e:	cb 01       	movw	r24, r22
    2290:	9f 8f       	std	Y+31, r25	; 0x1f
    2292:	8e 8f       	std	Y+30, r24	; 0x1e
    2294:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2296:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2298:	9b 8f       	std	Y+27, r25	; 0x1b
    229a:	8a 8f       	std	Y+26, r24	; 0x1a
    229c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    229e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    22a0:	01 97       	sbiw	r24, 0x01	; 1
    22a2:	f1 f7       	brne	.-4      	; 0x22a0 <LCD_voidSendChar+0x190>
    22a4:	9b 8f       	std	Y+27, r25	; 0x1b
    22a6:	8a 8f       	std	Y+26, r24	; 0x1a
    22a8:	0f c0       	rjmp	.+30     	; 0x22c8 <LCD_voidSendChar+0x1b8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    22aa:	69 a5       	ldd	r22, Y+41	; 0x29
    22ac:	7a a5       	ldd	r23, Y+42	; 0x2a
    22ae:	8b a5       	ldd	r24, Y+43	; 0x2b
    22b0:	9c a5       	ldd	r25, Y+44	; 0x2c
    22b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22b6:	dc 01       	movw	r26, r24
    22b8:	cb 01       	movw	r24, r22
    22ba:	88 a7       	std	Y+40, r24	; 0x28
    22bc:	88 a5       	ldd	r24, Y+40	; 0x28
    22be:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    22c0:	89 8d       	ldd	r24, Y+25	; 0x19
    22c2:	8a 95       	dec	r24
    22c4:	f1 f7       	brne	.-4      	; 0x22c2 <LCD_voidSendChar+0x1b2>
    22c6:	89 8f       	std	Y+25, r24	; 0x19
	_delay_us(1);
	DIO_u8SetPinValue(LCD_u8_CONTROL_PORT,LCD_u8_E_PIN,DIO_u8_LOW);
    22c8:	83 e0       	ldi	r24, 0x03	; 3
    22ca:	65 e0       	ldi	r22, 0x05	; 5
    22cc:	40 e0       	ldi	r20, 0x00	; 0
    22ce:	0e 94 96 07 	call	0xf2c	; 0xf2c <DIO_u8SetPinValue>
    22d2:	80 e0       	ldi	r24, 0x00	; 0
    22d4:	90 e0       	ldi	r25, 0x00	; 0
    22d6:	a0 e8       	ldi	r26, 0x80	; 128
    22d8:	bf e3       	ldi	r27, 0x3F	; 63
    22da:	8d 8b       	std	Y+21, r24	; 0x15
    22dc:	9e 8b       	std	Y+22, r25	; 0x16
    22de:	af 8b       	std	Y+23, r26	; 0x17
    22e0:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    22e2:	6d 89       	ldd	r22, Y+21	; 0x15
    22e4:	7e 89       	ldd	r23, Y+22	; 0x16
    22e6:	8f 89       	ldd	r24, Y+23	; 0x17
    22e8:	98 8d       	ldd	r25, Y+24	; 0x18
    22ea:	2b ea       	ldi	r18, 0xAB	; 171
    22ec:	3a ea       	ldi	r19, 0xAA	; 170
    22ee:	4a e2       	ldi	r20, 0x2A	; 42
    22f0:	50 e4       	ldi	r21, 0x40	; 64
    22f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22f6:	dc 01       	movw	r26, r24
    22f8:	cb 01       	movw	r24, r22
    22fa:	89 8b       	std	Y+17, r24	; 0x11
    22fc:	9a 8b       	std	Y+18, r25	; 0x12
    22fe:	ab 8b       	std	Y+19, r26	; 0x13
    2300:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    2302:	69 89       	ldd	r22, Y+17	; 0x11
    2304:	7a 89       	ldd	r23, Y+18	; 0x12
    2306:	8b 89       	ldd	r24, Y+19	; 0x13
    2308:	9c 89       	ldd	r25, Y+20	; 0x14
    230a:	20 e0       	ldi	r18, 0x00	; 0
    230c:	30 e0       	ldi	r19, 0x00	; 0
    230e:	40 e8       	ldi	r20, 0x80	; 128
    2310:	5f e3       	ldi	r21, 0x3F	; 63
    2312:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2316:	88 23       	and	r24, r24
    2318:	1c f4       	brge	.+6      	; 0x2320 <LCD_voidSendChar+0x210>
		__ticks = 1;
    231a:	81 e0       	ldi	r24, 0x01	; 1
    231c:	88 8b       	std	Y+16, r24	; 0x10
    231e:	91 c0       	rjmp	.+290    	; 0x2442 <LCD_voidSendChar+0x332>
	else if (__tmp > 255)
    2320:	69 89       	ldd	r22, Y+17	; 0x11
    2322:	7a 89       	ldd	r23, Y+18	; 0x12
    2324:	8b 89       	ldd	r24, Y+19	; 0x13
    2326:	9c 89       	ldd	r25, Y+20	; 0x14
    2328:	20 e0       	ldi	r18, 0x00	; 0
    232a:	30 e0       	ldi	r19, 0x00	; 0
    232c:	4f e7       	ldi	r20, 0x7F	; 127
    232e:	53 e4       	ldi	r21, 0x43	; 67
    2330:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2334:	18 16       	cp	r1, r24
    2336:	0c f0       	brlt	.+2      	; 0x233a <LCD_voidSendChar+0x22a>
    2338:	7b c0       	rjmp	.+246    	; 0x2430 <LCD_voidSendChar+0x320>
	{
		_delay_ms(__us / 1000.0);
    233a:	6d 89       	ldd	r22, Y+21	; 0x15
    233c:	7e 89       	ldd	r23, Y+22	; 0x16
    233e:	8f 89       	ldd	r24, Y+23	; 0x17
    2340:	98 8d       	ldd	r25, Y+24	; 0x18
    2342:	20 e0       	ldi	r18, 0x00	; 0
    2344:	30 e0       	ldi	r19, 0x00	; 0
    2346:	4a e7       	ldi	r20, 0x7A	; 122
    2348:	54 e4       	ldi	r21, 0x44	; 68
    234a:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    234e:	dc 01       	movw	r26, r24
    2350:	cb 01       	movw	r24, r22
    2352:	8c 87       	std	Y+12, r24	; 0x0c
    2354:	9d 87       	std	Y+13, r25	; 0x0d
    2356:	ae 87       	std	Y+14, r26	; 0x0e
    2358:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    235a:	6c 85       	ldd	r22, Y+12	; 0x0c
    235c:	7d 85       	ldd	r23, Y+13	; 0x0d
    235e:	8e 85       	ldd	r24, Y+14	; 0x0e
    2360:	9f 85       	ldd	r25, Y+15	; 0x0f
    2362:	20 e0       	ldi	r18, 0x00	; 0
    2364:	30 e0       	ldi	r19, 0x00	; 0
    2366:	4a ef       	ldi	r20, 0xFA	; 250
    2368:	54 e4       	ldi	r21, 0x44	; 68
    236a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    236e:	dc 01       	movw	r26, r24
    2370:	cb 01       	movw	r24, r22
    2372:	88 87       	std	Y+8, r24	; 0x08
    2374:	99 87       	std	Y+9, r25	; 0x09
    2376:	aa 87       	std	Y+10, r26	; 0x0a
    2378:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    237a:	68 85       	ldd	r22, Y+8	; 0x08
    237c:	79 85       	ldd	r23, Y+9	; 0x09
    237e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2380:	9b 85       	ldd	r25, Y+11	; 0x0b
    2382:	20 e0       	ldi	r18, 0x00	; 0
    2384:	30 e0       	ldi	r19, 0x00	; 0
    2386:	40 e8       	ldi	r20, 0x80	; 128
    2388:	5f e3       	ldi	r21, 0x3F	; 63
    238a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    238e:	88 23       	and	r24, r24
    2390:	2c f4       	brge	.+10     	; 0x239c <LCD_voidSendChar+0x28c>
		__ticks = 1;
    2392:	81 e0       	ldi	r24, 0x01	; 1
    2394:	90 e0       	ldi	r25, 0x00	; 0
    2396:	9f 83       	std	Y+7, r25	; 0x07
    2398:	8e 83       	std	Y+6, r24	; 0x06
    239a:	3f c0       	rjmp	.+126    	; 0x241a <LCD_voidSendChar+0x30a>
	else if (__tmp > 65535)
    239c:	68 85       	ldd	r22, Y+8	; 0x08
    239e:	79 85       	ldd	r23, Y+9	; 0x09
    23a0:	8a 85       	ldd	r24, Y+10	; 0x0a
    23a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    23a4:	20 e0       	ldi	r18, 0x00	; 0
    23a6:	3f ef       	ldi	r19, 0xFF	; 255
    23a8:	4f e7       	ldi	r20, 0x7F	; 127
    23aa:	57 e4       	ldi	r21, 0x47	; 71
    23ac:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    23b0:	18 16       	cp	r1, r24
    23b2:	4c f5       	brge	.+82     	; 0x2406 <LCD_voidSendChar+0x2f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23b4:	6c 85       	ldd	r22, Y+12	; 0x0c
    23b6:	7d 85       	ldd	r23, Y+13	; 0x0d
    23b8:	8e 85       	ldd	r24, Y+14	; 0x0e
    23ba:	9f 85       	ldd	r25, Y+15	; 0x0f
    23bc:	20 e0       	ldi	r18, 0x00	; 0
    23be:	30 e0       	ldi	r19, 0x00	; 0
    23c0:	40 e2       	ldi	r20, 0x20	; 32
    23c2:	51 e4       	ldi	r21, 0x41	; 65
    23c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23c8:	dc 01       	movw	r26, r24
    23ca:	cb 01       	movw	r24, r22
    23cc:	bc 01       	movw	r22, r24
    23ce:	cd 01       	movw	r24, r26
    23d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23d4:	dc 01       	movw	r26, r24
    23d6:	cb 01       	movw	r24, r22
    23d8:	9f 83       	std	Y+7, r25	; 0x07
    23da:	8e 83       	std	Y+6, r24	; 0x06
    23dc:	0f c0       	rjmp	.+30     	; 0x23fc <LCD_voidSendChar+0x2ec>
    23de:	88 ec       	ldi	r24, 0xC8	; 200
    23e0:	90 e0       	ldi	r25, 0x00	; 0
    23e2:	9d 83       	std	Y+5, r25	; 0x05
    23e4:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    23e6:	8c 81       	ldd	r24, Y+4	; 0x04
    23e8:	9d 81       	ldd	r25, Y+5	; 0x05
    23ea:	01 97       	sbiw	r24, 0x01	; 1
    23ec:	f1 f7       	brne	.-4      	; 0x23ea <LCD_voidSendChar+0x2da>
    23ee:	9d 83       	std	Y+5, r25	; 0x05
    23f0:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23f2:	8e 81       	ldd	r24, Y+6	; 0x06
    23f4:	9f 81       	ldd	r25, Y+7	; 0x07
    23f6:	01 97       	sbiw	r24, 0x01	; 1
    23f8:	9f 83       	std	Y+7, r25	; 0x07
    23fa:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23fc:	8e 81       	ldd	r24, Y+6	; 0x06
    23fe:	9f 81       	ldd	r25, Y+7	; 0x07
    2400:	00 97       	sbiw	r24, 0x00	; 0
    2402:	69 f7       	brne	.-38     	; 0x23de <LCD_voidSendChar+0x2ce>
    2404:	24 c0       	rjmp	.+72     	; 0x244e <LCD_voidSendChar+0x33e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2406:	68 85       	ldd	r22, Y+8	; 0x08
    2408:	79 85       	ldd	r23, Y+9	; 0x09
    240a:	8a 85       	ldd	r24, Y+10	; 0x0a
    240c:	9b 85       	ldd	r25, Y+11	; 0x0b
    240e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2412:	dc 01       	movw	r26, r24
    2414:	cb 01       	movw	r24, r22
    2416:	9f 83       	std	Y+7, r25	; 0x07
    2418:	8e 83       	std	Y+6, r24	; 0x06
    241a:	8e 81       	ldd	r24, Y+6	; 0x06
    241c:	9f 81       	ldd	r25, Y+7	; 0x07
    241e:	9b 83       	std	Y+3, r25	; 0x03
    2420:	8a 83       	std	Y+2, r24	; 0x02
    2422:	8a 81       	ldd	r24, Y+2	; 0x02
    2424:	9b 81       	ldd	r25, Y+3	; 0x03
    2426:	01 97       	sbiw	r24, 0x01	; 1
    2428:	f1 f7       	brne	.-4      	; 0x2426 <LCD_voidSendChar+0x316>
    242a:	9b 83       	std	Y+3, r25	; 0x03
    242c:	8a 83       	std	Y+2, r24	; 0x02
    242e:	0f c0       	rjmp	.+30     	; 0x244e <LCD_voidSendChar+0x33e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2430:	69 89       	ldd	r22, Y+17	; 0x11
    2432:	7a 89       	ldd	r23, Y+18	; 0x12
    2434:	8b 89       	ldd	r24, Y+19	; 0x13
    2436:	9c 89       	ldd	r25, Y+20	; 0x14
    2438:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    243c:	dc 01       	movw	r26, r24
    243e:	cb 01       	movw	r24, r22
    2440:	88 8b       	std	Y+16, r24	; 0x10
    2442:	88 89       	ldd	r24, Y+16	; 0x10
    2444:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2446:	89 81       	ldd	r24, Y+1	; 0x01
    2448:	8a 95       	dec	r24
    244a:	f1 f7       	brne	.-4      	; 0x2448 <LCD_voidSendChar+0x338>
    244c:	89 83       	std	Y+1, r24	; 0x01
	_delay_us(1);
}
    244e:	e1 96       	adiw	r28, 0x31	; 49
    2450:	0f b6       	in	r0, 0x3f	; 63
    2452:	f8 94       	cli
    2454:	de bf       	out	0x3e, r29	; 62
    2456:	0f be       	out	0x3f, r0	; 63
    2458:	cd bf       	out	0x3d, r28	; 61
    245a:	cf 91       	pop	r28
    245c:	df 91       	pop	r29
    245e:	08 95       	ret

00002460 <LCD_voidWriteString>:
void LCD_voidWriteString (u8 * Copy_pu8String)
{
    2460:	df 93       	push	r29
    2462:	cf 93       	push	r28
    2464:	00 d0       	rcall	.+0      	; 0x2466 <LCD_voidWriteString+0x6>
    2466:	00 d0       	rcall	.+0      	; 0x2468 <LCD_voidWriteString+0x8>
    2468:	cd b7       	in	r28, 0x3d	; 61
    246a:	de b7       	in	r29, 0x3e	; 62
    246c:	9c 83       	std	Y+4, r25	; 0x04
    246e:	8b 83       	std	Y+3, r24	; 0x03
	if(Copy_pu8String != NULL )
    2470:	8b 81       	ldd	r24, Y+3	; 0x03
    2472:	9c 81       	ldd	r25, Y+4	; 0x04
    2474:	00 97       	sbiw	r24, 0x00	; 0
    2476:	21 f1       	breq	.+72     	; 0x24c0 <LCD_voidWriteString+0x60>
	{
	    u8 x = 0;
    2478:	1a 82       	std	Y+2, r1	; 0x02
	    u8 i = 0;
    247a:	19 82       	std	Y+1, r1	; 0x01
    247c:	16 c0       	rjmp	.+44     	; 0x24aa <LCD_voidWriteString+0x4a>
		while(Copy_pu8String[x] != '\0')
		{
		 x++ ;
    247e:	8a 81       	ldd	r24, Y+2	; 0x02
    2480:	8f 5f       	subi	r24, 0xFF	; 255
    2482:	8a 83       	std	Y+2, r24	; 0x02
    2484:	0e c0       	rjmp	.+28     	; 0x24a2 <LCD_voidWriteString+0x42>
		 for(  ; i < x; i++)
		 {
		  /* Write Character on LCD */
		  LCD_voidSendChar (Copy_pu8String[i]);
    2486:	89 81       	ldd	r24, Y+1	; 0x01
    2488:	28 2f       	mov	r18, r24
    248a:	30 e0       	ldi	r19, 0x00	; 0
    248c:	8b 81       	ldd	r24, Y+3	; 0x03
    248e:	9c 81       	ldd	r25, Y+4	; 0x04
    2490:	fc 01       	movw	r30, r24
    2492:	e2 0f       	add	r30, r18
    2494:	f3 1f       	adc	r31, r19
    2496:	80 81       	ld	r24, Z
    2498:	0e 94 88 10 	call	0x2110	; 0x2110 <LCD_voidSendChar>
	    u8 x = 0;
	    u8 i = 0;
		while(Copy_pu8String[x] != '\0')
		{
		 x++ ;
		 for(  ; i < x; i++)
    249c:	89 81       	ldd	r24, Y+1	; 0x01
    249e:	8f 5f       	subi	r24, 0xFF	; 255
    24a0:	89 83       	std	Y+1, r24	; 0x01
    24a2:	99 81       	ldd	r25, Y+1	; 0x01
    24a4:	8a 81       	ldd	r24, Y+2	; 0x02
    24a6:	98 17       	cp	r25, r24
    24a8:	70 f3       	brcs	.-36     	; 0x2486 <LCD_voidWriteString+0x26>
{
	if(Copy_pu8String != NULL )
	{
	    u8 x = 0;
	    u8 i = 0;
		while(Copy_pu8String[x] != '\0')
    24aa:	8a 81       	ldd	r24, Y+2	; 0x02
    24ac:	28 2f       	mov	r18, r24
    24ae:	30 e0       	ldi	r19, 0x00	; 0
    24b0:	8b 81       	ldd	r24, Y+3	; 0x03
    24b2:	9c 81       	ldd	r25, Y+4	; 0x04
    24b4:	fc 01       	movw	r30, r24
    24b6:	e2 0f       	add	r30, r18
    24b8:	f3 1f       	adc	r31, r19
    24ba:	80 81       	ld	r24, Z
    24bc:	88 23       	and	r24, r24
    24be:	f9 f6       	brne	.-66     	; 0x247e <LCD_voidWriteString+0x1e>
		 }
		 
		}
	}
	
}
    24c0:	0f 90       	pop	r0
    24c2:	0f 90       	pop	r0
    24c4:	0f 90       	pop	r0
    24c6:	0f 90       	pop	r0
    24c8:	cf 91       	pop	r28
    24ca:	df 91       	pop	r29
    24cc:	08 95       	ret

000024ce <LCD_u8_GoTo_XY>:
u8 LCD_u8_GoTo_XY     (u8 Copy_u8X,u8 Copy_u8Y)
{
    24ce:	df 93       	push	r29
    24d0:	cf 93       	push	r28
    24d2:	00 d0       	rcall	.+0      	; 0x24d4 <LCD_u8_GoTo_XY+0x6>
    24d4:	00 d0       	rcall	.+0      	; 0x24d6 <LCD_u8_GoTo_XY+0x8>
    24d6:	00 d0       	rcall	.+0      	; 0x24d8 <LCD_u8_GoTo_XY+0xa>
    24d8:	cd b7       	in	r28, 0x3d	; 61
    24da:	de b7       	in	r29, 0x3e	; 62
    24dc:	8a 83       	std	Y+2, r24	; 0x02
    24de:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ReturnState = STD_TYPES_OK;
    24e0:	81 e0       	ldi	r24, 0x01	; 1
    24e2:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8X <=1)&&(Copy_u8Y <= 39))
    24e4:	8a 81       	ldd	r24, Y+2	; 0x02
    24e6:	82 30       	cpi	r24, 0x02	; 2
    24e8:	e0 f4       	brcc	.+56     	; 0x2522 <LCD_u8_GoTo_XY+0x54>
    24ea:	8b 81       	ldd	r24, Y+3	; 0x03
    24ec:	88 32       	cpi	r24, 0x28	; 40
    24ee:	c8 f4       	brcc	.+50     	; 0x2522 <LCD_u8_GoTo_XY+0x54>
	{
		switch(Copy_u8X)
    24f0:	8a 81       	ldd	r24, Y+2	; 0x02
    24f2:	28 2f       	mov	r18, r24
    24f4:	30 e0       	ldi	r19, 0x00	; 0
    24f6:	3d 83       	std	Y+5, r19	; 0x05
    24f8:	2c 83       	std	Y+4, r18	; 0x04
    24fa:	8c 81       	ldd	r24, Y+4	; 0x04
    24fc:	9d 81       	ldd	r25, Y+5	; 0x05
    24fe:	00 97       	sbiw	r24, 0x00	; 0
    2500:	31 f0       	breq	.+12     	; 0x250e <LCD_u8_GoTo_XY+0x40>
    2502:	2c 81       	ldd	r18, Y+4	; 0x04
    2504:	3d 81       	ldd	r19, Y+5	; 0x05
    2506:	21 30       	cpi	r18, 0x01	; 1
    2508:	31 05       	cpc	r19, r1
    250a:	31 f0       	breq	.+12     	; 0x2518 <LCD_u8_GoTo_XY+0x4a>
    250c:	0b c0       	rjmp	.+22     	; 0x2524 <LCD_u8_GoTo_XY+0x56>
		{
		case LCD_u8_LINE0 : LCD_voidSendCmnd(0x80 + Copy_u8Y);break;
    250e:	8b 81       	ldd	r24, Y+3	; 0x03
    2510:	80 58       	subi	r24, 0x80	; 128
    2512:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    2516:	06 c0       	rjmp	.+12     	; 0x2524 <LCD_u8_GoTo_XY+0x56>

		case LCD_u8_LINE1 : LCD_voidSendCmnd(0xC0 + Copy_u8Y);break;
    2518:	8b 81       	ldd	r24, Y+3	; 0x03
    251a:	80 54       	subi	r24, 0x40	; 64
    251c:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    2520:	01 c0       	rjmp	.+2      	; 0x2524 <LCD_u8_GoTo_XY+0x56>
		}
	}
	else
	{
		Local_u8ReturnState = STD_TYPES_NOK;
    2522:	19 82       	std	Y+1, r1	; 0x01
	}


}
    2524:	26 96       	adiw	r28, 0x06	; 6
    2526:	0f b6       	in	r0, 0x3f	; 63
    2528:	f8 94       	cli
    252a:	de bf       	out	0x3e, r29	; 62
    252c:	0f be       	out	0x3f, r0	; 63
    252e:	cd bf       	out	0x3d, r28	; 61
    2530:	cf 91       	pop	r28
    2532:	df 91       	pop	r29
    2534:	08 95       	ret

00002536 <LCD_voidWriteNumber>:
void LCD_voidWriteNumber (u32  Copy_u32Num)
{
    2536:	df 93       	push	r29
    2538:	cf 93       	push	r28
    253a:	cd b7       	in	r28, 0x3d	; 61
    253c:	de b7       	in	r29, 0x3e	; 62
    253e:	66 97       	sbiw	r28, 0x16	; 22
    2540:	0f b6       	in	r0, 0x3f	; 63
    2542:	f8 94       	cli
    2544:	de bf       	out	0x3e, r29	; 62
    2546:	0f be       	out	0x3f, r0	; 63
    2548:	cd bf       	out	0x3d, r28	; 61
    254a:	6b 8b       	std	Y+19, r22	; 0x13
    254c:	7c 8b       	std	Y+20, r23	; 0x14
    254e:	8d 8b       	std	Y+21, r24	; 0x15
    2550:	9e 8b       	std	Y+22, r25	; 0x16

	u8 Arr[10];
	u8 Local_Remainder = 1;
    2552:	81 e0       	ldi	r24, 0x01	; 1
    2554:	88 87       	std	Y+8, r24	; 0x08
	u32 Local_Number = Copy_u32Num;
    2556:	8b 89       	ldd	r24, Y+19	; 0x13
    2558:	9c 89       	ldd	r25, Y+20	; 0x14
    255a:	ad 89       	ldd	r26, Y+21	; 0x15
    255c:	be 89       	ldd	r27, Y+22	; 0x16
    255e:	8c 83       	std	Y+4, r24	; 0x04
    2560:	9d 83       	std	Y+5, r25	; 0x05
    2562:	ae 83       	std	Y+6, r26	; 0x06
    2564:	bf 83       	std	Y+7, r27	; 0x07
	u8 Local_Counter = 0;
    2566:	1b 82       	std	Y+3, r1	; 0x03
	u8 Local_Counter2 ;


	for(u8 initial = 10 ; initial >=1 ; initial--)
    2568:	8a e0       	ldi	r24, 0x0A	; 10
    256a:	89 83       	std	Y+1, r24	; 0x01
    256c:	37 c0       	rjmp	.+110    	; 0x25dc <LCD_voidWriteNumber+0xa6>
	{

		Local_Remainder = Local_Number % 10 ;
    256e:	8c 81       	ldd	r24, Y+4	; 0x04
    2570:	9d 81       	ldd	r25, Y+5	; 0x05
    2572:	ae 81       	ldd	r26, Y+6	; 0x06
    2574:	bf 81       	ldd	r27, Y+7	; 0x07
    2576:	2a e0       	ldi	r18, 0x0A	; 10
    2578:	30 e0       	ldi	r19, 0x00	; 0
    257a:	40 e0       	ldi	r20, 0x00	; 0
    257c:	50 e0       	ldi	r21, 0x00	; 0
    257e:	bc 01       	movw	r22, r24
    2580:	cd 01       	movw	r24, r26
    2582:	0e 94 55 20 	call	0x40aa	; 0x40aa <__udivmodsi4>
    2586:	dc 01       	movw	r26, r24
    2588:	cb 01       	movw	r24, r22
    258a:	88 87       	std	Y+8, r24	; 0x08
		Local_Number = Local_Number /10 ;
    258c:	8c 81       	ldd	r24, Y+4	; 0x04
    258e:	9d 81       	ldd	r25, Y+5	; 0x05
    2590:	ae 81       	ldd	r26, Y+6	; 0x06
    2592:	bf 81       	ldd	r27, Y+7	; 0x07
    2594:	2a e0       	ldi	r18, 0x0A	; 10
    2596:	30 e0       	ldi	r19, 0x00	; 0
    2598:	40 e0       	ldi	r20, 0x00	; 0
    259a:	50 e0       	ldi	r21, 0x00	; 0
    259c:	bc 01       	movw	r22, r24
    259e:	cd 01       	movw	r24, r26
    25a0:	0e 94 55 20 	call	0x40aa	; 0x40aa <__udivmodsi4>
    25a4:	da 01       	movw	r26, r20
    25a6:	c9 01       	movw	r24, r18
    25a8:	8c 83       	std	Y+4, r24	; 0x04
    25aa:	9d 83       	std	Y+5, r25	; 0x05
    25ac:	ae 83       	std	Y+6, r26	; 0x06
    25ae:	bf 83       	std	Y+7, r27	; 0x07

		if(Local_Remainder == 0)
    25b0:	88 85       	ldd	r24, Y+8	; 0x08
    25b2:	88 23       	and	r24, r24
    25b4:	b1 f0       	breq	.+44     	; 0x25e2 <LCD_voidWriteNumber+0xac>
		{
			break;
		}
		Local_Counter ++;
    25b6:	8b 81       	ldd	r24, Y+3	; 0x03
    25b8:	8f 5f       	subi	r24, 0xFF	; 255
    25ba:	8b 83       	std	Y+3, r24	; 0x03
		Arr[initial-1] = Local_Remainder ;
    25bc:	89 81       	ldd	r24, Y+1	; 0x01
    25be:	88 2f       	mov	r24, r24
    25c0:	90 e0       	ldi	r25, 0x00	; 0
    25c2:	9c 01       	movw	r18, r24
    25c4:	21 50       	subi	r18, 0x01	; 1
    25c6:	30 40       	sbci	r19, 0x00	; 0
    25c8:	ce 01       	movw	r24, r28
    25ca:	09 96       	adiw	r24, 0x09	; 9
    25cc:	fc 01       	movw	r30, r24
    25ce:	e2 0f       	add	r30, r18
    25d0:	f3 1f       	adc	r31, r19
    25d2:	88 85       	ldd	r24, Y+8	; 0x08
    25d4:	80 83       	st	Z, r24
	u32 Local_Number = Copy_u32Num;
	u8 Local_Counter = 0;
	u8 Local_Counter2 ;


	for(u8 initial = 10 ; initial >=1 ; initial--)
    25d6:	89 81       	ldd	r24, Y+1	; 0x01
    25d8:	81 50       	subi	r24, 0x01	; 1
    25da:	89 83       	std	Y+1, r24	; 0x01
    25dc:	89 81       	ldd	r24, Y+1	; 0x01
    25de:	88 23       	and	r24, r24
    25e0:	31 f6       	brne	.-116    	; 0x256e <LCD_voidWriteNumber+0x38>
		}
		Local_Counter ++;
		Arr[initial-1] = Local_Remainder ;
	}

	for(Local_Counter2 = 10 - Local_Counter; Local_Counter2 < 10 ; Local_Counter2 ++)
    25e2:	8a e0       	ldi	r24, 0x0A	; 10
    25e4:	9b 81       	ldd	r25, Y+3	; 0x03
    25e6:	89 1b       	sub	r24, r25
    25e8:	8a 83       	std	Y+2, r24	; 0x02
    25ea:	0f c0       	rjmp	.+30     	; 0x260a <LCD_voidWriteNumber+0xd4>
	{
		LCD_voidSendChar(Arr[Local_Counter2]+48);
    25ec:	8a 81       	ldd	r24, Y+2	; 0x02
    25ee:	28 2f       	mov	r18, r24
    25f0:	30 e0       	ldi	r19, 0x00	; 0
    25f2:	ce 01       	movw	r24, r28
    25f4:	09 96       	adiw	r24, 0x09	; 9
    25f6:	fc 01       	movw	r30, r24
    25f8:	e2 0f       	add	r30, r18
    25fa:	f3 1f       	adc	r31, r19
    25fc:	80 81       	ld	r24, Z
    25fe:	80 5d       	subi	r24, 0xD0	; 208
    2600:	0e 94 88 10 	call	0x2110	; 0x2110 <LCD_voidSendChar>
		}
		Local_Counter ++;
		Arr[initial-1] = Local_Remainder ;
	}

	for(Local_Counter2 = 10 - Local_Counter; Local_Counter2 < 10 ; Local_Counter2 ++)
    2604:	8a 81       	ldd	r24, Y+2	; 0x02
    2606:	8f 5f       	subi	r24, 0xFF	; 255
    2608:	8a 83       	std	Y+2, r24	; 0x02
    260a:	8a 81       	ldd	r24, Y+2	; 0x02
    260c:	8a 30       	cpi	r24, 0x0A	; 10
    260e:	70 f3       	brcs	.-36     	; 0x25ec <LCD_voidWriteNumber+0xb6>
		LCD_voidSendChar(Arr[Local_Counter2]+48);
	}



}
    2610:	66 96       	adiw	r28, 0x16	; 22
    2612:	0f b6       	in	r0, 0x3f	; 63
    2614:	f8 94       	cli
    2616:	de bf       	out	0x3e, r29	; 62
    2618:	0f be       	out	0x3f, r0	; 63
    261a:	cd bf       	out	0x3d, r28	; 61
    261c:	cf 91       	pop	r28
    261e:	df 91       	pop	r29
    2620:	08 95       	ret

00002622 <LCD_voidSendSpecialChar>:

void LCD_voidSendSpecialChar(u8 Copy_u8CharNo,u8 Copy_u8X,u8 Copy_u8Y,u8 * Copy_PSpecialChar)
{
    2622:	df 93       	push	r29
    2624:	cf 93       	push	r28
    2626:	cd b7       	in	r28, 0x3d	; 61
    2628:	de b7       	in	r29, 0x3e	; 62
    262a:	28 97       	sbiw	r28, 0x08	; 8
    262c:	0f b6       	in	r0, 0x3f	; 63
    262e:	f8 94       	cli
    2630:	de bf       	out	0x3e, r29	; 62
    2632:	0f be       	out	0x3f, r0	; 63
    2634:	cd bf       	out	0x3d, r28	; 61
    2636:	8a 83       	std	Y+2, r24	; 0x02
    2638:	6b 83       	std	Y+3, r22	; 0x03
    263a:	4c 83       	std	Y+4, r20	; 0x04
    263c:	3e 83       	std	Y+6, r19	; 0x06
    263e:	2d 83       	std	Y+5, r18	; 0x05

	switch(Copy_u8CharNo)
    2640:	8a 81       	ldd	r24, Y+2	; 0x02
    2642:	28 2f       	mov	r18, r24
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	38 87       	std	Y+8, r19	; 0x08
    2648:	2f 83       	std	Y+7, r18	; 0x07
    264a:	8f 81       	ldd	r24, Y+7	; 0x07
    264c:	98 85       	ldd	r25, Y+8	; 0x08
    264e:	83 30       	cpi	r24, 0x03	; 3
    2650:	91 05       	cpc	r25, r1
    2652:	a9 f1       	breq	.+106    	; 0x26be <LCD_voidSendSpecialChar+0x9c>
    2654:	2f 81       	ldd	r18, Y+7	; 0x07
    2656:	38 85       	ldd	r19, Y+8	; 0x08
    2658:	24 30       	cpi	r18, 0x04	; 4
    265a:	31 05       	cpc	r19, r1
    265c:	7c f4       	brge	.+30     	; 0x267c <LCD_voidSendSpecialChar+0x5a>
    265e:	8f 81       	ldd	r24, Y+7	; 0x07
    2660:	98 85       	ldd	r25, Y+8	; 0x08
    2662:	81 30       	cpi	r24, 0x01	; 1
    2664:	91 05       	cpc	r25, r1
    2666:	19 f1       	breq	.+70     	; 0x26ae <LCD_voidSendSpecialChar+0x8c>
    2668:	2f 81       	ldd	r18, Y+7	; 0x07
    266a:	38 85       	ldd	r19, Y+8	; 0x08
    266c:	22 30       	cpi	r18, 0x02	; 2
    266e:	31 05       	cpc	r19, r1
    2670:	14 f5       	brge	.+68     	; 0x26b6 <LCD_voidSendSpecialChar+0x94>
    2672:	8f 81       	ldd	r24, Y+7	; 0x07
    2674:	98 85       	ldd	r25, Y+8	; 0x08
    2676:	00 97       	sbiw	r24, 0x00	; 0
    2678:	b1 f0       	breq	.+44     	; 0x26a6 <LCD_voidSendSpecialChar+0x84>
    267a:	34 c0       	rjmp	.+104    	; 0x26e4 <LCD_voidSendSpecialChar+0xc2>
    267c:	2f 81       	ldd	r18, Y+7	; 0x07
    267e:	38 85       	ldd	r19, Y+8	; 0x08
    2680:	25 30       	cpi	r18, 0x05	; 5
    2682:	31 05       	cpc	r19, r1
    2684:	21 f1       	breq	.+72     	; 0x26ce <LCD_voidSendSpecialChar+0xac>
    2686:	8f 81       	ldd	r24, Y+7	; 0x07
    2688:	98 85       	ldd	r25, Y+8	; 0x08
    268a:	85 30       	cpi	r24, 0x05	; 5
    268c:	91 05       	cpc	r25, r1
    268e:	dc f0       	brlt	.+54     	; 0x26c6 <LCD_voidSendSpecialChar+0xa4>
    2690:	2f 81       	ldd	r18, Y+7	; 0x07
    2692:	38 85       	ldd	r19, Y+8	; 0x08
    2694:	26 30       	cpi	r18, 0x06	; 6
    2696:	31 05       	cpc	r19, r1
    2698:	f1 f0       	breq	.+60     	; 0x26d6 <LCD_voidSendSpecialChar+0xb4>
    269a:	8f 81       	ldd	r24, Y+7	; 0x07
    269c:	98 85       	ldd	r25, Y+8	; 0x08
    269e:	87 30       	cpi	r24, 0x07	; 7
    26a0:	91 05       	cpc	r25, r1
    26a2:	e9 f0       	breq	.+58     	; 0x26de <LCD_voidSendSpecialChar+0xbc>
    26a4:	1f c0       	rjmp	.+62     	; 0x26e4 <LCD_voidSendSpecialChar+0xc2>
	{
	case 0:
		LCD_voidSendCmnd(0b01000000);
    26a6:	80 e4       	ldi	r24, 0x40	; 64
    26a8:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    26ac:	1b c0       	rjmp	.+54     	; 0x26e4 <LCD_voidSendSpecialChar+0xc2>

		break;
	case 1:
	    LCD_voidSendCmnd(0b01001000);
    26ae:	88 e4       	ldi	r24, 0x48	; 72
    26b0:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    26b4:	17 c0       	rjmp	.+46     	; 0x26e4 <LCD_voidSendSpecialChar+0xc2>
		break;
	case 2:
	    LCD_voidSendCmnd(0b01010000);
    26b6:	80 e5       	ldi	r24, 0x50	; 80
    26b8:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    26bc:	13 c0       	rjmp	.+38     	; 0x26e4 <LCD_voidSendSpecialChar+0xc2>
		break;
	case 3:
	    LCD_voidSendCmnd(0b01011000);
    26be:	88 e5       	ldi	r24, 0x58	; 88
    26c0:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    26c4:	0f c0       	rjmp	.+30     	; 0x26e4 <LCD_voidSendSpecialChar+0xc2>
		break;
	case 4:
	    LCD_voidSendCmnd(0b01100000);
    26c6:	80 e6       	ldi	r24, 0x60	; 96
    26c8:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    26cc:	0b c0       	rjmp	.+22     	; 0x26e4 <LCD_voidSendSpecialChar+0xc2>
		break;
	case 5:
	    LCD_voidSendCmnd(0b01101000);
    26ce:	88 e6       	ldi	r24, 0x68	; 104
    26d0:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    26d4:	07 c0       	rjmp	.+14     	; 0x26e4 <LCD_voidSendSpecialChar+0xc2>
		break;
	case 6:
	    LCD_voidSendCmnd(0b01110000);
    26d6:	80 e7       	ldi	r24, 0x70	; 112
    26d8:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
    26dc:	03 c0       	rjmp	.+6      	; 0x26e4 <LCD_voidSendSpecialChar+0xc2>
		break;
	case 7:
	    LCD_voidSendCmnd(0b01111000);
    26de:	88 e7       	ldi	r24, 0x78	; 120
    26e0:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
		break;
	}


	 for(u8 specialchar=0 ; specialchar<8 ; specialchar++ )
    26e4:	19 82       	std	Y+1, r1	; 0x01
    26e6:	0e c0       	rjmp	.+28     	; 0x2704 <LCD_voidSendSpecialChar+0xe2>
	 {
		 LCD_voidSendChar(Copy_PSpecialChar[specialchar]);
    26e8:	89 81       	ldd	r24, Y+1	; 0x01
    26ea:	28 2f       	mov	r18, r24
    26ec:	30 e0       	ldi	r19, 0x00	; 0
    26ee:	8d 81       	ldd	r24, Y+5	; 0x05
    26f0:	9e 81       	ldd	r25, Y+6	; 0x06
    26f2:	fc 01       	movw	r30, r24
    26f4:	e2 0f       	add	r30, r18
    26f6:	f3 1f       	adc	r31, r19
    26f8:	80 81       	ld	r24, Z
    26fa:	0e 94 88 10 	call	0x2110	; 0x2110 <LCD_voidSendChar>
	    LCD_voidSendCmnd(0b01111000);
		break;
	}


	 for(u8 specialchar=0 ; specialchar<8 ; specialchar++ )
    26fe:	89 81       	ldd	r24, Y+1	; 0x01
    2700:	8f 5f       	subi	r24, 0xFF	; 255
    2702:	89 83       	std	Y+1, r24	; 0x01
    2704:	89 81       	ldd	r24, Y+1	; 0x01
    2706:	88 30       	cpi	r24, 0x08	; 8
    2708:	78 f3       	brcs	.-34     	; 0x26e8 <LCD_voidSendSpecialChar+0xc6>
	 {
		 LCD_voidSendChar(Copy_PSpecialChar[specialchar]);
	 }

	 LCD_u8_GoTo_XY( Copy_u8X, Copy_u8Y);
    270a:	8b 81       	ldd	r24, Y+3	; 0x03
    270c:	6c 81       	ldd	r22, Y+4	; 0x04
    270e:	0e 94 67 12 	call	0x24ce	; 0x24ce <LCD_u8_GoTo_XY>
	 LCD_voidSendChar(Copy_u8CharNo);
    2712:	8a 81       	ldd	r24, Y+2	; 0x02
    2714:	0e 94 88 10 	call	0x2110	; 0x2110 <LCD_voidSendChar>


}
    2718:	28 96       	adiw	r28, 0x08	; 8
    271a:	0f b6       	in	r0, 0x3f	; 63
    271c:	f8 94       	cli
    271e:	de bf       	out	0x3e, r29	; 62
    2720:	0f be       	out	0x3f, r0	; 63
    2722:	cd bf       	out	0x3d, r28	; 61
    2724:	cf 91       	pop	r28
    2726:	df 91       	pop	r29
    2728:	08 95       	ret

0000272a <LCD_voidShiftDispRight>:

void LCD_voidShiftDispRight(void)
{
    272a:	df 93       	push	r29
    272c:	cf 93       	push	r28
    272e:	cd b7       	in	r28, 0x3d	; 61
    2730:	de b7       	in	r29, 0x3e	; 62
	LCD_voidSendCmnd(0b00011100);
    2732:	8c e1       	ldi	r24, 0x1C	; 28
    2734:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
}
    2738:	cf 91       	pop	r28
    273a:	df 91       	pop	r29
    273c:	08 95       	ret

0000273e <LCD_voidShiftDispLeft>:
void LCD_voidShiftDispLeft(void)
{
    273e:	df 93       	push	r29
    2740:	cf 93       	push	r28
    2742:	cd b7       	in	r28, 0x3d	; 61
    2744:	de b7       	in	r29, 0x3e	; 62
	LCD_voidSendCmnd(0b00011000);
    2746:	88 e1       	ldi	r24, 0x18	; 24
    2748:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
}
    274c:	cf 91       	pop	r28
    274e:	df 91       	pop	r29
    2750:	08 95       	ret

00002752 <LCD_voidTurnOnDisplay>:

void LCD_voidTurnOnDisplay(void)
{
    2752:	df 93       	push	r29
    2754:	cf 93       	push	r28
    2756:	cd b7       	in	r28, 0x3d	; 61
    2758:	de b7       	in	r29, 0x3e	; 62
	LCD_voidSendCmnd(0b00001111);
    275a:	8f e0       	ldi	r24, 0x0F	; 15
    275c:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
}
    2760:	cf 91       	pop	r28
    2762:	df 91       	pop	r29
    2764:	08 95       	ret

00002766 <LCD_voidTurnOffDisplay>:

void LCD_voidTurnOffDisplay(void)
{
    2766:	df 93       	push	r29
    2768:	cf 93       	push	r28
    276a:	cd b7       	in	r28, 0x3d	; 61
    276c:	de b7       	in	r29, 0x3e	; 62
	LCD_voidSendCmnd(0b00001011);
    276e:	8b e0       	ldi	r24, 0x0B	; 11
    2770:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <LCD_voidSendCmnd>
}
    2774:	cf 91       	pop	r28
    2776:	df 91       	pop	r29
    2778:	08 95       	ret

0000277a <main>:
#include "DIO_interface.h"
/* HAL */
#include "LCD_interface.h"

int main(void)
{
    277a:	0f 93       	push	r16
    277c:	1f 93       	push	r17
    277e:	df 93       	push	r29
    2780:	cf 93       	push	r28
    2782:	cd b7       	in	r28, 0x3d	; 61
    2784:	de b7       	in	r29, 0x3e	; 62
    2786:	cb 53       	subi	r28, 0x3B	; 59
    2788:	d1 40       	sbci	r29, 0x01	; 1
    278a:	0f b6       	in	r0, 0x3f	; 63
    278c:	f8 94       	cli
    278e:	de bf       	out	0x3e, r29	; 62
    2790:	0f be       	out	0x3f, r0	; 63
    2792:	cd bf       	out	0x3d, r28	; 61
	/* Dio Init */
	DIO_u8Init();
    2794:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_u8Init>
	/* LCD init */
	LCD_voidInit();
    2798:	0e 94 0d 0b 	call	0x161a	; 0x161a <LCD_voidInit>
	LCD_voidCursorBlinkerOff();
    279c:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <LCD_voidCursorBlinkerOff>
					    0b00000100,
					    0b00011111,
					    0b00000100,
					    0b00000100,
					    0b00001010,
					    0b00001001};
    27a0:	ce 01       	movw	r24, r28
    27a2:	89 53       	subi	r24, 0x39	; 57
    27a4:	9f 4f       	sbci	r25, 0xFF	; 255
    27a6:	c1 5f       	subi	r28, 0xF1	; 241
    27a8:	de 4f       	sbci	r29, 0xFE	; 254
    27aa:	99 83       	std	Y+1, r25	; 0x01
    27ac:	88 83       	st	Y, r24
    27ae:	cf 50       	subi	r28, 0x0F	; 15
    27b0:	d1 40       	sbci	r29, 0x01	; 1
    27b2:	8c ed       	ldi	r24, 0xDC	; 220
    27b4:	90 e0       	ldi	r25, 0x00	; 0
    27b6:	cf 5e       	subi	r28, 0xEF	; 239
    27b8:	de 4f       	sbci	r29, 0xFE	; 254
    27ba:	99 83       	std	Y+1, r25	; 0x01
    27bc:	88 83       	st	Y, r24
    27be:	c1 51       	subi	r28, 0x11	; 17
    27c0:	d1 40       	sbci	r29, 0x01	; 1
    27c2:	98 e0       	ldi	r25, 0x08	; 8
    27c4:	cd 5e       	subi	r28, 0xED	; 237
    27c6:	de 4f       	sbci	r29, 0xFE	; 254
    27c8:	98 83       	st	Y, r25
    27ca:	c3 51       	subi	r28, 0x13	; 19
    27cc:	d1 40       	sbci	r29, 0x01	; 1
    27ce:	cf 5e       	subi	r28, 0xEF	; 239
    27d0:	de 4f       	sbci	r29, 0xFE	; 254
    27d2:	e8 81       	ld	r30, Y
    27d4:	f9 81       	ldd	r31, Y+1	; 0x01
    27d6:	c1 51       	subi	r28, 0x11	; 17
    27d8:	d1 40       	sbci	r29, 0x01	; 1
    27da:	00 80       	ld	r0, Z
    27dc:	cf 5e       	subi	r28, 0xEF	; 239
    27de:	de 4f       	sbci	r29, 0xFE	; 254
    27e0:	88 81       	ld	r24, Y
    27e2:	99 81       	ldd	r25, Y+1	; 0x01
    27e4:	c1 51       	subi	r28, 0x11	; 17
    27e6:	d1 40       	sbci	r29, 0x01	; 1
    27e8:	01 96       	adiw	r24, 0x01	; 1
    27ea:	cf 5e       	subi	r28, 0xEF	; 239
    27ec:	de 4f       	sbci	r29, 0xFE	; 254
    27ee:	99 83       	std	Y+1, r25	; 0x01
    27f0:	88 83       	st	Y, r24
    27f2:	c1 51       	subi	r28, 0x11	; 17
    27f4:	d1 40       	sbci	r29, 0x01	; 1
    27f6:	c1 5f       	subi	r28, 0xF1	; 241
    27f8:	de 4f       	sbci	r29, 0xFE	; 254
    27fa:	e8 81       	ld	r30, Y
    27fc:	f9 81       	ldd	r31, Y+1	; 0x01
    27fe:	cf 50       	subi	r28, 0x0F	; 15
    2800:	d1 40       	sbci	r29, 0x01	; 1
    2802:	00 82       	st	Z, r0
    2804:	c1 5f       	subi	r28, 0xF1	; 241
    2806:	de 4f       	sbci	r29, 0xFE	; 254
    2808:	88 81       	ld	r24, Y
    280a:	99 81       	ldd	r25, Y+1	; 0x01
    280c:	cf 50       	subi	r28, 0x0F	; 15
    280e:	d1 40       	sbci	r29, 0x01	; 1
    2810:	01 96       	adiw	r24, 0x01	; 1
    2812:	c1 5f       	subi	r28, 0xF1	; 241
    2814:	de 4f       	sbci	r29, 0xFE	; 254
    2816:	99 83       	std	Y+1, r25	; 0x01
    2818:	88 83       	st	Y, r24
    281a:	cf 50       	subi	r28, 0x0F	; 15
    281c:	d1 40       	sbci	r29, 0x01	; 1
    281e:	cd 5e       	subi	r28, 0xED	; 237
    2820:	de 4f       	sbci	r29, 0xFE	; 254
    2822:	98 81       	ld	r25, Y
    2824:	c3 51       	subi	r28, 0x13	; 19
    2826:	d1 40       	sbci	r29, 0x01	; 1
    2828:	91 50       	subi	r25, 0x01	; 1
    282a:	cd 5e       	subi	r28, 0xED	; 237
    282c:	de 4f       	sbci	r29, 0xFE	; 254
    282e:	98 83       	st	Y, r25
    2830:	c3 51       	subi	r28, 0x13	; 19
    2832:	d1 40       	sbci	r29, 0x01	; 1
    2834:	cd 5e       	subi	r28, 0xED	; 237
    2836:	de 4f       	sbci	r29, 0xFE	; 254
    2838:	e8 81       	ld	r30, Y
    283a:	c3 51       	subi	r28, 0x13	; 19
    283c:	d1 40       	sbci	r29, 0x01	; 1
    283e:	ee 23       	and	r30, r30
    2840:	31 f6       	brne	.-116    	; 0x27ce <main+0x54>
		                  0b00000100,
		                  0b00011111,
		                  0b00000100,
		                  0b00000100,
		                  0b00001010,
		                  0b00001010};
    2842:	ce 01       	movw	r24, r28
    2844:	81 53       	subi	r24, 0x31	; 49
    2846:	9f 4f       	sbci	r25, 0xFF	; 255
    2848:	cc 5e       	subi	r28, 0xEC	; 236
    284a:	de 4f       	sbci	r29, 0xFE	; 254
    284c:	99 83       	std	Y+1, r25	; 0x01
    284e:	88 83       	st	Y, r24
    2850:	c4 51       	subi	r28, 0x14	; 20
    2852:	d1 40       	sbci	r29, 0x01	; 1
    2854:	84 ed       	ldi	r24, 0xD4	; 212
    2856:	90 e0       	ldi	r25, 0x00	; 0
    2858:	ca 5e       	subi	r28, 0xEA	; 234
    285a:	de 4f       	sbci	r29, 0xFE	; 254
    285c:	99 83       	std	Y+1, r25	; 0x01
    285e:	88 83       	st	Y, r24
    2860:	c6 51       	subi	r28, 0x16	; 22
    2862:	d1 40       	sbci	r29, 0x01	; 1
    2864:	98 e0       	ldi	r25, 0x08	; 8
    2866:	c8 5e       	subi	r28, 0xE8	; 232
    2868:	de 4f       	sbci	r29, 0xFE	; 254
    286a:	98 83       	st	Y, r25
    286c:	c8 51       	subi	r28, 0x18	; 24
    286e:	d1 40       	sbci	r29, 0x01	; 1
    2870:	ca 5e       	subi	r28, 0xEA	; 234
    2872:	de 4f       	sbci	r29, 0xFE	; 254
    2874:	e8 81       	ld	r30, Y
    2876:	f9 81       	ldd	r31, Y+1	; 0x01
    2878:	c6 51       	subi	r28, 0x16	; 22
    287a:	d1 40       	sbci	r29, 0x01	; 1
    287c:	00 80       	ld	r0, Z
    287e:	ca 5e       	subi	r28, 0xEA	; 234
    2880:	de 4f       	sbci	r29, 0xFE	; 254
    2882:	88 81       	ld	r24, Y
    2884:	99 81       	ldd	r25, Y+1	; 0x01
    2886:	c6 51       	subi	r28, 0x16	; 22
    2888:	d1 40       	sbci	r29, 0x01	; 1
    288a:	01 96       	adiw	r24, 0x01	; 1
    288c:	ca 5e       	subi	r28, 0xEA	; 234
    288e:	de 4f       	sbci	r29, 0xFE	; 254
    2890:	99 83       	std	Y+1, r25	; 0x01
    2892:	88 83       	st	Y, r24
    2894:	c6 51       	subi	r28, 0x16	; 22
    2896:	d1 40       	sbci	r29, 0x01	; 1
    2898:	cc 5e       	subi	r28, 0xEC	; 236
    289a:	de 4f       	sbci	r29, 0xFE	; 254
    289c:	e8 81       	ld	r30, Y
    289e:	f9 81       	ldd	r31, Y+1	; 0x01
    28a0:	c4 51       	subi	r28, 0x14	; 20
    28a2:	d1 40       	sbci	r29, 0x01	; 1
    28a4:	00 82       	st	Z, r0
    28a6:	cc 5e       	subi	r28, 0xEC	; 236
    28a8:	de 4f       	sbci	r29, 0xFE	; 254
    28aa:	88 81       	ld	r24, Y
    28ac:	99 81       	ldd	r25, Y+1	; 0x01
    28ae:	c4 51       	subi	r28, 0x14	; 20
    28b0:	d1 40       	sbci	r29, 0x01	; 1
    28b2:	01 96       	adiw	r24, 0x01	; 1
    28b4:	cc 5e       	subi	r28, 0xEC	; 236
    28b6:	de 4f       	sbci	r29, 0xFE	; 254
    28b8:	99 83       	std	Y+1, r25	; 0x01
    28ba:	88 83       	st	Y, r24
    28bc:	c4 51       	subi	r28, 0x14	; 20
    28be:	d1 40       	sbci	r29, 0x01	; 1
    28c0:	c8 5e       	subi	r28, 0xE8	; 232
    28c2:	de 4f       	sbci	r29, 0xFE	; 254
    28c4:	98 81       	ld	r25, Y
    28c6:	c8 51       	subi	r28, 0x18	; 24
    28c8:	d1 40       	sbci	r29, 0x01	; 1
    28ca:	91 50       	subi	r25, 0x01	; 1
    28cc:	c8 5e       	subi	r28, 0xE8	; 232
    28ce:	de 4f       	sbci	r29, 0xFE	; 254
    28d0:	98 83       	st	Y, r25
    28d2:	c8 51       	subi	r28, 0x18	; 24
    28d4:	d1 40       	sbci	r29, 0x01	; 1
    28d6:	c8 5e       	subi	r28, 0xE8	; 232
    28d8:	de 4f       	sbci	r29, 0xFE	; 254
    28da:	e8 81       	ld	r30, Y
    28dc:	c8 51       	subi	r28, 0x18	; 24
    28de:	d1 40       	sbci	r29, 0x01	; 1
    28e0:	ee 23       	and	r30, r30
    28e2:	31 f6       	brne	.-116    	; 0x2870 <main+0xf6>
		          0b00000000,
		          0b00000000,
		          0b00000000,
		          0b00011000,
		          0b00011000,
		          0b00000000};
    28e4:	ce 01       	movw	r24, r28
    28e6:	89 52       	subi	r24, 0x29	; 41
    28e8:	9f 4f       	sbci	r25, 0xFF	; 255
    28ea:	c7 5e       	subi	r28, 0xE7	; 231
    28ec:	de 4f       	sbci	r29, 0xFE	; 254
    28ee:	99 83       	std	Y+1, r25	; 0x01
    28f0:	88 83       	st	Y, r24
    28f2:	c9 51       	subi	r28, 0x19	; 25
    28f4:	d1 40       	sbci	r29, 0x01	; 1
    28f6:	8c ec       	ldi	r24, 0xCC	; 204
    28f8:	90 e0       	ldi	r25, 0x00	; 0
    28fa:	c5 5e       	subi	r28, 0xE5	; 229
    28fc:	de 4f       	sbci	r29, 0xFE	; 254
    28fe:	99 83       	std	Y+1, r25	; 0x01
    2900:	88 83       	st	Y, r24
    2902:	cb 51       	subi	r28, 0x1B	; 27
    2904:	d1 40       	sbci	r29, 0x01	; 1
    2906:	98 e0       	ldi	r25, 0x08	; 8
    2908:	c3 5e       	subi	r28, 0xE3	; 227
    290a:	de 4f       	sbci	r29, 0xFE	; 254
    290c:	98 83       	st	Y, r25
    290e:	cd 51       	subi	r28, 0x1D	; 29
    2910:	d1 40       	sbci	r29, 0x01	; 1
    2912:	c5 5e       	subi	r28, 0xE5	; 229
    2914:	de 4f       	sbci	r29, 0xFE	; 254
    2916:	e8 81       	ld	r30, Y
    2918:	f9 81       	ldd	r31, Y+1	; 0x01
    291a:	cb 51       	subi	r28, 0x1B	; 27
    291c:	d1 40       	sbci	r29, 0x01	; 1
    291e:	00 80       	ld	r0, Z
    2920:	c5 5e       	subi	r28, 0xE5	; 229
    2922:	de 4f       	sbci	r29, 0xFE	; 254
    2924:	88 81       	ld	r24, Y
    2926:	99 81       	ldd	r25, Y+1	; 0x01
    2928:	cb 51       	subi	r28, 0x1B	; 27
    292a:	d1 40       	sbci	r29, 0x01	; 1
    292c:	01 96       	adiw	r24, 0x01	; 1
    292e:	c5 5e       	subi	r28, 0xE5	; 229
    2930:	de 4f       	sbci	r29, 0xFE	; 254
    2932:	99 83       	std	Y+1, r25	; 0x01
    2934:	88 83       	st	Y, r24
    2936:	cb 51       	subi	r28, 0x1B	; 27
    2938:	d1 40       	sbci	r29, 0x01	; 1
    293a:	c7 5e       	subi	r28, 0xE7	; 231
    293c:	de 4f       	sbci	r29, 0xFE	; 254
    293e:	e8 81       	ld	r30, Y
    2940:	f9 81       	ldd	r31, Y+1	; 0x01
    2942:	c9 51       	subi	r28, 0x19	; 25
    2944:	d1 40       	sbci	r29, 0x01	; 1
    2946:	00 82       	st	Z, r0
    2948:	c7 5e       	subi	r28, 0xE7	; 231
    294a:	de 4f       	sbci	r29, 0xFE	; 254
    294c:	88 81       	ld	r24, Y
    294e:	99 81       	ldd	r25, Y+1	; 0x01
    2950:	c9 51       	subi	r28, 0x19	; 25
    2952:	d1 40       	sbci	r29, 0x01	; 1
    2954:	01 96       	adiw	r24, 0x01	; 1
    2956:	c7 5e       	subi	r28, 0xE7	; 231
    2958:	de 4f       	sbci	r29, 0xFE	; 254
    295a:	99 83       	std	Y+1, r25	; 0x01
    295c:	88 83       	st	Y, r24
    295e:	c9 51       	subi	r28, 0x19	; 25
    2960:	d1 40       	sbci	r29, 0x01	; 1
    2962:	c3 5e       	subi	r28, 0xE3	; 227
    2964:	de 4f       	sbci	r29, 0xFE	; 254
    2966:	98 81       	ld	r25, Y
    2968:	cd 51       	subi	r28, 0x1D	; 29
    296a:	d1 40       	sbci	r29, 0x01	; 1
    296c:	91 50       	subi	r25, 0x01	; 1
    296e:	c3 5e       	subi	r28, 0xE3	; 227
    2970:	de 4f       	sbci	r29, 0xFE	; 254
    2972:	98 83       	st	Y, r25
    2974:	cd 51       	subi	r28, 0x1D	; 29
    2976:	d1 40       	sbci	r29, 0x01	; 1
    2978:	c3 5e       	subi	r28, 0xE3	; 227
    297a:	de 4f       	sbci	r29, 0xFE	; 254
    297c:	e8 81       	ld	r30, Y
    297e:	cd 51       	subi	r28, 0x1D	; 29
    2980:	d1 40       	sbci	r29, 0x01	; 1
    2982:	ee 23       	and	r30, r30
    2984:	31 f6       	brne	.-116    	; 0x2912 <main+0x198>
                0b00000000,
                0b00000000,
                0b00000110,
                0b00000110,
                0b00000000,
                0b00000000};
    2986:	ce 01       	movw	r24, r28
    2988:	81 52       	subi	r24, 0x21	; 33
    298a:	9f 4f       	sbci	r25, 0xFF	; 255
    298c:	c2 5e       	subi	r28, 0xE2	; 226
    298e:	de 4f       	sbci	r29, 0xFE	; 254
    2990:	99 83       	std	Y+1, r25	; 0x01
    2992:	88 83       	st	Y, r24
    2994:	ce 51       	subi	r28, 0x1E	; 30
    2996:	d1 40       	sbci	r29, 0x01	; 1
    2998:	84 ec       	ldi	r24, 0xC4	; 196
    299a:	90 e0       	ldi	r25, 0x00	; 0
    299c:	c0 5e       	subi	r28, 0xE0	; 224
    299e:	de 4f       	sbci	r29, 0xFE	; 254
    29a0:	99 83       	std	Y+1, r25	; 0x01
    29a2:	88 83       	st	Y, r24
    29a4:	c0 52       	subi	r28, 0x20	; 32
    29a6:	d1 40       	sbci	r29, 0x01	; 1
    29a8:	98 e0       	ldi	r25, 0x08	; 8
    29aa:	ce 5d       	subi	r28, 0xDE	; 222
    29ac:	de 4f       	sbci	r29, 0xFE	; 254
    29ae:	98 83       	st	Y, r25
    29b0:	c2 52       	subi	r28, 0x22	; 34
    29b2:	d1 40       	sbci	r29, 0x01	; 1
    29b4:	c0 5e       	subi	r28, 0xE0	; 224
    29b6:	de 4f       	sbci	r29, 0xFE	; 254
    29b8:	e8 81       	ld	r30, Y
    29ba:	f9 81       	ldd	r31, Y+1	; 0x01
    29bc:	c0 52       	subi	r28, 0x20	; 32
    29be:	d1 40       	sbci	r29, 0x01	; 1
    29c0:	00 80       	ld	r0, Z
    29c2:	c0 5e       	subi	r28, 0xE0	; 224
    29c4:	de 4f       	sbci	r29, 0xFE	; 254
    29c6:	88 81       	ld	r24, Y
    29c8:	99 81       	ldd	r25, Y+1	; 0x01
    29ca:	c0 52       	subi	r28, 0x20	; 32
    29cc:	d1 40       	sbci	r29, 0x01	; 1
    29ce:	01 96       	adiw	r24, 0x01	; 1
    29d0:	c0 5e       	subi	r28, 0xE0	; 224
    29d2:	de 4f       	sbci	r29, 0xFE	; 254
    29d4:	99 83       	std	Y+1, r25	; 0x01
    29d6:	88 83       	st	Y, r24
    29d8:	c0 52       	subi	r28, 0x20	; 32
    29da:	d1 40       	sbci	r29, 0x01	; 1
    29dc:	c2 5e       	subi	r28, 0xE2	; 226
    29de:	de 4f       	sbci	r29, 0xFE	; 254
    29e0:	e8 81       	ld	r30, Y
    29e2:	f9 81       	ldd	r31, Y+1	; 0x01
    29e4:	ce 51       	subi	r28, 0x1E	; 30
    29e6:	d1 40       	sbci	r29, 0x01	; 1
    29e8:	00 82       	st	Z, r0
    29ea:	c2 5e       	subi	r28, 0xE2	; 226
    29ec:	de 4f       	sbci	r29, 0xFE	; 254
    29ee:	88 81       	ld	r24, Y
    29f0:	99 81       	ldd	r25, Y+1	; 0x01
    29f2:	ce 51       	subi	r28, 0x1E	; 30
    29f4:	d1 40       	sbci	r29, 0x01	; 1
    29f6:	01 96       	adiw	r24, 0x01	; 1
    29f8:	c2 5e       	subi	r28, 0xE2	; 226
    29fa:	de 4f       	sbci	r29, 0xFE	; 254
    29fc:	99 83       	std	Y+1, r25	; 0x01
    29fe:	88 83       	st	Y, r24
    2a00:	ce 51       	subi	r28, 0x1E	; 30
    2a02:	d1 40       	sbci	r29, 0x01	; 1
    2a04:	ce 5d       	subi	r28, 0xDE	; 222
    2a06:	de 4f       	sbci	r29, 0xFE	; 254
    2a08:	98 81       	ld	r25, Y
    2a0a:	c2 52       	subi	r28, 0x22	; 34
    2a0c:	d1 40       	sbci	r29, 0x01	; 1
    2a0e:	91 50       	subi	r25, 0x01	; 1
    2a10:	ce 5d       	subi	r28, 0xDE	; 222
    2a12:	de 4f       	sbci	r29, 0xFE	; 254
    2a14:	98 83       	st	Y, r25
    2a16:	c2 52       	subi	r28, 0x22	; 34
    2a18:	d1 40       	sbci	r29, 0x01	; 1
    2a1a:	ce 5d       	subi	r28, 0xDE	; 222
    2a1c:	de 4f       	sbci	r29, 0xFE	; 254
    2a1e:	e8 81       	ld	r30, Y
    2a20:	c2 52       	subi	r28, 0x22	; 34
    2a22:	d1 40       	sbci	r29, 0x01	; 1
    2a24:	ee 23       	and	r30, r30
    2a26:	31 f6       	brne	.-116    	; 0x29b4 <main+0x23a>
		      0b00010110,
		      0b00010011,
		      0b00010001,
		      0b00001101,
		      0b00001101,
		      0b00000001};
    2a28:	ce 01       	movw	r24, r28
    2a2a:	89 51       	subi	r24, 0x19	; 25
    2a2c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a2e:	cd 5d       	subi	r28, 0xDD	; 221
    2a30:	de 4f       	sbci	r29, 0xFE	; 254
    2a32:	99 83       	std	Y+1, r25	; 0x01
    2a34:	88 83       	st	Y, r24
    2a36:	c3 52       	subi	r28, 0x23	; 35
    2a38:	d1 40       	sbci	r29, 0x01	; 1
    2a3a:	8c eb       	ldi	r24, 0xBC	; 188
    2a3c:	90 e0       	ldi	r25, 0x00	; 0
    2a3e:	cb 5d       	subi	r28, 0xDB	; 219
    2a40:	de 4f       	sbci	r29, 0xFE	; 254
    2a42:	99 83       	std	Y+1, r25	; 0x01
    2a44:	88 83       	st	Y, r24
    2a46:	c5 52       	subi	r28, 0x25	; 37
    2a48:	d1 40       	sbci	r29, 0x01	; 1
    2a4a:	98 e0       	ldi	r25, 0x08	; 8
    2a4c:	c9 5d       	subi	r28, 0xD9	; 217
    2a4e:	de 4f       	sbci	r29, 0xFE	; 254
    2a50:	98 83       	st	Y, r25
    2a52:	c7 52       	subi	r28, 0x27	; 39
    2a54:	d1 40       	sbci	r29, 0x01	; 1
    2a56:	cb 5d       	subi	r28, 0xDB	; 219
    2a58:	de 4f       	sbci	r29, 0xFE	; 254
    2a5a:	e8 81       	ld	r30, Y
    2a5c:	f9 81       	ldd	r31, Y+1	; 0x01
    2a5e:	c5 52       	subi	r28, 0x25	; 37
    2a60:	d1 40       	sbci	r29, 0x01	; 1
    2a62:	00 80       	ld	r0, Z
    2a64:	cb 5d       	subi	r28, 0xDB	; 219
    2a66:	de 4f       	sbci	r29, 0xFE	; 254
    2a68:	88 81       	ld	r24, Y
    2a6a:	99 81       	ldd	r25, Y+1	; 0x01
    2a6c:	c5 52       	subi	r28, 0x25	; 37
    2a6e:	d1 40       	sbci	r29, 0x01	; 1
    2a70:	01 96       	adiw	r24, 0x01	; 1
    2a72:	cb 5d       	subi	r28, 0xDB	; 219
    2a74:	de 4f       	sbci	r29, 0xFE	; 254
    2a76:	99 83       	std	Y+1, r25	; 0x01
    2a78:	88 83       	st	Y, r24
    2a7a:	c5 52       	subi	r28, 0x25	; 37
    2a7c:	d1 40       	sbci	r29, 0x01	; 1
    2a7e:	cd 5d       	subi	r28, 0xDD	; 221
    2a80:	de 4f       	sbci	r29, 0xFE	; 254
    2a82:	e8 81       	ld	r30, Y
    2a84:	f9 81       	ldd	r31, Y+1	; 0x01
    2a86:	c3 52       	subi	r28, 0x23	; 35
    2a88:	d1 40       	sbci	r29, 0x01	; 1
    2a8a:	00 82       	st	Z, r0
    2a8c:	cd 5d       	subi	r28, 0xDD	; 221
    2a8e:	de 4f       	sbci	r29, 0xFE	; 254
    2a90:	88 81       	ld	r24, Y
    2a92:	99 81       	ldd	r25, Y+1	; 0x01
    2a94:	c3 52       	subi	r28, 0x23	; 35
    2a96:	d1 40       	sbci	r29, 0x01	; 1
    2a98:	01 96       	adiw	r24, 0x01	; 1
    2a9a:	cd 5d       	subi	r28, 0xDD	; 221
    2a9c:	de 4f       	sbci	r29, 0xFE	; 254
    2a9e:	99 83       	std	Y+1, r25	; 0x01
    2aa0:	88 83       	st	Y, r24
    2aa2:	c3 52       	subi	r28, 0x23	; 35
    2aa4:	d1 40       	sbci	r29, 0x01	; 1
    2aa6:	c9 5d       	subi	r28, 0xD9	; 217
    2aa8:	de 4f       	sbci	r29, 0xFE	; 254
    2aaa:	98 81       	ld	r25, Y
    2aac:	c7 52       	subi	r28, 0x27	; 39
    2aae:	d1 40       	sbci	r29, 0x01	; 1
    2ab0:	91 50       	subi	r25, 0x01	; 1
    2ab2:	c9 5d       	subi	r28, 0xD9	; 217
    2ab4:	de 4f       	sbci	r29, 0xFE	; 254
    2ab6:	98 83       	st	Y, r25
    2ab8:	c7 52       	subi	r28, 0x27	; 39
    2aba:	d1 40       	sbci	r29, 0x01	; 1
    2abc:	c9 5d       	subi	r28, 0xD9	; 217
    2abe:	de 4f       	sbci	r29, 0xFE	; 254
    2ac0:	e8 81       	ld	r30, Y
    2ac2:	c7 52       	subi	r28, 0x27	; 39
    2ac4:	d1 40       	sbci	r29, 0x01	; 1
    2ac6:	ee 23       	and	r30, r30
    2ac8:	31 f6       	brne	.-116    	; 0x2a56 <main+0x2dc>
					     0b00010101,
					     0b00001110,
					     0b00000100,
					     0b00000100,
			             0b00001010,
				         0b00010001};
    2aca:	ce 01       	movw	r24, r28
    2acc:	81 51       	subi	r24, 0x11	; 17
    2ace:	9f 4f       	sbci	r25, 0xFF	; 255
    2ad0:	c8 5d       	subi	r28, 0xD8	; 216
    2ad2:	de 4f       	sbci	r29, 0xFE	; 254
    2ad4:	99 83       	std	Y+1, r25	; 0x01
    2ad6:	88 83       	st	Y, r24
    2ad8:	c8 52       	subi	r28, 0x28	; 40
    2ada:	d1 40       	sbci	r29, 0x01	; 1
    2adc:	84 eb       	ldi	r24, 0xB4	; 180
    2ade:	90 e0       	ldi	r25, 0x00	; 0
    2ae0:	c6 5d       	subi	r28, 0xD6	; 214
    2ae2:	de 4f       	sbci	r29, 0xFE	; 254
    2ae4:	99 83       	std	Y+1, r25	; 0x01
    2ae6:	88 83       	st	Y, r24
    2ae8:	ca 52       	subi	r28, 0x2A	; 42
    2aea:	d1 40       	sbci	r29, 0x01	; 1
    2aec:	98 e0       	ldi	r25, 0x08	; 8
    2aee:	c4 5d       	subi	r28, 0xD4	; 212
    2af0:	de 4f       	sbci	r29, 0xFE	; 254
    2af2:	98 83       	st	Y, r25
    2af4:	cc 52       	subi	r28, 0x2C	; 44
    2af6:	d1 40       	sbci	r29, 0x01	; 1
    2af8:	c6 5d       	subi	r28, 0xD6	; 214
    2afa:	de 4f       	sbci	r29, 0xFE	; 254
    2afc:	e8 81       	ld	r30, Y
    2afe:	f9 81       	ldd	r31, Y+1	; 0x01
    2b00:	ca 52       	subi	r28, 0x2A	; 42
    2b02:	d1 40       	sbci	r29, 0x01	; 1
    2b04:	00 80       	ld	r0, Z
    2b06:	c6 5d       	subi	r28, 0xD6	; 214
    2b08:	de 4f       	sbci	r29, 0xFE	; 254
    2b0a:	88 81       	ld	r24, Y
    2b0c:	99 81       	ldd	r25, Y+1	; 0x01
    2b0e:	ca 52       	subi	r28, 0x2A	; 42
    2b10:	d1 40       	sbci	r29, 0x01	; 1
    2b12:	01 96       	adiw	r24, 0x01	; 1
    2b14:	c6 5d       	subi	r28, 0xD6	; 214
    2b16:	de 4f       	sbci	r29, 0xFE	; 254
    2b18:	99 83       	std	Y+1, r25	; 0x01
    2b1a:	88 83       	st	Y, r24
    2b1c:	ca 52       	subi	r28, 0x2A	; 42
    2b1e:	d1 40       	sbci	r29, 0x01	; 1
    2b20:	c8 5d       	subi	r28, 0xD8	; 216
    2b22:	de 4f       	sbci	r29, 0xFE	; 254
    2b24:	e8 81       	ld	r30, Y
    2b26:	f9 81       	ldd	r31, Y+1	; 0x01
    2b28:	c8 52       	subi	r28, 0x28	; 40
    2b2a:	d1 40       	sbci	r29, 0x01	; 1
    2b2c:	00 82       	st	Z, r0
    2b2e:	c8 5d       	subi	r28, 0xD8	; 216
    2b30:	de 4f       	sbci	r29, 0xFE	; 254
    2b32:	88 81       	ld	r24, Y
    2b34:	99 81       	ldd	r25, Y+1	; 0x01
    2b36:	c8 52       	subi	r28, 0x28	; 40
    2b38:	d1 40       	sbci	r29, 0x01	; 1
    2b3a:	01 96       	adiw	r24, 0x01	; 1
    2b3c:	c8 5d       	subi	r28, 0xD8	; 216
    2b3e:	de 4f       	sbci	r29, 0xFE	; 254
    2b40:	99 83       	std	Y+1, r25	; 0x01
    2b42:	88 83       	st	Y, r24
    2b44:	c8 52       	subi	r28, 0x28	; 40
    2b46:	d1 40       	sbci	r29, 0x01	; 1
    2b48:	c4 5d       	subi	r28, 0xD4	; 212
    2b4a:	de 4f       	sbci	r29, 0xFE	; 254
    2b4c:	98 81       	ld	r25, Y
    2b4e:	cc 52       	subi	r28, 0x2C	; 44
    2b50:	d1 40       	sbci	r29, 0x01	; 1
    2b52:	91 50       	subi	r25, 0x01	; 1
    2b54:	c4 5d       	subi	r28, 0xD4	; 212
    2b56:	de 4f       	sbci	r29, 0xFE	; 254
    2b58:	98 83       	st	Y, r25
    2b5a:	cc 52       	subi	r28, 0x2C	; 44
    2b5c:	d1 40       	sbci	r29, 0x01	; 1
    2b5e:	c4 5d       	subi	r28, 0xD4	; 212
    2b60:	de 4f       	sbci	r29, 0xFE	; 254
    2b62:	e8 81       	ld	r30, Y
    2b64:	cc 52       	subi	r28, 0x2C	; 44
    2b66:	d1 40       	sbci	r29, 0x01	; 1
    2b68:	ee 23       	and	r30, r30
    2b6a:	31 f6       	brne	.-116    	; 0x2af8 <main+0x37e>
					       0b00000100,
					       0b00001110,
					       0b00010101,
					       0b00000100,
					       0b00001010,
					       0b00010001};
    2b6c:	ce 01       	movw	r24, r28
    2b6e:	89 50       	subi	r24, 0x09	; 9
    2b70:	9f 4f       	sbci	r25, 0xFF	; 255
    2b72:	c3 5d       	subi	r28, 0xD3	; 211
    2b74:	de 4f       	sbci	r29, 0xFE	; 254
    2b76:	99 83       	std	Y+1, r25	; 0x01
    2b78:	88 83       	st	Y, r24
    2b7a:	cd 52       	subi	r28, 0x2D	; 45
    2b7c:	d1 40       	sbci	r29, 0x01	; 1
    2b7e:	8c ea       	ldi	r24, 0xAC	; 172
    2b80:	90 e0       	ldi	r25, 0x00	; 0
    2b82:	c1 5d       	subi	r28, 0xD1	; 209
    2b84:	de 4f       	sbci	r29, 0xFE	; 254
    2b86:	99 83       	std	Y+1, r25	; 0x01
    2b88:	88 83       	st	Y, r24
    2b8a:	cf 52       	subi	r28, 0x2F	; 47
    2b8c:	d1 40       	sbci	r29, 0x01	; 1
    2b8e:	98 e0       	ldi	r25, 0x08	; 8
    2b90:	cf 5c       	subi	r28, 0xCF	; 207
    2b92:	de 4f       	sbci	r29, 0xFE	; 254
    2b94:	98 83       	st	Y, r25
    2b96:	c1 53       	subi	r28, 0x31	; 49
    2b98:	d1 40       	sbci	r29, 0x01	; 1
    2b9a:	c1 5d       	subi	r28, 0xD1	; 209
    2b9c:	de 4f       	sbci	r29, 0xFE	; 254
    2b9e:	e8 81       	ld	r30, Y
    2ba0:	f9 81       	ldd	r31, Y+1	; 0x01
    2ba2:	cf 52       	subi	r28, 0x2F	; 47
    2ba4:	d1 40       	sbci	r29, 0x01	; 1
    2ba6:	00 80       	ld	r0, Z
    2ba8:	c1 5d       	subi	r28, 0xD1	; 209
    2baa:	de 4f       	sbci	r29, 0xFE	; 254
    2bac:	88 81       	ld	r24, Y
    2bae:	99 81       	ldd	r25, Y+1	; 0x01
    2bb0:	cf 52       	subi	r28, 0x2F	; 47
    2bb2:	d1 40       	sbci	r29, 0x01	; 1
    2bb4:	01 96       	adiw	r24, 0x01	; 1
    2bb6:	c1 5d       	subi	r28, 0xD1	; 209
    2bb8:	de 4f       	sbci	r29, 0xFE	; 254
    2bba:	99 83       	std	Y+1, r25	; 0x01
    2bbc:	88 83       	st	Y, r24
    2bbe:	cf 52       	subi	r28, 0x2F	; 47
    2bc0:	d1 40       	sbci	r29, 0x01	; 1
    2bc2:	c3 5d       	subi	r28, 0xD3	; 211
    2bc4:	de 4f       	sbci	r29, 0xFE	; 254
    2bc6:	e8 81       	ld	r30, Y
    2bc8:	f9 81       	ldd	r31, Y+1	; 0x01
    2bca:	cd 52       	subi	r28, 0x2D	; 45
    2bcc:	d1 40       	sbci	r29, 0x01	; 1
    2bce:	00 82       	st	Z, r0
    2bd0:	c3 5d       	subi	r28, 0xD3	; 211
    2bd2:	de 4f       	sbci	r29, 0xFE	; 254
    2bd4:	88 81       	ld	r24, Y
    2bd6:	99 81       	ldd	r25, Y+1	; 0x01
    2bd8:	cd 52       	subi	r28, 0x2D	; 45
    2bda:	d1 40       	sbci	r29, 0x01	; 1
    2bdc:	01 96       	adiw	r24, 0x01	; 1
    2bde:	c3 5d       	subi	r28, 0xD3	; 211
    2be0:	de 4f       	sbci	r29, 0xFE	; 254
    2be2:	99 83       	std	Y+1, r25	; 0x01
    2be4:	88 83       	st	Y, r24
    2be6:	cd 52       	subi	r28, 0x2D	; 45
    2be8:	d1 40       	sbci	r29, 0x01	; 1
    2bea:	cf 5c       	subi	r28, 0xCF	; 207
    2bec:	de 4f       	sbci	r29, 0xFE	; 254
    2bee:	98 81       	ld	r25, Y
    2bf0:	c1 53       	subi	r28, 0x31	; 49
    2bf2:	d1 40       	sbci	r29, 0x01	; 1
    2bf4:	91 50       	subi	r25, 0x01	; 1
    2bf6:	cf 5c       	subi	r28, 0xCF	; 207
    2bf8:	de 4f       	sbci	r29, 0xFE	; 254
    2bfa:	98 83       	st	Y, r25
    2bfc:	c1 53       	subi	r28, 0x31	; 49
    2bfe:	d1 40       	sbci	r29, 0x01	; 1
    2c00:	cf 5c       	subi	r28, 0xCF	; 207
    2c02:	de 4f       	sbci	r29, 0xFE	; 254
    2c04:	e8 81       	ld	r30, Y
    2c06:	c1 53       	subi	r28, 0x31	; 49
    2c08:	d1 40       	sbci	r29, 0x01	; 1
    2c0a:	ee 23       	and	r30, r30
    2c0c:	31 f6       	brne	.-116    	; 0x2b9a <main+0x420>
					        0b00000100,
					        0b00000111,
					        0b00001100,
					        0b00010100,
					        0b00001010,
					        0b00001010};
    2c0e:	ce 01       	movw	r24, r28
    2c10:	81 50       	subi	r24, 0x01	; 1
    2c12:	9f 4f       	sbci	r25, 0xFF	; 255
    2c14:	ce 5c       	subi	r28, 0xCE	; 206
    2c16:	de 4f       	sbci	r29, 0xFE	; 254
    2c18:	99 83       	std	Y+1, r25	; 0x01
    2c1a:	88 83       	st	Y, r24
    2c1c:	c2 53       	subi	r28, 0x32	; 50
    2c1e:	d1 40       	sbci	r29, 0x01	; 1
    2c20:	84 ea       	ldi	r24, 0xA4	; 164
    2c22:	90 e0       	ldi	r25, 0x00	; 0
    2c24:	cc 5c       	subi	r28, 0xCC	; 204
    2c26:	de 4f       	sbci	r29, 0xFE	; 254
    2c28:	99 83       	std	Y+1, r25	; 0x01
    2c2a:	88 83       	st	Y, r24
    2c2c:	c4 53       	subi	r28, 0x34	; 52
    2c2e:	d1 40       	sbci	r29, 0x01	; 1
    2c30:	98 e0       	ldi	r25, 0x08	; 8
    2c32:	ca 5c       	subi	r28, 0xCA	; 202
    2c34:	de 4f       	sbci	r29, 0xFE	; 254
    2c36:	98 83       	st	Y, r25
    2c38:	c6 53       	subi	r28, 0x36	; 54
    2c3a:	d1 40       	sbci	r29, 0x01	; 1
    2c3c:	cc 5c       	subi	r28, 0xCC	; 204
    2c3e:	de 4f       	sbci	r29, 0xFE	; 254
    2c40:	e8 81       	ld	r30, Y
    2c42:	f9 81       	ldd	r31, Y+1	; 0x01
    2c44:	c4 53       	subi	r28, 0x34	; 52
    2c46:	d1 40       	sbci	r29, 0x01	; 1
    2c48:	00 80       	ld	r0, Z
    2c4a:	cc 5c       	subi	r28, 0xCC	; 204
    2c4c:	de 4f       	sbci	r29, 0xFE	; 254
    2c4e:	88 81       	ld	r24, Y
    2c50:	99 81       	ldd	r25, Y+1	; 0x01
    2c52:	c4 53       	subi	r28, 0x34	; 52
    2c54:	d1 40       	sbci	r29, 0x01	; 1
    2c56:	01 96       	adiw	r24, 0x01	; 1
    2c58:	cc 5c       	subi	r28, 0xCC	; 204
    2c5a:	de 4f       	sbci	r29, 0xFE	; 254
    2c5c:	99 83       	std	Y+1, r25	; 0x01
    2c5e:	88 83       	st	Y, r24
    2c60:	c4 53       	subi	r28, 0x34	; 52
    2c62:	d1 40       	sbci	r29, 0x01	; 1
    2c64:	ce 5c       	subi	r28, 0xCE	; 206
    2c66:	de 4f       	sbci	r29, 0xFE	; 254
    2c68:	e8 81       	ld	r30, Y
    2c6a:	f9 81       	ldd	r31, Y+1	; 0x01
    2c6c:	c2 53       	subi	r28, 0x32	; 50
    2c6e:	d1 40       	sbci	r29, 0x01	; 1
    2c70:	00 82       	st	Z, r0
    2c72:	ce 5c       	subi	r28, 0xCE	; 206
    2c74:	de 4f       	sbci	r29, 0xFE	; 254
    2c76:	88 81       	ld	r24, Y
    2c78:	99 81       	ldd	r25, Y+1	; 0x01
    2c7a:	c2 53       	subi	r28, 0x32	; 50
    2c7c:	d1 40       	sbci	r29, 0x01	; 1
    2c7e:	01 96       	adiw	r24, 0x01	; 1
    2c80:	ce 5c       	subi	r28, 0xCE	; 206
    2c82:	de 4f       	sbci	r29, 0xFE	; 254
    2c84:	99 83       	std	Y+1, r25	; 0x01
    2c86:	88 83       	st	Y, r24
    2c88:	c2 53       	subi	r28, 0x32	; 50
    2c8a:	d1 40       	sbci	r29, 0x01	; 1
    2c8c:	ca 5c       	subi	r28, 0xCA	; 202
    2c8e:	de 4f       	sbci	r29, 0xFE	; 254
    2c90:	98 81       	ld	r25, Y
    2c92:	c6 53       	subi	r28, 0x36	; 54
    2c94:	d1 40       	sbci	r29, 0x01	; 1
    2c96:	91 50       	subi	r25, 0x01	; 1
    2c98:	ca 5c       	subi	r28, 0xCA	; 202
    2c9a:	de 4f       	sbci	r29, 0xFE	; 254
    2c9c:	98 83       	st	Y, r25
    2c9e:	c6 53       	subi	r28, 0x36	; 54
    2ca0:	d1 40       	sbci	r29, 0x01	; 1
    2ca2:	ca 5c       	subi	r28, 0xCA	; 202
    2ca4:	de 4f       	sbci	r29, 0xFE	; 254
    2ca6:	e8 81       	ld	r30, Y
    2ca8:	c6 53       	subi	r28, 0x36	; 54
    2caa:	d1 40       	sbci	r29, 0x01	; 1
    2cac:	ee 23       	and	r30, r30
    2cae:	31 f6       	brne	.-116    	; 0x2c3c <main+0x4c2>
					       0b00000100,
					       0b00011100,
					       0b00000110,
					       0b00000101,
					       0b00001010,
					       0b00001010};
    2cb0:	ce 01       	movw	r24, r28
    2cb2:	89 5f       	subi	r24, 0xF9	; 249
    2cb4:	9e 4f       	sbci	r25, 0xFE	; 254
    2cb6:	c9 5c       	subi	r28, 0xC9	; 201
    2cb8:	de 4f       	sbci	r29, 0xFE	; 254
    2cba:	99 83       	std	Y+1, r25	; 0x01
    2cbc:	88 83       	st	Y, r24
    2cbe:	c7 53       	subi	r28, 0x37	; 55
    2cc0:	d1 40       	sbci	r29, 0x01	; 1
    2cc2:	8c e9       	ldi	r24, 0x9C	; 156
    2cc4:	90 e0       	ldi	r25, 0x00	; 0
    2cc6:	c7 5c       	subi	r28, 0xC7	; 199
    2cc8:	de 4f       	sbci	r29, 0xFE	; 254
    2cca:	99 83       	std	Y+1, r25	; 0x01
    2ccc:	88 83       	st	Y, r24
    2cce:	c9 53       	subi	r28, 0x39	; 57
    2cd0:	d1 40       	sbci	r29, 0x01	; 1
    2cd2:	98 e0       	ldi	r25, 0x08	; 8
    2cd4:	c5 5c       	subi	r28, 0xC5	; 197
    2cd6:	de 4f       	sbci	r29, 0xFE	; 254
    2cd8:	98 83       	st	Y, r25
    2cda:	cb 53       	subi	r28, 0x3B	; 59
    2cdc:	d1 40       	sbci	r29, 0x01	; 1
    2cde:	c7 5c       	subi	r28, 0xC7	; 199
    2ce0:	de 4f       	sbci	r29, 0xFE	; 254
    2ce2:	e8 81       	ld	r30, Y
    2ce4:	f9 81       	ldd	r31, Y+1	; 0x01
    2ce6:	c9 53       	subi	r28, 0x39	; 57
    2ce8:	d1 40       	sbci	r29, 0x01	; 1
    2cea:	00 80       	ld	r0, Z
    2cec:	c7 5c       	subi	r28, 0xC7	; 199
    2cee:	de 4f       	sbci	r29, 0xFE	; 254
    2cf0:	88 81       	ld	r24, Y
    2cf2:	99 81       	ldd	r25, Y+1	; 0x01
    2cf4:	c9 53       	subi	r28, 0x39	; 57
    2cf6:	d1 40       	sbci	r29, 0x01	; 1
    2cf8:	01 96       	adiw	r24, 0x01	; 1
    2cfa:	c7 5c       	subi	r28, 0xC7	; 199
    2cfc:	de 4f       	sbci	r29, 0xFE	; 254
    2cfe:	99 83       	std	Y+1, r25	; 0x01
    2d00:	88 83       	st	Y, r24
    2d02:	c9 53       	subi	r28, 0x39	; 57
    2d04:	d1 40       	sbci	r29, 0x01	; 1
    2d06:	c9 5c       	subi	r28, 0xC9	; 201
    2d08:	de 4f       	sbci	r29, 0xFE	; 254
    2d0a:	e8 81       	ld	r30, Y
    2d0c:	f9 81       	ldd	r31, Y+1	; 0x01
    2d0e:	c7 53       	subi	r28, 0x37	; 55
    2d10:	d1 40       	sbci	r29, 0x01	; 1
    2d12:	00 82       	st	Z, r0
    2d14:	c9 5c       	subi	r28, 0xC9	; 201
    2d16:	de 4f       	sbci	r29, 0xFE	; 254
    2d18:	88 81       	ld	r24, Y
    2d1a:	99 81       	ldd	r25, Y+1	; 0x01
    2d1c:	c7 53       	subi	r28, 0x37	; 55
    2d1e:	d1 40       	sbci	r29, 0x01	; 1
    2d20:	01 96       	adiw	r24, 0x01	; 1
    2d22:	c9 5c       	subi	r28, 0xC9	; 201
    2d24:	de 4f       	sbci	r29, 0xFE	; 254
    2d26:	99 83       	std	Y+1, r25	; 0x01
    2d28:	88 83       	st	Y, r24
    2d2a:	c7 53       	subi	r28, 0x37	; 55
    2d2c:	d1 40       	sbci	r29, 0x01	; 1
    2d2e:	c5 5c       	subi	r28, 0xC5	; 197
    2d30:	de 4f       	sbci	r29, 0xFE	; 254
    2d32:	98 81       	ld	r25, Y
    2d34:	cb 53       	subi	r28, 0x3B	; 59
    2d36:	d1 40       	sbci	r29, 0x01	; 1
    2d38:	91 50       	subi	r25, 0x01	; 1
    2d3a:	c5 5c       	subi	r28, 0xC5	; 197
    2d3c:	de 4f       	sbci	r29, 0xFE	; 254
    2d3e:	98 83       	st	Y, r25
    2d40:	cb 53       	subi	r28, 0x3B	; 59
    2d42:	d1 40       	sbci	r29, 0x01	; 1
    2d44:	c5 5c       	subi	r28, 0xC5	; 197
    2d46:	de 4f       	sbci	r29, 0xFE	; 254
    2d48:	e8 81       	ld	r30, Y
    2d4a:	cb 53       	subi	r28, 0x3B	; 59
    2d4c:	d1 40       	sbci	r29, 0x01	; 1
    2d4e:	ee 23       	and	r30, r30
    2d50:	31 f6       	brne	.-116    	; 0x2cde <main+0x564>

while(1)
	{
	DIO_u8SetPinValue(DIO_u8_PORTA,DIO_u8_PIN0,DIO_u8_LOW);
    2d52:	80 e0       	ldi	r24, 0x00	; 0
    2d54:	60 e0       	ldi	r22, 0x00	; 0
    2d56:	40 e0       	ldi	r20, 0x00	; 0
    2d58:	0e 94 96 07 	call	0xf2c	; 0xf2c <DIO_u8SetPinValue>
	LCD_voidClear();
    2d5c:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>

 // FRAME 1
  LCD_u8_GoTo_XY(0,2);
    2d60:	80 e0       	ldi	r24, 0x00	; 0
    2d62:	62 e0       	ldi	r22, 0x02	; 2
    2d64:	0e 94 67 12 	call	0x24ce	; 0x24ce <LCD_u8_GoTo_XY>
  LCD_voidWriteString("I'm Hamoksha");
    2d68:	80 e6       	ldi	r24, 0x60	; 96
    2d6a:	90 e0       	ldi	r25, 0x00	; 0
    2d6c:	0e 94 30 12 	call	0x2460	; 0x2460 <LCD_voidWriteString>
  LCD_voidSendSpecialChar(0,1,8,Hamokshastanding);
    2d70:	9e 01       	movw	r18, r28
    2d72:	21 53       	subi	r18, 0x31	; 49
    2d74:	3f 4f       	sbci	r19, 0xFF	; 255
    2d76:	80 e0       	ldi	r24, 0x00	; 0
    2d78:	61 e0       	ldi	r22, 0x01	; 1
    2d7a:	48 e0       	ldi	r20, 0x08	; 8
    2d7c:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    2d80:	fe 01       	movw	r30, r28
    2d82:	ef 53       	subi	r30, 0x3F	; 63
    2d84:	ff 4f       	sbci	r31, 0xFF	; 255
    2d86:	80 e0       	ldi	r24, 0x00	; 0
    2d88:	90 e0       	ldi	r25, 0x00	; 0
    2d8a:	aa ef       	ldi	r26, 0xFA	; 250
    2d8c:	b4 e4       	ldi	r27, 0x44	; 68
    2d8e:	80 83       	st	Z, r24
    2d90:	91 83       	std	Z+1, r25	; 0x01
    2d92:	a2 83       	std	Z+2, r26	; 0x02
    2d94:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d96:	8e 01       	movw	r16, r28
    2d98:	03 54       	subi	r16, 0x43	; 67
    2d9a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d9c:	fe 01       	movw	r30, r28
    2d9e:	ef 53       	subi	r30, 0x3F	; 63
    2da0:	ff 4f       	sbci	r31, 0xFF	; 255
    2da2:	60 81       	ld	r22, Z
    2da4:	71 81       	ldd	r23, Z+1	; 0x01
    2da6:	82 81       	ldd	r24, Z+2	; 0x02
    2da8:	93 81       	ldd	r25, Z+3	; 0x03
    2daa:	20 e0       	ldi	r18, 0x00	; 0
    2dac:	30 e0       	ldi	r19, 0x00	; 0
    2dae:	4a ef       	ldi	r20, 0xFA	; 250
    2db0:	54 e4       	ldi	r21, 0x44	; 68
    2db2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2db6:	dc 01       	movw	r26, r24
    2db8:	cb 01       	movw	r24, r22
    2dba:	f8 01       	movw	r30, r16
    2dbc:	80 83       	st	Z, r24
    2dbe:	91 83       	std	Z+1, r25	; 0x01
    2dc0:	a2 83       	std	Z+2, r26	; 0x02
    2dc2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2dc4:	fe 01       	movw	r30, r28
    2dc6:	e3 54       	subi	r30, 0x43	; 67
    2dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dca:	60 81       	ld	r22, Z
    2dcc:	71 81       	ldd	r23, Z+1	; 0x01
    2dce:	82 81       	ldd	r24, Z+2	; 0x02
    2dd0:	93 81       	ldd	r25, Z+3	; 0x03
    2dd2:	20 e0       	ldi	r18, 0x00	; 0
    2dd4:	30 e0       	ldi	r19, 0x00	; 0
    2dd6:	40 e8       	ldi	r20, 0x80	; 128
    2dd8:	5f e3       	ldi	r21, 0x3F	; 63
    2dda:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2dde:	88 23       	and	r24, r24
    2de0:	44 f4       	brge	.+16     	; 0x2df2 <main+0x678>
		__ticks = 1;
    2de2:	fe 01       	movw	r30, r28
    2de4:	e5 54       	subi	r30, 0x45	; 69
    2de6:	ff 4f       	sbci	r31, 0xFF	; 255
    2de8:	81 e0       	ldi	r24, 0x01	; 1
    2dea:	90 e0       	ldi	r25, 0x00	; 0
    2dec:	91 83       	std	Z+1, r25	; 0x01
    2dee:	80 83       	st	Z, r24
    2df0:	64 c0       	rjmp	.+200    	; 0x2eba <main+0x740>
	else if (__tmp > 65535)
    2df2:	fe 01       	movw	r30, r28
    2df4:	e3 54       	subi	r30, 0x43	; 67
    2df6:	ff 4f       	sbci	r31, 0xFF	; 255
    2df8:	60 81       	ld	r22, Z
    2dfa:	71 81       	ldd	r23, Z+1	; 0x01
    2dfc:	82 81       	ldd	r24, Z+2	; 0x02
    2dfe:	93 81       	ldd	r25, Z+3	; 0x03
    2e00:	20 e0       	ldi	r18, 0x00	; 0
    2e02:	3f ef       	ldi	r19, 0xFF	; 255
    2e04:	4f e7       	ldi	r20, 0x7F	; 127
    2e06:	57 e4       	ldi	r21, 0x47	; 71
    2e08:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2e0c:	18 16       	cp	r1, r24
    2e0e:	0c f0       	brlt	.+2      	; 0x2e12 <main+0x698>
    2e10:	43 c0       	rjmp	.+134    	; 0x2e98 <main+0x71e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e12:	fe 01       	movw	r30, r28
    2e14:	ef 53       	subi	r30, 0x3F	; 63
    2e16:	ff 4f       	sbci	r31, 0xFF	; 255
    2e18:	60 81       	ld	r22, Z
    2e1a:	71 81       	ldd	r23, Z+1	; 0x01
    2e1c:	82 81       	ldd	r24, Z+2	; 0x02
    2e1e:	93 81       	ldd	r25, Z+3	; 0x03
    2e20:	20 e0       	ldi	r18, 0x00	; 0
    2e22:	30 e0       	ldi	r19, 0x00	; 0
    2e24:	40 e2       	ldi	r20, 0x20	; 32
    2e26:	51 e4       	ldi	r21, 0x41	; 65
    2e28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e2c:	dc 01       	movw	r26, r24
    2e2e:	cb 01       	movw	r24, r22
    2e30:	8e 01       	movw	r16, r28
    2e32:	05 54       	subi	r16, 0x45	; 69
    2e34:	1f 4f       	sbci	r17, 0xFF	; 255
    2e36:	bc 01       	movw	r22, r24
    2e38:	cd 01       	movw	r24, r26
    2e3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e3e:	dc 01       	movw	r26, r24
    2e40:	cb 01       	movw	r24, r22
    2e42:	f8 01       	movw	r30, r16
    2e44:	91 83       	std	Z+1, r25	; 0x01
    2e46:	80 83       	st	Z, r24
    2e48:	1f c0       	rjmp	.+62     	; 0x2e88 <main+0x70e>
    2e4a:	fe 01       	movw	r30, r28
    2e4c:	e7 54       	subi	r30, 0x47	; 71
    2e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e50:	88 ec       	ldi	r24, 0xC8	; 200
    2e52:	90 e0       	ldi	r25, 0x00	; 0
    2e54:	91 83       	std	Z+1, r25	; 0x01
    2e56:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2e58:	fe 01       	movw	r30, r28
    2e5a:	e7 54       	subi	r30, 0x47	; 71
    2e5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e5e:	80 81       	ld	r24, Z
    2e60:	91 81       	ldd	r25, Z+1	; 0x01
    2e62:	01 97       	sbiw	r24, 0x01	; 1
    2e64:	f1 f7       	brne	.-4      	; 0x2e62 <main+0x6e8>
    2e66:	fe 01       	movw	r30, r28
    2e68:	e7 54       	subi	r30, 0x47	; 71
    2e6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e6c:	91 83       	std	Z+1, r25	; 0x01
    2e6e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e70:	de 01       	movw	r26, r28
    2e72:	a5 54       	subi	r26, 0x45	; 69
    2e74:	bf 4f       	sbci	r27, 0xFF	; 255
    2e76:	fe 01       	movw	r30, r28
    2e78:	e5 54       	subi	r30, 0x45	; 69
    2e7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7c:	80 81       	ld	r24, Z
    2e7e:	91 81       	ldd	r25, Z+1	; 0x01
    2e80:	01 97       	sbiw	r24, 0x01	; 1
    2e82:	11 96       	adiw	r26, 0x01	; 1
    2e84:	9c 93       	st	X, r25
    2e86:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e88:	fe 01       	movw	r30, r28
    2e8a:	e5 54       	subi	r30, 0x45	; 69
    2e8c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e8e:	80 81       	ld	r24, Z
    2e90:	91 81       	ldd	r25, Z+1	; 0x01
    2e92:	00 97       	sbiw	r24, 0x00	; 0
    2e94:	d1 f6       	brne	.-76     	; 0x2e4a <main+0x6d0>
    2e96:	27 c0       	rjmp	.+78     	; 0x2ee6 <main+0x76c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e98:	8e 01       	movw	r16, r28
    2e9a:	05 54       	subi	r16, 0x45	; 69
    2e9c:	1f 4f       	sbci	r17, 0xFF	; 255
    2e9e:	fe 01       	movw	r30, r28
    2ea0:	e3 54       	subi	r30, 0x43	; 67
    2ea2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea4:	60 81       	ld	r22, Z
    2ea6:	71 81       	ldd	r23, Z+1	; 0x01
    2ea8:	82 81       	ldd	r24, Z+2	; 0x02
    2eaa:	93 81       	ldd	r25, Z+3	; 0x03
    2eac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2eb0:	dc 01       	movw	r26, r24
    2eb2:	cb 01       	movw	r24, r22
    2eb4:	f8 01       	movw	r30, r16
    2eb6:	91 83       	std	Z+1, r25	; 0x01
    2eb8:	80 83       	st	Z, r24
    2eba:	de 01       	movw	r26, r28
    2ebc:	a9 54       	subi	r26, 0x49	; 73
    2ebe:	bf 4f       	sbci	r27, 0xFF	; 255
    2ec0:	fe 01       	movw	r30, r28
    2ec2:	e5 54       	subi	r30, 0x45	; 69
    2ec4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec6:	80 81       	ld	r24, Z
    2ec8:	91 81       	ldd	r25, Z+1	; 0x01
    2eca:	8d 93       	st	X+, r24
    2ecc:	9c 93       	st	X, r25
    2ece:	fe 01       	movw	r30, r28
    2ed0:	e9 54       	subi	r30, 0x49	; 73
    2ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed4:	80 81       	ld	r24, Z
    2ed6:	91 81       	ldd	r25, Z+1	; 0x01
    2ed8:	01 97       	sbiw	r24, 0x01	; 1
    2eda:	f1 f7       	brne	.-4      	; 0x2ed8 <main+0x75e>
    2edc:	fe 01       	movw	r30, r28
    2ede:	e9 54       	subi	r30, 0x49	; 73
    2ee0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee2:	91 83       	std	Z+1, r25	; 0x01
    2ee4:	80 83       	st	Z, r24
  _delay_ms(2000);
  LCD_voidClear();
    2ee6:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>

  //FRAME 2
  LCD_u8_GoTo_XY(0,0);
    2eea:	80 e0       	ldi	r24, 0x00	; 0
    2eec:	60 e0       	ldi	r22, 0x00	; 0
    2eee:	0e 94 67 12 	call	0x24ce	; 0x24ce <LCD_u8_GoTo_XY>
  LCD_voidWriteString("I Play FootBall");
    2ef2:	8d e6       	ldi	r24, 0x6D	; 109
    2ef4:	90 e0       	ldi	r25, 0x00	; 0
    2ef6:	0e 94 30 12 	call	0x2460	; 0x2460 <LCD_voidWriteString>
  LCD_voidSendSpecialChar(0,1,8,Hamokshastanding);
    2efa:	9e 01       	movw	r18, r28
    2efc:	21 53       	subi	r18, 0x31	; 49
    2efe:	3f 4f       	sbci	r19, 0xFF	; 255
    2f00:	80 e0       	ldi	r24, 0x00	; 0
    2f02:	61 e0       	ldi	r22, 0x01	; 1
    2f04:	48 e0       	ldi	r20, 0x08	; 8
    2f06:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    2f0a:	fe 01       	movw	r30, r28
    2f0c:	ed 54       	subi	r30, 0x4D	; 77
    2f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f10:	80 e0       	ldi	r24, 0x00	; 0
    2f12:	90 e0       	ldi	r25, 0x00	; 0
    2f14:	aa ef       	ldi	r26, 0xFA	; 250
    2f16:	b4 e4       	ldi	r27, 0x44	; 68
    2f18:	80 83       	st	Z, r24
    2f1a:	91 83       	std	Z+1, r25	; 0x01
    2f1c:	a2 83       	std	Z+2, r26	; 0x02
    2f1e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f20:	8e 01       	movw	r16, r28
    2f22:	01 55       	subi	r16, 0x51	; 81
    2f24:	1f 4f       	sbci	r17, 0xFF	; 255
    2f26:	fe 01       	movw	r30, r28
    2f28:	ed 54       	subi	r30, 0x4D	; 77
    2f2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2c:	60 81       	ld	r22, Z
    2f2e:	71 81       	ldd	r23, Z+1	; 0x01
    2f30:	82 81       	ldd	r24, Z+2	; 0x02
    2f32:	93 81       	ldd	r25, Z+3	; 0x03
    2f34:	20 e0       	ldi	r18, 0x00	; 0
    2f36:	30 e0       	ldi	r19, 0x00	; 0
    2f38:	4a ef       	ldi	r20, 0xFA	; 250
    2f3a:	54 e4       	ldi	r21, 0x44	; 68
    2f3c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f40:	dc 01       	movw	r26, r24
    2f42:	cb 01       	movw	r24, r22
    2f44:	f8 01       	movw	r30, r16
    2f46:	80 83       	st	Z, r24
    2f48:	91 83       	std	Z+1, r25	; 0x01
    2f4a:	a2 83       	std	Z+2, r26	; 0x02
    2f4c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f4e:	fe 01       	movw	r30, r28
    2f50:	e1 55       	subi	r30, 0x51	; 81
    2f52:	ff 4f       	sbci	r31, 0xFF	; 255
    2f54:	60 81       	ld	r22, Z
    2f56:	71 81       	ldd	r23, Z+1	; 0x01
    2f58:	82 81       	ldd	r24, Z+2	; 0x02
    2f5a:	93 81       	ldd	r25, Z+3	; 0x03
    2f5c:	20 e0       	ldi	r18, 0x00	; 0
    2f5e:	30 e0       	ldi	r19, 0x00	; 0
    2f60:	40 e8       	ldi	r20, 0x80	; 128
    2f62:	5f e3       	ldi	r21, 0x3F	; 63
    2f64:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2f68:	88 23       	and	r24, r24
    2f6a:	44 f4       	brge	.+16     	; 0x2f7c <main+0x802>
		__ticks = 1;
    2f6c:	fe 01       	movw	r30, r28
    2f6e:	e3 55       	subi	r30, 0x53	; 83
    2f70:	ff 4f       	sbci	r31, 0xFF	; 255
    2f72:	81 e0       	ldi	r24, 0x01	; 1
    2f74:	90 e0       	ldi	r25, 0x00	; 0
    2f76:	91 83       	std	Z+1, r25	; 0x01
    2f78:	80 83       	st	Z, r24
    2f7a:	64 c0       	rjmp	.+200    	; 0x3044 <main+0x8ca>
	else if (__tmp > 65535)
    2f7c:	fe 01       	movw	r30, r28
    2f7e:	e1 55       	subi	r30, 0x51	; 81
    2f80:	ff 4f       	sbci	r31, 0xFF	; 255
    2f82:	60 81       	ld	r22, Z
    2f84:	71 81       	ldd	r23, Z+1	; 0x01
    2f86:	82 81       	ldd	r24, Z+2	; 0x02
    2f88:	93 81       	ldd	r25, Z+3	; 0x03
    2f8a:	20 e0       	ldi	r18, 0x00	; 0
    2f8c:	3f ef       	ldi	r19, 0xFF	; 255
    2f8e:	4f e7       	ldi	r20, 0x7F	; 127
    2f90:	57 e4       	ldi	r21, 0x47	; 71
    2f92:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2f96:	18 16       	cp	r1, r24
    2f98:	0c f0       	brlt	.+2      	; 0x2f9c <main+0x822>
    2f9a:	43 c0       	rjmp	.+134    	; 0x3022 <main+0x8a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f9c:	fe 01       	movw	r30, r28
    2f9e:	ed 54       	subi	r30, 0x4D	; 77
    2fa0:	ff 4f       	sbci	r31, 0xFF	; 255
    2fa2:	60 81       	ld	r22, Z
    2fa4:	71 81       	ldd	r23, Z+1	; 0x01
    2fa6:	82 81       	ldd	r24, Z+2	; 0x02
    2fa8:	93 81       	ldd	r25, Z+3	; 0x03
    2faa:	20 e0       	ldi	r18, 0x00	; 0
    2fac:	30 e0       	ldi	r19, 0x00	; 0
    2fae:	40 e2       	ldi	r20, 0x20	; 32
    2fb0:	51 e4       	ldi	r21, 0x41	; 65
    2fb2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fb6:	dc 01       	movw	r26, r24
    2fb8:	cb 01       	movw	r24, r22
    2fba:	8e 01       	movw	r16, r28
    2fbc:	03 55       	subi	r16, 0x53	; 83
    2fbe:	1f 4f       	sbci	r17, 0xFF	; 255
    2fc0:	bc 01       	movw	r22, r24
    2fc2:	cd 01       	movw	r24, r26
    2fc4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fc8:	dc 01       	movw	r26, r24
    2fca:	cb 01       	movw	r24, r22
    2fcc:	f8 01       	movw	r30, r16
    2fce:	91 83       	std	Z+1, r25	; 0x01
    2fd0:	80 83       	st	Z, r24
    2fd2:	1f c0       	rjmp	.+62     	; 0x3012 <main+0x898>
    2fd4:	fe 01       	movw	r30, r28
    2fd6:	e5 55       	subi	r30, 0x55	; 85
    2fd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2fda:	88 ec       	ldi	r24, 0xC8	; 200
    2fdc:	90 e0       	ldi	r25, 0x00	; 0
    2fde:	91 83       	std	Z+1, r25	; 0x01
    2fe0:	80 83       	st	Z, r24
    2fe2:	fe 01       	movw	r30, r28
    2fe4:	e5 55       	subi	r30, 0x55	; 85
    2fe6:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe8:	80 81       	ld	r24, Z
    2fea:	91 81       	ldd	r25, Z+1	; 0x01
    2fec:	01 97       	sbiw	r24, 0x01	; 1
    2fee:	f1 f7       	brne	.-4      	; 0x2fec <main+0x872>
    2ff0:	fe 01       	movw	r30, r28
    2ff2:	e5 55       	subi	r30, 0x55	; 85
    2ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ff6:	91 83       	std	Z+1, r25	; 0x01
    2ff8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ffa:	de 01       	movw	r26, r28
    2ffc:	a3 55       	subi	r26, 0x53	; 83
    2ffe:	bf 4f       	sbci	r27, 0xFF	; 255
    3000:	fe 01       	movw	r30, r28
    3002:	e3 55       	subi	r30, 0x53	; 83
    3004:	ff 4f       	sbci	r31, 0xFF	; 255
    3006:	80 81       	ld	r24, Z
    3008:	91 81       	ldd	r25, Z+1	; 0x01
    300a:	01 97       	sbiw	r24, 0x01	; 1
    300c:	11 96       	adiw	r26, 0x01	; 1
    300e:	9c 93       	st	X, r25
    3010:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3012:	fe 01       	movw	r30, r28
    3014:	e3 55       	subi	r30, 0x53	; 83
    3016:	ff 4f       	sbci	r31, 0xFF	; 255
    3018:	80 81       	ld	r24, Z
    301a:	91 81       	ldd	r25, Z+1	; 0x01
    301c:	00 97       	sbiw	r24, 0x00	; 0
    301e:	d1 f6       	brne	.-76     	; 0x2fd4 <main+0x85a>
    3020:	28 c0       	rjmp	.+80     	; 0x3072 <main+0x8f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3022:	8e 01       	movw	r16, r28
    3024:	03 55       	subi	r16, 0x53	; 83
    3026:	1f 4f       	sbci	r17, 0xFF	; 255
    3028:	fe 01       	movw	r30, r28
    302a:	e1 55       	subi	r30, 0x51	; 81
    302c:	ff 4f       	sbci	r31, 0xFF	; 255
    302e:	60 81       	ld	r22, Z
    3030:	71 81       	ldd	r23, Z+1	; 0x01
    3032:	82 81       	ldd	r24, Z+2	; 0x02
    3034:	93 81       	ldd	r25, Z+3	; 0x03
    3036:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    303a:	dc 01       	movw	r26, r24
    303c:	cb 01       	movw	r24, r22
    303e:	f8 01       	movw	r30, r16
    3040:	91 83       	std	Z+1, r25	; 0x01
    3042:	80 83       	st	Z, r24
    3044:	de 01       	movw	r26, r28
    3046:	a7 55       	subi	r26, 0x57	; 87
    3048:	bf 4f       	sbci	r27, 0xFF	; 255
    304a:	fe 01       	movw	r30, r28
    304c:	e3 55       	subi	r30, 0x53	; 83
    304e:	ff 4f       	sbci	r31, 0xFF	; 255
    3050:	80 81       	ld	r24, Z
    3052:	91 81       	ldd	r25, Z+1	; 0x01
    3054:	11 96       	adiw	r26, 0x01	; 1
    3056:	9c 93       	st	X, r25
    3058:	8e 93       	st	-X, r24
    305a:	fe 01       	movw	r30, r28
    305c:	e7 55       	subi	r30, 0x57	; 87
    305e:	ff 4f       	sbci	r31, 0xFF	; 255
    3060:	80 81       	ld	r24, Z
    3062:	91 81       	ldd	r25, Z+1	; 0x01
    3064:	01 97       	sbiw	r24, 0x01	; 1
    3066:	f1 f7       	brne	.-4      	; 0x3064 <main+0x8ea>
    3068:	fe 01       	movw	r30, r28
    306a:	e7 55       	subi	r30, 0x57	; 87
    306c:	ff 4f       	sbci	r31, 0xFF	; 255
    306e:	91 83       	std	Z+1, r25	; 0x01
    3070:	80 83       	st	Z, r24
  _delay_ms(2000);
  for(u8 i =0 ; i<7 ;i++)
    3072:	fe 01       	movw	r30, r28
    3074:	ea 53       	subi	r30, 0x3A	; 58
    3076:	ff 4f       	sbci	r31, 0xFF	; 255
    3078:	10 82       	st	Z, r1
    307a:	ab c1       	rjmp	.+854    	; 0x33d2 <main+0xc58>
  {
  LCD_voidClear();
    307c:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
  LCD_voidSendSpecialChar(1,1,4+i,HamokshaRuning);
    3080:	fe 01       	movw	r30, r28
    3082:	ea 53       	subi	r30, 0x3A	; 58
    3084:	ff 4f       	sbci	r31, 0xFF	; 255
    3086:	80 81       	ld	r24, Z
    3088:	98 2f       	mov	r25, r24
    308a:	9c 5f       	subi	r25, 0xFC	; 252
    308c:	9e 01       	movw	r18, r28
    308e:	29 53       	subi	r18, 0x39	; 57
    3090:	3f 4f       	sbci	r19, 0xFF	; 255
    3092:	81 e0       	ldi	r24, 0x01	; 1
    3094:	61 e0       	ldi	r22, 0x01	; 1
    3096:	49 2f       	mov	r20, r25
    3098:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
  LCD_voidSendSpecialChar(2,1,5+i,BallDown);
    309c:	fe 01       	movw	r30, r28
    309e:	ea 53       	subi	r30, 0x3A	; 58
    30a0:	ff 4f       	sbci	r31, 0xFF	; 255
    30a2:	80 81       	ld	r24, Z
    30a4:	98 2f       	mov	r25, r24
    30a6:	9b 5f       	subi	r25, 0xFB	; 251
    30a8:	9e 01       	movw	r18, r28
    30aa:	29 52       	subi	r18, 0x29	; 41
    30ac:	3f 4f       	sbci	r19, 0xFF	; 255
    30ae:	82 e0       	ldi	r24, 0x02	; 2
    30b0:	61 e0       	ldi	r22, 0x01	; 1
    30b2:	49 2f       	mov	r20, r25
    30b4:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    30b8:	fe 01       	movw	r30, r28
    30ba:	eb 55       	subi	r30, 0x5B	; 91
    30bc:	ff 4f       	sbci	r31, 0xFF	; 255
    30be:	80 e0       	ldi	r24, 0x00	; 0
    30c0:	90 e0       	ldi	r25, 0x00	; 0
    30c2:	a8 e4       	ldi	r26, 0x48	; 72
    30c4:	b3 e4       	ldi	r27, 0x43	; 67
    30c6:	80 83       	st	Z, r24
    30c8:	91 83       	std	Z+1, r25	; 0x01
    30ca:	a2 83       	std	Z+2, r26	; 0x02
    30cc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30ce:	8e 01       	movw	r16, r28
    30d0:	0f 55       	subi	r16, 0x5F	; 95
    30d2:	1f 4f       	sbci	r17, 0xFF	; 255
    30d4:	fe 01       	movw	r30, r28
    30d6:	eb 55       	subi	r30, 0x5B	; 91
    30d8:	ff 4f       	sbci	r31, 0xFF	; 255
    30da:	60 81       	ld	r22, Z
    30dc:	71 81       	ldd	r23, Z+1	; 0x01
    30de:	82 81       	ldd	r24, Z+2	; 0x02
    30e0:	93 81       	ldd	r25, Z+3	; 0x03
    30e2:	20 e0       	ldi	r18, 0x00	; 0
    30e4:	30 e0       	ldi	r19, 0x00	; 0
    30e6:	4a ef       	ldi	r20, 0xFA	; 250
    30e8:	54 e4       	ldi	r21, 0x44	; 68
    30ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30ee:	dc 01       	movw	r26, r24
    30f0:	cb 01       	movw	r24, r22
    30f2:	f8 01       	movw	r30, r16
    30f4:	80 83       	st	Z, r24
    30f6:	91 83       	std	Z+1, r25	; 0x01
    30f8:	a2 83       	std	Z+2, r26	; 0x02
    30fa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    30fc:	fe 01       	movw	r30, r28
    30fe:	ef 55       	subi	r30, 0x5F	; 95
    3100:	ff 4f       	sbci	r31, 0xFF	; 255
    3102:	60 81       	ld	r22, Z
    3104:	71 81       	ldd	r23, Z+1	; 0x01
    3106:	82 81       	ldd	r24, Z+2	; 0x02
    3108:	93 81       	ldd	r25, Z+3	; 0x03
    310a:	20 e0       	ldi	r18, 0x00	; 0
    310c:	30 e0       	ldi	r19, 0x00	; 0
    310e:	40 e8       	ldi	r20, 0x80	; 128
    3110:	5f e3       	ldi	r21, 0x3F	; 63
    3112:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3116:	88 23       	and	r24, r24
    3118:	44 f4       	brge	.+16     	; 0x312a <main+0x9b0>
		__ticks = 1;
    311a:	fe 01       	movw	r30, r28
    311c:	e1 56       	subi	r30, 0x61	; 97
    311e:	ff 4f       	sbci	r31, 0xFF	; 255
    3120:	81 e0       	ldi	r24, 0x01	; 1
    3122:	90 e0       	ldi	r25, 0x00	; 0
    3124:	91 83       	std	Z+1, r25	; 0x01
    3126:	80 83       	st	Z, r24
    3128:	64 c0       	rjmp	.+200    	; 0x31f2 <main+0xa78>
	else if (__tmp > 65535)
    312a:	fe 01       	movw	r30, r28
    312c:	ef 55       	subi	r30, 0x5F	; 95
    312e:	ff 4f       	sbci	r31, 0xFF	; 255
    3130:	60 81       	ld	r22, Z
    3132:	71 81       	ldd	r23, Z+1	; 0x01
    3134:	82 81       	ldd	r24, Z+2	; 0x02
    3136:	93 81       	ldd	r25, Z+3	; 0x03
    3138:	20 e0       	ldi	r18, 0x00	; 0
    313a:	3f ef       	ldi	r19, 0xFF	; 255
    313c:	4f e7       	ldi	r20, 0x7F	; 127
    313e:	57 e4       	ldi	r21, 0x47	; 71
    3140:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3144:	18 16       	cp	r1, r24
    3146:	0c f0       	brlt	.+2      	; 0x314a <main+0x9d0>
    3148:	43 c0       	rjmp	.+134    	; 0x31d0 <main+0xa56>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    314a:	fe 01       	movw	r30, r28
    314c:	eb 55       	subi	r30, 0x5B	; 91
    314e:	ff 4f       	sbci	r31, 0xFF	; 255
    3150:	60 81       	ld	r22, Z
    3152:	71 81       	ldd	r23, Z+1	; 0x01
    3154:	82 81       	ldd	r24, Z+2	; 0x02
    3156:	93 81       	ldd	r25, Z+3	; 0x03
    3158:	20 e0       	ldi	r18, 0x00	; 0
    315a:	30 e0       	ldi	r19, 0x00	; 0
    315c:	40 e2       	ldi	r20, 0x20	; 32
    315e:	51 e4       	ldi	r21, 0x41	; 65
    3160:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3164:	dc 01       	movw	r26, r24
    3166:	cb 01       	movw	r24, r22
    3168:	8e 01       	movw	r16, r28
    316a:	01 56       	subi	r16, 0x61	; 97
    316c:	1f 4f       	sbci	r17, 0xFF	; 255
    316e:	bc 01       	movw	r22, r24
    3170:	cd 01       	movw	r24, r26
    3172:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3176:	dc 01       	movw	r26, r24
    3178:	cb 01       	movw	r24, r22
    317a:	f8 01       	movw	r30, r16
    317c:	91 83       	std	Z+1, r25	; 0x01
    317e:	80 83       	st	Z, r24
    3180:	1f c0       	rjmp	.+62     	; 0x31c0 <main+0xa46>
    3182:	fe 01       	movw	r30, r28
    3184:	e3 56       	subi	r30, 0x63	; 99
    3186:	ff 4f       	sbci	r31, 0xFF	; 255
    3188:	88 ec       	ldi	r24, 0xC8	; 200
    318a:	90 e0       	ldi	r25, 0x00	; 0
    318c:	91 83       	std	Z+1, r25	; 0x01
    318e:	80 83       	st	Z, r24
    3190:	fe 01       	movw	r30, r28
    3192:	e3 56       	subi	r30, 0x63	; 99
    3194:	ff 4f       	sbci	r31, 0xFF	; 255
    3196:	80 81       	ld	r24, Z
    3198:	91 81       	ldd	r25, Z+1	; 0x01
    319a:	01 97       	sbiw	r24, 0x01	; 1
    319c:	f1 f7       	brne	.-4      	; 0x319a <main+0xa20>
    319e:	fe 01       	movw	r30, r28
    31a0:	e3 56       	subi	r30, 0x63	; 99
    31a2:	ff 4f       	sbci	r31, 0xFF	; 255
    31a4:	91 83       	std	Z+1, r25	; 0x01
    31a6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31a8:	de 01       	movw	r26, r28
    31aa:	a1 56       	subi	r26, 0x61	; 97
    31ac:	bf 4f       	sbci	r27, 0xFF	; 255
    31ae:	fe 01       	movw	r30, r28
    31b0:	e1 56       	subi	r30, 0x61	; 97
    31b2:	ff 4f       	sbci	r31, 0xFF	; 255
    31b4:	80 81       	ld	r24, Z
    31b6:	91 81       	ldd	r25, Z+1	; 0x01
    31b8:	01 97       	sbiw	r24, 0x01	; 1
    31ba:	11 96       	adiw	r26, 0x01	; 1
    31bc:	9c 93       	st	X, r25
    31be:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31c0:	fe 01       	movw	r30, r28
    31c2:	e1 56       	subi	r30, 0x61	; 97
    31c4:	ff 4f       	sbci	r31, 0xFF	; 255
    31c6:	80 81       	ld	r24, Z
    31c8:	91 81       	ldd	r25, Z+1	; 0x01
    31ca:	00 97       	sbiw	r24, 0x00	; 0
    31cc:	d1 f6       	brne	.-76     	; 0x3182 <main+0xa08>
    31ce:	27 c0       	rjmp	.+78     	; 0x321e <main+0xaa4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31d0:	8e 01       	movw	r16, r28
    31d2:	01 56       	subi	r16, 0x61	; 97
    31d4:	1f 4f       	sbci	r17, 0xFF	; 255
    31d6:	fe 01       	movw	r30, r28
    31d8:	ef 55       	subi	r30, 0x5F	; 95
    31da:	ff 4f       	sbci	r31, 0xFF	; 255
    31dc:	60 81       	ld	r22, Z
    31de:	71 81       	ldd	r23, Z+1	; 0x01
    31e0:	82 81       	ldd	r24, Z+2	; 0x02
    31e2:	93 81       	ldd	r25, Z+3	; 0x03
    31e4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31e8:	dc 01       	movw	r26, r24
    31ea:	cb 01       	movw	r24, r22
    31ec:	f8 01       	movw	r30, r16
    31ee:	91 83       	std	Z+1, r25	; 0x01
    31f0:	80 83       	st	Z, r24
    31f2:	de 01       	movw	r26, r28
    31f4:	a5 56       	subi	r26, 0x65	; 101
    31f6:	bf 4f       	sbci	r27, 0xFF	; 255
    31f8:	fe 01       	movw	r30, r28
    31fa:	e1 56       	subi	r30, 0x61	; 97
    31fc:	ff 4f       	sbci	r31, 0xFF	; 255
    31fe:	80 81       	ld	r24, Z
    3200:	91 81       	ldd	r25, Z+1	; 0x01
    3202:	8d 93       	st	X+, r24
    3204:	9c 93       	st	X, r25
    3206:	fe 01       	movw	r30, r28
    3208:	e5 56       	subi	r30, 0x65	; 101
    320a:	ff 4f       	sbci	r31, 0xFF	; 255
    320c:	80 81       	ld	r24, Z
    320e:	91 81       	ldd	r25, Z+1	; 0x01
    3210:	01 97       	sbiw	r24, 0x01	; 1
    3212:	f1 f7       	brne	.-4      	; 0x3210 <main+0xa96>
    3214:	fe 01       	movw	r30, r28
    3216:	e5 56       	subi	r30, 0x65	; 101
    3218:	ff 4f       	sbci	r31, 0xFF	; 255
    321a:	91 83       	std	Z+1, r25	; 0x01
    321c:	80 83       	st	Z, r24
  _delay_ms(200);
  LCD_voidClear();
    321e:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
  LCD_voidSendSpecialChar(0,1,5+i,Hamokshastanding);
    3222:	fe 01       	movw	r30, r28
    3224:	ea 53       	subi	r30, 0x3A	; 58
    3226:	ff 4f       	sbci	r31, 0xFF	; 255
    3228:	80 81       	ld	r24, Z
    322a:	98 2f       	mov	r25, r24
    322c:	9b 5f       	subi	r25, 0xFB	; 251
    322e:	9e 01       	movw	r18, r28
    3230:	21 53       	subi	r18, 0x31	; 49
    3232:	3f 4f       	sbci	r19, 0xFF	; 255
    3234:	80 e0       	ldi	r24, 0x00	; 0
    3236:	61 e0       	ldi	r22, 0x01	; 1
    3238:	49 2f       	mov	r20, r25
    323a:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
  LCD_voidSendSpecialChar(3,1,6+i,BallUp);
    323e:	fe 01       	movw	r30, r28
    3240:	ea 53       	subi	r30, 0x3A	; 58
    3242:	ff 4f       	sbci	r31, 0xFF	; 255
    3244:	80 81       	ld	r24, Z
    3246:	98 2f       	mov	r25, r24
    3248:	9a 5f       	subi	r25, 0xFA	; 250
    324a:	9e 01       	movw	r18, r28
    324c:	21 52       	subi	r18, 0x21	; 33
    324e:	3f 4f       	sbci	r19, 0xFF	; 255
    3250:	83 e0       	ldi	r24, 0x03	; 3
    3252:	61 e0       	ldi	r22, 0x01	; 1
    3254:	49 2f       	mov	r20, r25
    3256:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    325a:	fe 01       	movw	r30, r28
    325c:	e9 56       	subi	r30, 0x69	; 105
    325e:	ff 4f       	sbci	r31, 0xFF	; 255
    3260:	80 e0       	ldi	r24, 0x00	; 0
    3262:	90 e0       	ldi	r25, 0x00	; 0
    3264:	a8 e4       	ldi	r26, 0x48	; 72
    3266:	b3 e4       	ldi	r27, 0x43	; 67
    3268:	80 83       	st	Z, r24
    326a:	91 83       	std	Z+1, r25	; 0x01
    326c:	a2 83       	std	Z+2, r26	; 0x02
    326e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3270:	8e 01       	movw	r16, r28
    3272:	0d 56       	subi	r16, 0x6D	; 109
    3274:	1f 4f       	sbci	r17, 0xFF	; 255
    3276:	fe 01       	movw	r30, r28
    3278:	e9 56       	subi	r30, 0x69	; 105
    327a:	ff 4f       	sbci	r31, 0xFF	; 255
    327c:	60 81       	ld	r22, Z
    327e:	71 81       	ldd	r23, Z+1	; 0x01
    3280:	82 81       	ldd	r24, Z+2	; 0x02
    3282:	93 81       	ldd	r25, Z+3	; 0x03
    3284:	20 e0       	ldi	r18, 0x00	; 0
    3286:	30 e0       	ldi	r19, 0x00	; 0
    3288:	4a ef       	ldi	r20, 0xFA	; 250
    328a:	54 e4       	ldi	r21, 0x44	; 68
    328c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3290:	dc 01       	movw	r26, r24
    3292:	cb 01       	movw	r24, r22
    3294:	f8 01       	movw	r30, r16
    3296:	80 83       	st	Z, r24
    3298:	91 83       	std	Z+1, r25	; 0x01
    329a:	a2 83       	std	Z+2, r26	; 0x02
    329c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    329e:	fe 01       	movw	r30, r28
    32a0:	ed 56       	subi	r30, 0x6D	; 109
    32a2:	ff 4f       	sbci	r31, 0xFF	; 255
    32a4:	60 81       	ld	r22, Z
    32a6:	71 81       	ldd	r23, Z+1	; 0x01
    32a8:	82 81       	ldd	r24, Z+2	; 0x02
    32aa:	93 81       	ldd	r25, Z+3	; 0x03
    32ac:	20 e0       	ldi	r18, 0x00	; 0
    32ae:	30 e0       	ldi	r19, 0x00	; 0
    32b0:	40 e8       	ldi	r20, 0x80	; 128
    32b2:	5f e3       	ldi	r21, 0x3F	; 63
    32b4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    32b8:	88 23       	and	r24, r24
    32ba:	44 f4       	brge	.+16     	; 0x32cc <main+0xb52>
		__ticks = 1;
    32bc:	fe 01       	movw	r30, r28
    32be:	ef 56       	subi	r30, 0x6F	; 111
    32c0:	ff 4f       	sbci	r31, 0xFF	; 255
    32c2:	81 e0       	ldi	r24, 0x01	; 1
    32c4:	90 e0       	ldi	r25, 0x00	; 0
    32c6:	91 83       	std	Z+1, r25	; 0x01
    32c8:	80 83       	st	Z, r24
    32ca:	64 c0       	rjmp	.+200    	; 0x3394 <main+0xc1a>
	else if (__tmp > 65535)
    32cc:	fe 01       	movw	r30, r28
    32ce:	ed 56       	subi	r30, 0x6D	; 109
    32d0:	ff 4f       	sbci	r31, 0xFF	; 255
    32d2:	60 81       	ld	r22, Z
    32d4:	71 81       	ldd	r23, Z+1	; 0x01
    32d6:	82 81       	ldd	r24, Z+2	; 0x02
    32d8:	93 81       	ldd	r25, Z+3	; 0x03
    32da:	20 e0       	ldi	r18, 0x00	; 0
    32dc:	3f ef       	ldi	r19, 0xFF	; 255
    32de:	4f e7       	ldi	r20, 0x7F	; 127
    32e0:	57 e4       	ldi	r21, 0x47	; 71
    32e2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    32e6:	18 16       	cp	r1, r24
    32e8:	0c f0       	brlt	.+2      	; 0x32ec <main+0xb72>
    32ea:	43 c0       	rjmp	.+134    	; 0x3372 <main+0xbf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32ec:	fe 01       	movw	r30, r28
    32ee:	e9 56       	subi	r30, 0x69	; 105
    32f0:	ff 4f       	sbci	r31, 0xFF	; 255
    32f2:	60 81       	ld	r22, Z
    32f4:	71 81       	ldd	r23, Z+1	; 0x01
    32f6:	82 81       	ldd	r24, Z+2	; 0x02
    32f8:	93 81       	ldd	r25, Z+3	; 0x03
    32fa:	20 e0       	ldi	r18, 0x00	; 0
    32fc:	30 e0       	ldi	r19, 0x00	; 0
    32fe:	40 e2       	ldi	r20, 0x20	; 32
    3300:	51 e4       	ldi	r21, 0x41	; 65
    3302:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3306:	dc 01       	movw	r26, r24
    3308:	cb 01       	movw	r24, r22
    330a:	8e 01       	movw	r16, r28
    330c:	0f 56       	subi	r16, 0x6F	; 111
    330e:	1f 4f       	sbci	r17, 0xFF	; 255
    3310:	bc 01       	movw	r22, r24
    3312:	cd 01       	movw	r24, r26
    3314:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3318:	dc 01       	movw	r26, r24
    331a:	cb 01       	movw	r24, r22
    331c:	f8 01       	movw	r30, r16
    331e:	91 83       	std	Z+1, r25	; 0x01
    3320:	80 83       	st	Z, r24
    3322:	1f c0       	rjmp	.+62     	; 0x3362 <main+0xbe8>
    3324:	fe 01       	movw	r30, r28
    3326:	e1 57       	subi	r30, 0x71	; 113
    3328:	ff 4f       	sbci	r31, 0xFF	; 255
    332a:	88 ec       	ldi	r24, 0xC8	; 200
    332c:	90 e0       	ldi	r25, 0x00	; 0
    332e:	91 83       	std	Z+1, r25	; 0x01
    3330:	80 83       	st	Z, r24
    3332:	fe 01       	movw	r30, r28
    3334:	e1 57       	subi	r30, 0x71	; 113
    3336:	ff 4f       	sbci	r31, 0xFF	; 255
    3338:	80 81       	ld	r24, Z
    333a:	91 81       	ldd	r25, Z+1	; 0x01
    333c:	01 97       	sbiw	r24, 0x01	; 1
    333e:	f1 f7       	brne	.-4      	; 0x333c <main+0xbc2>
    3340:	fe 01       	movw	r30, r28
    3342:	e1 57       	subi	r30, 0x71	; 113
    3344:	ff 4f       	sbci	r31, 0xFF	; 255
    3346:	91 83       	std	Z+1, r25	; 0x01
    3348:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    334a:	de 01       	movw	r26, r28
    334c:	af 56       	subi	r26, 0x6F	; 111
    334e:	bf 4f       	sbci	r27, 0xFF	; 255
    3350:	fe 01       	movw	r30, r28
    3352:	ef 56       	subi	r30, 0x6F	; 111
    3354:	ff 4f       	sbci	r31, 0xFF	; 255
    3356:	80 81       	ld	r24, Z
    3358:	91 81       	ldd	r25, Z+1	; 0x01
    335a:	01 97       	sbiw	r24, 0x01	; 1
    335c:	11 96       	adiw	r26, 0x01	; 1
    335e:	9c 93       	st	X, r25
    3360:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3362:	fe 01       	movw	r30, r28
    3364:	ef 56       	subi	r30, 0x6F	; 111
    3366:	ff 4f       	sbci	r31, 0xFF	; 255
    3368:	80 81       	ld	r24, Z
    336a:	91 81       	ldd	r25, Z+1	; 0x01
    336c:	00 97       	sbiw	r24, 0x00	; 0
    336e:	d1 f6       	brne	.-76     	; 0x3324 <main+0xbaa>
    3370:	27 c0       	rjmp	.+78     	; 0x33c0 <main+0xc46>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3372:	8e 01       	movw	r16, r28
    3374:	0f 56       	subi	r16, 0x6F	; 111
    3376:	1f 4f       	sbci	r17, 0xFF	; 255
    3378:	fe 01       	movw	r30, r28
    337a:	ed 56       	subi	r30, 0x6D	; 109
    337c:	ff 4f       	sbci	r31, 0xFF	; 255
    337e:	60 81       	ld	r22, Z
    3380:	71 81       	ldd	r23, Z+1	; 0x01
    3382:	82 81       	ldd	r24, Z+2	; 0x02
    3384:	93 81       	ldd	r25, Z+3	; 0x03
    3386:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    338a:	dc 01       	movw	r26, r24
    338c:	cb 01       	movw	r24, r22
    338e:	f8 01       	movw	r30, r16
    3390:	91 83       	std	Z+1, r25	; 0x01
    3392:	80 83       	st	Z, r24
    3394:	de 01       	movw	r26, r28
    3396:	a3 57       	subi	r26, 0x73	; 115
    3398:	bf 4f       	sbci	r27, 0xFF	; 255
    339a:	fe 01       	movw	r30, r28
    339c:	ef 56       	subi	r30, 0x6F	; 111
    339e:	ff 4f       	sbci	r31, 0xFF	; 255
    33a0:	80 81       	ld	r24, Z
    33a2:	91 81       	ldd	r25, Z+1	; 0x01
    33a4:	8d 93       	st	X+, r24
    33a6:	9c 93       	st	X, r25
    33a8:	fe 01       	movw	r30, r28
    33aa:	e3 57       	subi	r30, 0x73	; 115
    33ac:	ff 4f       	sbci	r31, 0xFF	; 255
    33ae:	80 81       	ld	r24, Z
    33b0:	91 81       	ldd	r25, Z+1	; 0x01
    33b2:	01 97       	sbiw	r24, 0x01	; 1
    33b4:	f1 f7       	brne	.-4      	; 0x33b2 <main+0xc38>
    33b6:	fe 01       	movw	r30, r28
    33b8:	e3 57       	subi	r30, 0x73	; 115
    33ba:	ff 4f       	sbci	r31, 0xFF	; 255
    33bc:	91 83       	std	Z+1, r25	; 0x01
    33be:	80 83       	st	Z, r24
  //FRAME 2
  LCD_u8_GoTo_XY(0,0);
  LCD_voidWriteString("I Play FootBall");
  LCD_voidSendSpecialChar(0,1,8,Hamokshastanding);
  _delay_ms(2000);
  for(u8 i =0 ; i<7 ;i++)
    33c0:	de 01       	movw	r26, r28
    33c2:	aa 53       	subi	r26, 0x3A	; 58
    33c4:	bf 4f       	sbci	r27, 0xFF	; 255
    33c6:	fe 01       	movw	r30, r28
    33c8:	ea 53       	subi	r30, 0x3A	; 58
    33ca:	ff 4f       	sbci	r31, 0xFF	; 255
    33cc:	80 81       	ld	r24, Z
    33ce:	8f 5f       	subi	r24, 0xFF	; 255
    33d0:	8c 93       	st	X, r24
    33d2:	fe 01       	movw	r30, r28
    33d4:	ea 53       	subi	r30, 0x3A	; 58
    33d6:	ff 4f       	sbci	r31, 0xFF	; 255
    33d8:	80 81       	ld	r24, Z
    33da:	87 30       	cpi	r24, 0x07	; 7
    33dc:	08 f4       	brcc	.+2      	; 0x33e0 <main+0xc66>
    33de:	4e ce       	rjmp	.-868    	; 0x307c <main+0x902>
  LCD_voidClear();
  LCD_voidSendSpecialChar(0,1,5+i,Hamokshastanding);
  LCD_voidSendSpecialChar(3,1,6+i,BallUp);
  _delay_ms(200);
  }
  LCD_voidClear();
    33e0:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
  LCD_u8_GoTo_XY(0,4);
    33e4:	80 e0       	ldi	r24, 0x00	; 0
    33e6:	64 e0       	ldi	r22, 0x04	; 4
    33e8:	0e 94 67 12 	call	0x24ce	; 0x24ce <LCD_u8_GoTo_XY>
  LCD_voidWriteString("Goaaaaaal!");
    33ec:	8d e7       	ldi	r24, 0x7D	; 125
    33ee:	90 e0       	ldi	r25, 0x00	; 0
    33f0:	0e 94 30 12 	call	0x2460	; 0x2460 <LCD_voidWriteString>
  LCD_voidSendSpecialChar(0,1,13,Hamokshastanding);
    33f4:	9e 01       	movw	r18, r28
    33f6:	21 53       	subi	r18, 0x31	; 49
    33f8:	3f 4f       	sbci	r19, 0xFF	; 255
    33fa:	80 e0       	ldi	r24, 0x00	; 0
    33fc:	61 e0       	ldi	r22, 0x01	; 1
    33fe:	4d e0       	ldi	r20, 0x0D	; 13
    3400:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
  LCD_voidSendSpecialChar(4,1,15,Goal);
    3404:	9e 01       	movw	r18, r28
    3406:	29 51       	subi	r18, 0x19	; 25
    3408:	3f 4f       	sbci	r19, 0xFF	; 255
    340a:	84 e0       	ldi	r24, 0x04	; 4
    340c:	61 e0       	ldi	r22, 0x01	; 1
    340e:	4f e0       	ldi	r20, 0x0F	; 15
    3410:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    3414:	fe 01       	movw	r30, r28
    3416:	e7 57       	subi	r30, 0x77	; 119
    3418:	ff 4f       	sbci	r31, 0xFF	; 255
    341a:	80 e0       	ldi	r24, 0x00	; 0
    341c:	90 e0       	ldi	r25, 0x00	; 0
    341e:	aa ef       	ldi	r26, 0xFA	; 250
    3420:	b4 e4       	ldi	r27, 0x44	; 68
    3422:	80 83       	st	Z, r24
    3424:	91 83       	std	Z+1, r25	; 0x01
    3426:	a2 83       	std	Z+2, r26	; 0x02
    3428:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    342a:	8e 01       	movw	r16, r28
    342c:	0b 57       	subi	r16, 0x7B	; 123
    342e:	1f 4f       	sbci	r17, 0xFF	; 255
    3430:	fe 01       	movw	r30, r28
    3432:	e7 57       	subi	r30, 0x77	; 119
    3434:	ff 4f       	sbci	r31, 0xFF	; 255
    3436:	60 81       	ld	r22, Z
    3438:	71 81       	ldd	r23, Z+1	; 0x01
    343a:	82 81       	ldd	r24, Z+2	; 0x02
    343c:	93 81       	ldd	r25, Z+3	; 0x03
    343e:	20 e0       	ldi	r18, 0x00	; 0
    3440:	30 e0       	ldi	r19, 0x00	; 0
    3442:	4a ef       	ldi	r20, 0xFA	; 250
    3444:	54 e4       	ldi	r21, 0x44	; 68
    3446:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    344a:	dc 01       	movw	r26, r24
    344c:	cb 01       	movw	r24, r22
    344e:	f8 01       	movw	r30, r16
    3450:	80 83       	st	Z, r24
    3452:	91 83       	std	Z+1, r25	; 0x01
    3454:	a2 83       	std	Z+2, r26	; 0x02
    3456:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3458:	fe 01       	movw	r30, r28
    345a:	eb 57       	subi	r30, 0x7B	; 123
    345c:	ff 4f       	sbci	r31, 0xFF	; 255
    345e:	60 81       	ld	r22, Z
    3460:	71 81       	ldd	r23, Z+1	; 0x01
    3462:	82 81       	ldd	r24, Z+2	; 0x02
    3464:	93 81       	ldd	r25, Z+3	; 0x03
    3466:	20 e0       	ldi	r18, 0x00	; 0
    3468:	30 e0       	ldi	r19, 0x00	; 0
    346a:	40 e8       	ldi	r20, 0x80	; 128
    346c:	5f e3       	ldi	r21, 0x3F	; 63
    346e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3472:	88 23       	and	r24, r24
    3474:	44 f4       	brge	.+16     	; 0x3486 <main+0xd0c>
		__ticks = 1;
    3476:	fe 01       	movw	r30, r28
    3478:	ed 57       	subi	r30, 0x7D	; 125
    347a:	ff 4f       	sbci	r31, 0xFF	; 255
    347c:	81 e0       	ldi	r24, 0x01	; 1
    347e:	90 e0       	ldi	r25, 0x00	; 0
    3480:	91 83       	std	Z+1, r25	; 0x01
    3482:	80 83       	st	Z, r24
    3484:	64 c0       	rjmp	.+200    	; 0x354e <main+0xdd4>
	else if (__tmp > 65535)
    3486:	fe 01       	movw	r30, r28
    3488:	eb 57       	subi	r30, 0x7B	; 123
    348a:	ff 4f       	sbci	r31, 0xFF	; 255
    348c:	60 81       	ld	r22, Z
    348e:	71 81       	ldd	r23, Z+1	; 0x01
    3490:	82 81       	ldd	r24, Z+2	; 0x02
    3492:	93 81       	ldd	r25, Z+3	; 0x03
    3494:	20 e0       	ldi	r18, 0x00	; 0
    3496:	3f ef       	ldi	r19, 0xFF	; 255
    3498:	4f e7       	ldi	r20, 0x7F	; 127
    349a:	57 e4       	ldi	r21, 0x47	; 71
    349c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    34a0:	18 16       	cp	r1, r24
    34a2:	0c f0       	brlt	.+2      	; 0x34a6 <main+0xd2c>
    34a4:	43 c0       	rjmp	.+134    	; 0x352c <main+0xdb2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34a6:	fe 01       	movw	r30, r28
    34a8:	e7 57       	subi	r30, 0x77	; 119
    34aa:	ff 4f       	sbci	r31, 0xFF	; 255
    34ac:	60 81       	ld	r22, Z
    34ae:	71 81       	ldd	r23, Z+1	; 0x01
    34b0:	82 81       	ldd	r24, Z+2	; 0x02
    34b2:	93 81       	ldd	r25, Z+3	; 0x03
    34b4:	20 e0       	ldi	r18, 0x00	; 0
    34b6:	30 e0       	ldi	r19, 0x00	; 0
    34b8:	40 e2       	ldi	r20, 0x20	; 32
    34ba:	51 e4       	ldi	r21, 0x41	; 65
    34bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34c0:	dc 01       	movw	r26, r24
    34c2:	cb 01       	movw	r24, r22
    34c4:	8e 01       	movw	r16, r28
    34c6:	0d 57       	subi	r16, 0x7D	; 125
    34c8:	1f 4f       	sbci	r17, 0xFF	; 255
    34ca:	bc 01       	movw	r22, r24
    34cc:	cd 01       	movw	r24, r26
    34ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34d2:	dc 01       	movw	r26, r24
    34d4:	cb 01       	movw	r24, r22
    34d6:	f8 01       	movw	r30, r16
    34d8:	91 83       	std	Z+1, r25	; 0x01
    34da:	80 83       	st	Z, r24
    34dc:	1f c0       	rjmp	.+62     	; 0x351c <main+0xda2>
    34de:	fe 01       	movw	r30, r28
    34e0:	ef 57       	subi	r30, 0x7F	; 127
    34e2:	ff 4f       	sbci	r31, 0xFF	; 255
    34e4:	88 ec       	ldi	r24, 0xC8	; 200
    34e6:	90 e0       	ldi	r25, 0x00	; 0
    34e8:	91 83       	std	Z+1, r25	; 0x01
    34ea:	80 83       	st	Z, r24
    34ec:	fe 01       	movw	r30, r28
    34ee:	ef 57       	subi	r30, 0x7F	; 127
    34f0:	ff 4f       	sbci	r31, 0xFF	; 255
    34f2:	80 81       	ld	r24, Z
    34f4:	91 81       	ldd	r25, Z+1	; 0x01
    34f6:	01 97       	sbiw	r24, 0x01	; 1
    34f8:	f1 f7       	brne	.-4      	; 0x34f6 <main+0xd7c>
    34fa:	fe 01       	movw	r30, r28
    34fc:	ef 57       	subi	r30, 0x7F	; 127
    34fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3500:	91 83       	std	Z+1, r25	; 0x01
    3502:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3504:	de 01       	movw	r26, r28
    3506:	ad 57       	subi	r26, 0x7D	; 125
    3508:	bf 4f       	sbci	r27, 0xFF	; 255
    350a:	fe 01       	movw	r30, r28
    350c:	ed 57       	subi	r30, 0x7D	; 125
    350e:	ff 4f       	sbci	r31, 0xFF	; 255
    3510:	80 81       	ld	r24, Z
    3512:	91 81       	ldd	r25, Z+1	; 0x01
    3514:	01 97       	sbiw	r24, 0x01	; 1
    3516:	11 96       	adiw	r26, 0x01	; 1
    3518:	9c 93       	st	X, r25
    351a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    351c:	fe 01       	movw	r30, r28
    351e:	ed 57       	subi	r30, 0x7D	; 125
    3520:	ff 4f       	sbci	r31, 0xFF	; 255
    3522:	80 81       	ld	r24, Z
    3524:	91 81       	ldd	r25, Z+1	; 0x01
    3526:	00 97       	sbiw	r24, 0x00	; 0
    3528:	d1 f6       	brne	.-76     	; 0x34de <main+0xd64>
    352a:	27 c0       	rjmp	.+78     	; 0x357a <main+0xe00>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    352c:	8e 01       	movw	r16, r28
    352e:	0d 57       	subi	r16, 0x7D	; 125
    3530:	1f 4f       	sbci	r17, 0xFF	; 255
    3532:	fe 01       	movw	r30, r28
    3534:	eb 57       	subi	r30, 0x7B	; 123
    3536:	ff 4f       	sbci	r31, 0xFF	; 255
    3538:	60 81       	ld	r22, Z
    353a:	71 81       	ldd	r23, Z+1	; 0x01
    353c:	82 81       	ldd	r24, Z+2	; 0x02
    353e:	93 81       	ldd	r25, Z+3	; 0x03
    3540:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3544:	dc 01       	movw	r26, r24
    3546:	cb 01       	movw	r24, r22
    3548:	f8 01       	movw	r30, r16
    354a:	91 83       	std	Z+1, r25	; 0x01
    354c:	80 83       	st	Z, r24
    354e:	de 01       	movw	r26, r28
    3550:	a1 58       	subi	r26, 0x81	; 129
    3552:	bf 4f       	sbci	r27, 0xFF	; 255
    3554:	fe 01       	movw	r30, r28
    3556:	ed 57       	subi	r30, 0x7D	; 125
    3558:	ff 4f       	sbci	r31, 0xFF	; 255
    355a:	80 81       	ld	r24, Z
    355c:	91 81       	ldd	r25, Z+1	; 0x01
    355e:	8d 93       	st	X+, r24
    3560:	9c 93       	st	X, r25
    3562:	fe 01       	movw	r30, r28
    3564:	e1 58       	subi	r30, 0x81	; 129
    3566:	ff 4f       	sbci	r31, 0xFF	; 255
    3568:	80 81       	ld	r24, Z
    356a:	91 81       	ldd	r25, Z+1	; 0x01
    356c:	01 97       	sbiw	r24, 0x01	; 1
    356e:	f1 f7       	brne	.-4      	; 0x356c <main+0xdf2>
    3570:	fe 01       	movw	r30, r28
    3572:	e1 58       	subi	r30, 0x81	; 129
    3574:	ff 4f       	sbci	r31, 0xFF	; 255
    3576:	91 83       	std	Z+1, r25	; 0x01
    3578:	80 83       	st	Z, r24
  _delay_ms(2000);
  LCD_voidClear();
    357a:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
  DIO_u8SetPinValue(DIO_u8_PORTA,DIO_u8_PIN0,DIO_u8_HIGH);
    357e:	80 e0       	ldi	r24, 0x00	; 0
    3580:	60 e0       	ldi	r22, 0x00	; 0
    3582:	41 e0       	ldi	r20, 0x01	; 1
    3584:	0e 94 96 07 	call	0xf2c	; 0xf2c <DIO_u8SetPinValue>




  //FRAME 3
  LCD_u8_GoTo_XY(0,4);
    3588:	80 e0       	ldi	r24, 0x00	; 0
    358a:	64 e0       	ldi	r22, 0x04	; 4
    358c:	0e 94 67 12 	call	0x24ce	; 0x24ce <LCD_u8_GoTo_XY>
  LCD_voidWriteString("I Can Dance");
    3590:	88 e8       	ldi	r24, 0x88	; 136
    3592:	90 e0       	ldi	r25, 0x00	; 0
    3594:	0e 94 30 12 	call	0x2460	; 0x2460 <LCD_voidWriteString>
  LCD_voidSendSpecialChar(0,1,8,Hamokshastanding);
    3598:	9e 01       	movw	r18, r28
    359a:	21 53       	subi	r18, 0x31	; 49
    359c:	3f 4f       	sbci	r19, 0xFF	; 255
    359e:	80 e0       	ldi	r24, 0x00	; 0
    35a0:	61 e0       	ldi	r22, 0x01	; 1
    35a2:	48 e0       	ldi	r20, 0x08	; 8
    35a4:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    35a8:	fe 01       	movw	r30, r28
    35aa:	e5 58       	subi	r30, 0x85	; 133
    35ac:	ff 4f       	sbci	r31, 0xFF	; 255
    35ae:	80 e0       	ldi	r24, 0x00	; 0
    35b0:	90 e0       	ldi	r25, 0x00	; 0
    35b2:	aa ef       	ldi	r26, 0xFA	; 250
    35b4:	b4 e4       	ldi	r27, 0x44	; 68
    35b6:	80 83       	st	Z, r24
    35b8:	91 83       	std	Z+1, r25	; 0x01
    35ba:	a2 83       	std	Z+2, r26	; 0x02
    35bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35be:	8e 01       	movw	r16, r28
    35c0:	09 58       	subi	r16, 0x89	; 137
    35c2:	1f 4f       	sbci	r17, 0xFF	; 255
    35c4:	fe 01       	movw	r30, r28
    35c6:	e5 58       	subi	r30, 0x85	; 133
    35c8:	ff 4f       	sbci	r31, 0xFF	; 255
    35ca:	60 81       	ld	r22, Z
    35cc:	71 81       	ldd	r23, Z+1	; 0x01
    35ce:	82 81       	ldd	r24, Z+2	; 0x02
    35d0:	93 81       	ldd	r25, Z+3	; 0x03
    35d2:	20 e0       	ldi	r18, 0x00	; 0
    35d4:	30 e0       	ldi	r19, 0x00	; 0
    35d6:	4a ef       	ldi	r20, 0xFA	; 250
    35d8:	54 e4       	ldi	r21, 0x44	; 68
    35da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35de:	dc 01       	movw	r26, r24
    35e0:	cb 01       	movw	r24, r22
    35e2:	f8 01       	movw	r30, r16
    35e4:	80 83       	st	Z, r24
    35e6:	91 83       	std	Z+1, r25	; 0x01
    35e8:	a2 83       	std	Z+2, r26	; 0x02
    35ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35ec:	fe 01       	movw	r30, r28
    35ee:	e9 58       	subi	r30, 0x89	; 137
    35f0:	ff 4f       	sbci	r31, 0xFF	; 255
    35f2:	60 81       	ld	r22, Z
    35f4:	71 81       	ldd	r23, Z+1	; 0x01
    35f6:	82 81       	ldd	r24, Z+2	; 0x02
    35f8:	93 81       	ldd	r25, Z+3	; 0x03
    35fa:	20 e0       	ldi	r18, 0x00	; 0
    35fc:	30 e0       	ldi	r19, 0x00	; 0
    35fe:	40 e8       	ldi	r20, 0x80	; 128
    3600:	5f e3       	ldi	r21, 0x3F	; 63
    3602:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3606:	88 23       	and	r24, r24
    3608:	44 f4       	brge	.+16     	; 0x361a <main+0xea0>
		__ticks = 1;
    360a:	fe 01       	movw	r30, r28
    360c:	eb 58       	subi	r30, 0x8B	; 139
    360e:	ff 4f       	sbci	r31, 0xFF	; 255
    3610:	81 e0       	ldi	r24, 0x01	; 1
    3612:	90 e0       	ldi	r25, 0x00	; 0
    3614:	91 83       	std	Z+1, r25	; 0x01
    3616:	80 83       	st	Z, r24
    3618:	64 c0       	rjmp	.+200    	; 0x36e2 <main+0xf68>
	else if (__tmp > 65535)
    361a:	fe 01       	movw	r30, r28
    361c:	e9 58       	subi	r30, 0x89	; 137
    361e:	ff 4f       	sbci	r31, 0xFF	; 255
    3620:	60 81       	ld	r22, Z
    3622:	71 81       	ldd	r23, Z+1	; 0x01
    3624:	82 81       	ldd	r24, Z+2	; 0x02
    3626:	93 81       	ldd	r25, Z+3	; 0x03
    3628:	20 e0       	ldi	r18, 0x00	; 0
    362a:	3f ef       	ldi	r19, 0xFF	; 255
    362c:	4f e7       	ldi	r20, 0x7F	; 127
    362e:	57 e4       	ldi	r21, 0x47	; 71
    3630:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3634:	18 16       	cp	r1, r24
    3636:	0c f0       	brlt	.+2      	; 0x363a <main+0xec0>
    3638:	43 c0       	rjmp	.+134    	; 0x36c0 <main+0xf46>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    363a:	fe 01       	movw	r30, r28
    363c:	e5 58       	subi	r30, 0x85	; 133
    363e:	ff 4f       	sbci	r31, 0xFF	; 255
    3640:	60 81       	ld	r22, Z
    3642:	71 81       	ldd	r23, Z+1	; 0x01
    3644:	82 81       	ldd	r24, Z+2	; 0x02
    3646:	93 81       	ldd	r25, Z+3	; 0x03
    3648:	20 e0       	ldi	r18, 0x00	; 0
    364a:	30 e0       	ldi	r19, 0x00	; 0
    364c:	40 e2       	ldi	r20, 0x20	; 32
    364e:	51 e4       	ldi	r21, 0x41	; 65
    3650:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3654:	dc 01       	movw	r26, r24
    3656:	cb 01       	movw	r24, r22
    3658:	8e 01       	movw	r16, r28
    365a:	0b 58       	subi	r16, 0x8B	; 139
    365c:	1f 4f       	sbci	r17, 0xFF	; 255
    365e:	bc 01       	movw	r22, r24
    3660:	cd 01       	movw	r24, r26
    3662:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3666:	dc 01       	movw	r26, r24
    3668:	cb 01       	movw	r24, r22
    366a:	f8 01       	movw	r30, r16
    366c:	91 83       	std	Z+1, r25	; 0x01
    366e:	80 83       	st	Z, r24
    3670:	1f c0       	rjmp	.+62     	; 0x36b0 <main+0xf36>
    3672:	fe 01       	movw	r30, r28
    3674:	ed 58       	subi	r30, 0x8D	; 141
    3676:	ff 4f       	sbci	r31, 0xFF	; 255
    3678:	88 ec       	ldi	r24, 0xC8	; 200
    367a:	90 e0       	ldi	r25, 0x00	; 0
    367c:	91 83       	std	Z+1, r25	; 0x01
    367e:	80 83       	st	Z, r24
    3680:	fe 01       	movw	r30, r28
    3682:	ed 58       	subi	r30, 0x8D	; 141
    3684:	ff 4f       	sbci	r31, 0xFF	; 255
    3686:	80 81       	ld	r24, Z
    3688:	91 81       	ldd	r25, Z+1	; 0x01
    368a:	01 97       	sbiw	r24, 0x01	; 1
    368c:	f1 f7       	brne	.-4      	; 0x368a <main+0xf10>
    368e:	fe 01       	movw	r30, r28
    3690:	ed 58       	subi	r30, 0x8D	; 141
    3692:	ff 4f       	sbci	r31, 0xFF	; 255
    3694:	91 83       	std	Z+1, r25	; 0x01
    3696:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3698:	de 01       	movw	r26, r28
    369a:	ab 58       	subi	r26, 0x8B	; 139
    369c:	bf 4f       	sbci	r27, 0xFF	; 255
    369e:	fe 01       	movw	r30, r28
    36a0:	eb 58       	subi	r30, 0x8B	; 139
    36a2:	ff 4f       	sbci	r31, 0xFF	; 255
    36a4:	80 81       	ld	r24, Z
    36a6:	91 81       	ldd	r25, Z+1	; 0x01
    36a8:	01 97       	sbiw	r24, 0x01	; 1
    36aa:	11 96       	adiw	r26, 0x01	; 1
    36ac:	9c 93       	st	X, r25
    36ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36b0:	fe 01       	movw	r30, r28
    36b2:	eb 58       	subi	r30, 0x8B	; 139
    36b4:	ff 4f       	sbci	r31, 0xFF	; 255
    36b6:	80 81       	ld	r24, Z
    36b8:	91 81       	ldd	r25, Z+1	; 0x01
    36ba:	00 97       	sbiw	r24, 0x00	; 0
    36bc:	d1 f6       	brne	.-76     	; 0x3672 <main+0xef8>
    36be:	28 c0       	rjmp	.+80     	; 0x3710 <main+0xf96>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36c0:	8e 01       	movw	r16, r28
    36c2:	0b 58       	subi	r16, 0x8B	; 139
    36c4:	1f 4f       	sbci	r17, 0xFF	; 255
    36c6:	fe 01       	movw	r30, r28
    36c8:	e9 58       	subi	r30, 0x89	; 137
    36ca:	ff 4f       	sbci	r31, 0xFF	; 255
    36cc:	60 81       	ld	r22, Z
    36ce:	71 81       	ldd	r23, Z+1	; 0x01
    36d0:	82 81       	ldd	r24, Z+2	; 0x02
    36d2:	93 81       	ldd	r25, Z+3	; 0x03
    36d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36d8:	dc 01       	movw	r26, r24
    36da:	cb 01       	movw	r24, r22
    36dc:	f8 01       	movw	r30, r16
    36de:	91 83       	std	Z+1, r25	; 0x01
    36e0:	80 83       	st	Z, r24
    36e2:	de 01       	movw	r26, r28
    36e4:	af 58       	subi	r26, 0x8F	; 143
    36e6:	bf 4f       	sbci	r27, 0xFF	; 255
    36e8:	fe 01       	movw	r30, r28
    36ea:	eb 58       	subi	r30, 0x8B	; 139
    36ec:	ff 4f       	sbci	r31, 0xFF	; 255
    36ee:	80 81       	ld	r24, Z
    36f0:	91 81       	ldd	r25, Z+1	; 0x01
    36f2:	11 96       	adiw	r26, 0x01	; 1
    36f4:	9c 93       	st	X, r25
    36f6:	8e 93       	st	-X, r24
    36f8:	fe 01       	movw	r30, r28
    36fa:	ef 58       	subi	r30, 0x8F	; 143
    36fc:	ff 4f       	sbci	r31, 0xFF	; 255
    36fe:	80 81       	ld	r24, Z
    3700:	91 81       	ldd	r25, Z+1	; 0x01
    3702:	01 97       	sbiw	r24, 0x01	; 1
    3704:	f1 f7       	brne	.-4      	; 0x3702 <main+0xf88>
    3706:	fe 01       	movw	r30, r28
    3708:	ef 58       	subi	r30, 0x8F	; 143
    370a:	ff 4f       	sbci	r31, 0xFF	; 255
    370c:	91 83       	std	Z+1, r25	; 0x01
    370e:	80 83       	st	Z, r24
  _delay_ms(2000);
  for(u8 i =0 ; i<10 ;i++)
    3710:	fe 01       	movw	r30, r28
    3712:	eb 53       	subi	r30, 0x3B	; 59
    3714:	ff 4f       	sbci	r31, 0xFF	; 255
    3716:	10 82       	st	Z, r1
    3718:	bf c4       	rjmp	.+2430   	; 0x4098 <main+0x191e>
  {
	  LCD_voidClear();
    371a:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
	  LCD_voidSendSpecialChar(1,1,8,HamokshaHandsUp);
    371e:	9e 01       	movw	r18, r28
    3720:	21 51       	subi	r18, 0x11	; 17
    3722:	3f 4f       	sbci	r19, 0xFF	; 255
    3724:	81 e0       	ldi	r24, 0x01	; 1
    3726:	61 e0       	ldi	r22, 0x01	; 1
    3728:	48 e0       	ldi	r20, 0x08	; 8
    372a:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    372e:	fe 01       	movw	r30, r28
    3730:	e3 59       	subi	r30, 0x93	; 147
    3732:	ff 4f       	sbci	r31, 0xFF	; 255
    3734:	80 e0       	ldi	r24, 0x00	; 0
    3736:	90 e0       	ldi	r25, 0x00	; 0
    3738:	a8 ec       	ldi	r26, 0xC8	; 200
    373a:	b3 e4       	ldi	r27, 0x43	; 67
    373c:	80 83       	st	Z, r24
    373e:	91 83       	std	Z+1, r25	; 0x01
    3740:	a2 83       	std	Z+2, r26	; 0x02
    3742:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3744:	8e 01       	movw	r16, r28
    3746:	07 59       	subi	r16, 0x97	; 151
    3748:	1f 4f       	sbci	r17, 0xFF	; 255
    374a:	fe 01       	movw	r30, r28
    374c:	e3 59       	subi	r30, 0x93	; 147
    374e:	ff 4f       	sbci	r31, 0xFF	; 255
    3750:	60 81       	ld	r22, Z
    3752:	71 81       	ldd	r23, Z+1	; 0x01
    3754:	82 81       	ldd	r24, Z+2	; 0x02
    3756:	93 81       	ldd	r25, Z+3	; 0x03
    3758:	20 e0       	ldi	r18, 0x00	; 0
    375a:	30 e0       	ldi	r19, 0x00	; 0
    375c:	4a ef       	ldi	r20, 0xFA	; 250
    375e:	54 e4       	ldi	r21, 0x44	; 68
    3760:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3764:	dc 01       	movw	r26, r24
    3766:	cb 01       	movw	r24, r22
    3768:	f8 01       	movw	r30, r16
    376a:	80 83       	st	Z, r24
    376c:	91 83       	std	Z+1, r25	; 0x01
    376e:	a2 83       	std	Z+2, r26	; 0x02
    3770:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3772:	fe 01       	movw	r30, r28
    3774:	e7 59       	subi	r30, 0x97	; 151
    3776:	ff 4f       	sbci	r31, 0xFF	; 255
    3778:	60 81       	ld	r22, Z
    377a:	71 81       	ldd	r23, Z+1	; 0x01
    377c:	82 81       	ldd	r24, Z+2	; 0x02
    377e:	93 81       	ldd	r25, Z+3	; 0x03
    3780:	20 e0       	ldi	r18, 0x00	; 0
    3782:	30 e0       	ldi	r19, 0x00	; 0
    3784:	40 e8       	ldi	r20, 0x80	; 128
    3786:	5f e3       	ldi	r21, 0x3F	; 63
    3788:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    378c:	88 23       	and	r24, r24
    378e:	44 f4       	brge	.+16     	; 0x37a0 <main+0x1026>
		__ticks = 1;
    3790:	fe 01       	movw	r30, r28
    3792:	e9 59       	subi	r30, 0x99	; 153
    3794:	ff 4f       	sbci	r31, 0xFF	; 255
    3796:	81 e0       	ldi	r24, 0x01	; 1
    3798:	90 e0       	ldi	r25, 0x00	; 0
    379a:	91 83       	std	Z+1, r25	; 0x01
    379c:	80 83       	st	Z, r24
    379e:	64 c0       	rjmp	.+200    	; 0x3868 <main+0x10ee>
	else if (__tmp > 65535)
    37a0:	fe 01       	movw	r30, r28
    37a2:	e7 59       	subi	r30, 0x97	; 151
    37a4:	ff 4f       	sbci	r31, 0xFF	; 255
    37a6:	60 81       	ld	r22, Z
    37a8:	71 81       	ldd	r23, Z+1	; 0x01
    37aa:	82 81       	ldd	r24, Z+2	; 0x02
    37ac:	93 81       	ldd	r25, Z+3	; 0x03
    37ae:	20 e0       	ldi	r18, 0x00	; 0
    37b0:	3f ef       	ldi	r19, 0xFF	; 255
    37b2:	4f e7       	ldi	r20, 0x7F	; 127
    37b4:	57 e4       	ldi	r21, 0x47	; 71
    37b6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    37ba:	18 16       	cp	r1, r24
    37bc:	0c f0       	brlt	.+2      	; 0x37c0 <main+0x1046>
    37be:	43 c0       	rjmp	.+134    	; 0x3846 <main+0x10cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37c0:	fe 01       	movw	r30, r28
    37c2:	e3 59       	subi	r30, 0x93	; 147
    37c4:	ff 4f       	sbci	r31, 0xFF	; 255
    37c6:	60 81       	ld	r22, Z
    37c8:	71 81       	ldd	r23, Z+1	; 0x01
    37ca:	82 81       	ldd	r24, Z+2	; 0x02
    37cc:	93 81       	ldd	r25, Z+3	; 0x03
    37ce:	20 e0       	ldi	r18, 0x00	; 0
    37d0:	30 e0       	ldi	r19, 0x00	; 0
    37d2:	40 e2       	ldi	r20, 0x20	; 32
    37d4:	51 e4       	ldi	r21, 0x41	; 65
    37d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37da:	dc 01       	movw	r26, r24
    37dc:	cb 01       	movw	r24, r22
    37de:	8e 01       	movw	r16, r28
    37e0:	09 59       	subi	r16, 0x99	; 153
    37e2:	1f 4f       	sbci	r17, 0xFF	; 255
    37e4:	bc 01       	movw	r22, r24
    37e6:	cd 01       	movw	r24, r26
    37e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37ec:	dc 01       	movw	r26, r24
    37ee:	cb 01       	movw	r24, r22
    37f0:	f8 01       	movw	r30, r16
    37f2:	91 83       	std	Z+1, r25	; 0x01
    37f4:	80 83       	st	Z, r24
    37f6:	1f c0       	rjmp	.+62     	; 0x3836 <main+0x10bc>
    37f8:	fe 01       	movw	r30, r28
    37fa:	eb 59       	subi	r30, 0x9B	; 155
    37fc:	ff 4f       	sbci	r31, 0xFF	; 255
    37fe:	88 ec       	ldi	r24, 0xC8	; 200
    3800:	90 e0       	ldi	r25, 0x00	; 0
    3802:	91 83       	std	Z+1, r25	; 0x01
    3804:	80 83       	st	Z, r24
    3806:	fe 01       	movw	r30, r28
    3808:	eb 59       	subi	r30, 0x9B	; 155
    380a:	ff 4f       	sbci	r31, 0xFF	; 255
    380c:	80 81       	ld	r24, Z
    380e:	91 81       	ldd	r25, Z+1	; 0x01
    3810:	01 97       	sbiw	r24, 0x01	; 1
    3812:	f1 f7       	brne	.-4      	; 0x3810 <main+0x1096>
    3814:	fe 01       	movw	r30, r28
    3816:	eb 59       	subi	r30, 0x9B	; 155
    3818:	ff 4f       	sbci	r31, 0xFF	; 255
    381a:	91 83       	std	Z+1, r25	; 0x01
    381c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    381e:	de 01       	movw	r26, r28
    3820:	a9 59       	subi	r26, 0x99	; 153
    3822:	bf 4f       	sbci	r27, 0xFF	; 255
    3824:	fe 01       	movw	r30, r28
    3826:	e9 59       	subi	r30, 0x99	; 153
    3828:	ff 4f       	sbci	r31, 0xFF	; 255
    382a:	80 81       	ld	r24, Z
    382c:	91 81       	ldd	r25, Z+1	; 0x01
    382e:	01 97       	sbiw	r24, 0x01	; 1
    3830:	11 96       	adiw	r26, 0x01	; 1
    3832:	9c 93       	st	X, r25
    3834:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3836:	fe 01       	movw	r30, r28
    3838:	e9 59       	subi	r30, 0x99	; 153
    383a:	ff 4f       	sbci	r31, 0xFF	; 255
    383c:	80 81       	ld	r24, Z
    383e:	91 81       	ldd	r25, Z+1	; 0x01
    3840:	00 97       	sbiw	r24, 0x00	; 0
    3842:	d1 f6       	brne	.-76     	; 0x37f8 <main+0x107e>
    3844:	27 c0       	rjmp	.+78     	; 0x3894 <main+0x111a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3846:	8e 01       	movw	r16, r28
    3848:	09 59       	subi	r16, 0x99	; 153
    384a:	1f 4f       	sbci	r17, 0xFF	; 255
    384c:	fe 01       	movw	r30, r28
    384e:	e7 59       	subi	r30, 0x97	; 151
    3850:	ff 4f       	sbci	r31, 0xFF	; 255
    3852:	60 81       	ld	r22, Z
    3854:	71 81       	ldd	r23, Z+1	; 0x01
    3856:	82 81       	ldd	r24, Z+2	; 0x02
    3858:	93 81       	ldd	r25, Z+3	; 0x03
    385a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    385e:	dc 01       	movw	r26, r24
    3860:	cb 01       	movw	r24, r22
    3862:	f8 01       	movw	r30, r16
    3864:	91 83       	std	Z+1, r25	; 0x01
    3866:	80 83       	st	Z, r24
    3868:	de 01       	movw	r26, r28
    386a:	ad 59       	subi	r26, 0x9D	; 157
    386c:	bf 4f       	sbci	r27, 0xFF	; 255
    386e:	fe 01       	movw	r30, r28
    3870:	e9 59       	subi	r30, 0x99	; 153
    3872:	ff 4f       	sbci	r31, 0xFF	; 255
    3874:	80 81       	ld	r24, Z
    3876:	91 81       	ldd	r25, Z+1	; 0x01
    3878:	8d 93       	st	X+, r24
    387a:	9c 93       	st	X, r25
    387c:	fe 01       	movw	r30, r28
    387e:	ed 59       	subi	r30, 0x9D	; 157
    3880:	ff 4f       	sbci	r31, 0xFF	; 255
    3882:	80 81       	ld	r24, Z
    3884:	91 81       	ldd	r25, Z+1	; 0x01
    3886:	01 97       	sbiw	r24, 0x01	; 1
    3888:	f1 f7       	brne	.-4      	; 0x3886 <main+0x110c>
    388a:	fe 01       	movw	r30, r28
    388c:	ed 59       	subi	r30, 0x9D	; 157
    388e:	ff 4f       	sbci	r31, 0xFF	; 255
    3890:	91 83       	std	Z+1, r25	; 0x01
    3892:	80 83       	st	Z, r24
	  _delay_ms(400);
	  LCD_voidClear();
    3894:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
	  LCD_voidSendSpecialChar(0,1,8,Hamokshastanding);
    3898:	9e 01       	movw	r18, r28
    389a:	21 53       	subi	r18, 0x31	; 49
    389c:	3f 4f       	sbci	r19, 0xFF	; 255
    389e:	80 e0       	ldi	r24, 0x00	; 0
    38a0:	61 e0       	ldi	r22, 0x01	; 1
    38a2:	48 e0       	ldi	r20, 0x08	; 8
    38a4:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    38a8:	fe 01       	movw	r30, r28
    38aa:	e1 5a       	subi	r30, 0xA1	; 161
    38ac:	ff 4f       	sbci	r31, 0xFF	; 255
    38ae:	80 e0       	ldi	r24, 0x00	; 0
    38b0:	90 e0       	ldi	r25, 0x00	; 0
    38b2:	a8 ec       	ldi	r26, 0xC8	; 200
    38b4:	b3 e4       	ldi	r27, 0x43	; 67
    38b6:	80 83       	st	Z, r24
    38b8:	91 83       	std	Z+1, r25	; 0x01
    38ba:	a2 83       	std	Z+2, r26	; 0x02
    38bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38be:	8e 01       	movw	r16, r28
    38c0:	05 5a       	subi	r16, 0xA5	; 165
    38c2:	1f 4f       	sbci	r17, 0xFF	; 255
    38c4:	fe 01       	movw	r30, r28
    38c6:	e1 5a       	subi	r30, 0xA1	; 161
    38c8:	ff 4f       	sbci	r31, 0xFF	; 255
    38ca:	60 81       	ld	r22, Z
    38cc:	71 81       	ldd	r23, Z+1	; 0x01
    38ce:	82 81       	ldd	r24, Z+2	; 0x02
    38d0:	93 81       	ldd	r25, Z+3	; 0x03
    38d2:	20 e0       	ldi	r18, 0x00	; 0
    38d4:	30 e0       	ldi	r19, 0x00	; 0
    38d6:	4a ef       	ldi	r20, 0xFA	; 250
    38d8:	54 e4       	ldi	r21, 0x44	; 68
    38da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38de:	dc 01       	movw	r26, r24
    38e0:	cb 01       	movw	r24, r22
    38e2:	f8 01       	movw	r30, r16
    38e4:	80 83       	st	Z, r24
    38e6:	91 83       	std	Z+1, r25	; 0x01
    38e8:	a2 83       	std	Z+2, r26	; 0x02
    38ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    38ec:	fe 01       	movw	r30, r28
    38ee:	e5 5a       	subi	r30, 0xA5	; 165
    38f0:	ff 4f       	sbci	r31, 0xFF	; 255
    38f2:	60 81       	ld	r22, Z
    38f4:	71 81       	ldd	r23, Z+1	; 0x01
    38f6:	82 81       	ldd	r24, Z+2	; 0x02
    38f8:	93 81       	ldd	r25, Z+3	; 0x03
    38fa:	20 e0       	ldi	r18, 0x00	; 0
    38fc:	30 e0       	ldi	r19, 0x00	; 0
    38fe:	40 e8       	ldi	r20, 0x80	; 128
    3900:	5f e3       	ldi	r21, 0x3F	; 63
    3902:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3906:	88 23       	and	r24, r24
    3908:	44 f4       	brge	.+16     	; 0x391a <main+0x11a0>
		__ticks = 1;
    390a:	fe 01       	movw	r30, r28
    390c:	e7 5a       	subi	r30, 0xA7	; 167
    390e:	ff 4f       	sbci	r31, 0xFF	; 255
    3910:	81 e0       	ldi	r24, 0x01	; 1
    3912:	90 e0       	ldi	r25, 0x00	; 0
    3914:	91 83       	std	Z+1, r25	; 0x01
    3916:	80 83       	st	Z, r24
    3918:	64 c0       	rjmp	.+200    	; 0x39e2 <main+0x1268>
	else if (__tmp > 65535)
    391a:	fe 01       	movw	r30, r28
    391c:	e5 5a       	subi	r30, 0xA5	; 165
    391e:	ff 4f       	sbci	r31, 0xFF	; 255
    3920:	60 81       	ld	r22, Z
    3922:	71 81       	ldd	r23, Z+1	; 0x01
    3924:	82 81       	ldd	r24, Z+2	; 0x02
    3926:	93 81       	ldd	r25, Z+3	; 0x03
    3928:	20 e0       	ldi	r18, 0x00	; 0
    392a:	3f ef       	ldi	r19, 0xFF	; 255
    392c:	4f e7       	ldi	r20, 0x7F	; 127
    392e:	57 e4       	ldi	r21, 0x47	; 71
    3930:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3934:	18 16       	cp	r1, r24
    3936:	0c f0       	brlt	.+2      	; 0x393a <main+0x11c0>
    3938:	43 c0       	rjmp	.+134    	; 0x39c0 <main+0x1246>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    393a:	fe 01       	movw	r30, r28
    393c:	e1 5a       	subi	r30, 0xA1	; 161
    393e:	ff 4f       	sbci	r31, 0xFF	; 255
    3940:	60 81       	ld	r22, Z
    3942:	71 81       	ldd	r23, Z+1	; 0x01
    3944:	82 81       	ldd	r24, Z+2	; 0x02
    3946:	93 81       	ldd	r25, Z+3	; 0x03
    3948:	20 e0       	ldi	r18, 0x00	; 0
    394a:	30 e0       	ldi	r19, 0x00	; 0
    394c:	40 e2       	ldi	r20, 0x20	; 32
    394e:	51 e4       	ldi	r21, 0x41	; 65
    3950:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3954:	dc 01       	movw	r26, r24
    3956:	cb 01       	movw	r24, r22
    3958:	8e 01       	movw	r16, r28
    395a:	07 5a       	subi	r16, 0xA7	; 167
    395c:	1f 4f       	sbci	r17, 0xFF	; 255
    395e:	bc 01       	movw	r22, r24
    3960:	cd 01       	movw	r24, r26
    3962:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3966:	dc 01       	movw	r26, r24
    3968:	cb 01       	movw	r24, r22
    396a:	f8 01       	movw	r30, r16
    396c:	91 83       	std	Z+1, r25	; 0x01
    396e:	80 83       	st	Z, r24
    3970:	1f c0       	rjmp	.+62     	; 0x39b0 <main+0x1236>
    3972:	fe 01       	movw	r30, r28
    3974:	e9 5a       	subi	r30, 0xA9	; 169
    3976:	ff 4f       	sbci	r31, 0xFF	; 255
    3978:	88 ec       	ldi	r24, 0xC8	; 200
    397a:	90 e0       	ldi	r25, 0x00	; 0
    397c:	91 83       	std	Z+1, r25	; 0x01
    397e:	80 83       	st	Z, r24
    3980:	fe 01       	movw	r30, r28
    3982:	e9 5a       	subi	r30, 0xA9	; 169
    3984:	ff 4f       	sbci	r31, 0xFF	; 255
    3986:	80 81       	ld	r24, Z
    3988:	91 81       	ldd	r25, Z+1	; 0x01
    398a:	01 97       	sbiw	r24, 0x01	; 1
    398c:	f1 f7       	brne	.-4      	; 0x398a <main+0x1210>
    398e:	fe 01       	movw	r30, r28
    3990:	e9 5a       	subi	r30, 0xA9	; 169
    3992:	ff 4f       	sbci	r31, 0xFF	; 255
    3994:	91 83       	std	Z+1, r25	; 0x01
    3996:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3998:	de 01       	movw	r26, r28
    399a:	a7 5a       	subi	r26, 0xA7	; 167
    399c:	bf 4f       	sbci	r27, 0xFF	; 255
    399e:	fe 01       	movw	r30, r28
    39a0:	e7 5a       	subi	r30, 0xA7	; 167
    39a2:	ff 4f       	sbci	r31, 0xFF	; 255
    39a4:	80 81       	ld	r24, Z
    39a6:	91 81       	ldd	r25, Z+1	; 0x01
    39a8:	01 97       	sbiw	r24, 0x01	; 1
    39aa:	11 96       	adiw	r26, 0x01	; 1
    39ac:	9c 93       	st	X, r25
    39ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39b0:	fe 01       	movw	r30, r28
    39b2:	e7 5a       	subi	r30, 0xA7	; 167
    39b4:	ff 4f       	sbci	r31, 0xFF	; 255
    39b6:	80 81       	ld	r24, Z
    39b8:	91 81       	ldd	r25, Z+1	; 0x01
    39ba:	00 97       	sbiw	r24, 0x00	; 0
    39bc:	d1 f6       	brne	.-76     	; 0x3972 <main+0x11f8>
    39be:	27 c0       	rjmp	.+78     	; 0x3a0e <main+0x1294>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39c0:	8e 01       	movw	r16, r28
    39c2:	07 5a       	subi	r16, 0xA7	; 167
    39c4:	1f 4f       	sbci	r17, 0xFF	; 255
    39c6:	fe 01       	movw	r30, r28
    39c8:	e5 5a       	subi	r30, 0xA5	; 165
    39ca:	ff 4f       	sbci	r31, 0xFF	; 255
    39cc:	60 81       	ld	r22, Z
    39ce:	71 81       	ldd	r23, Z+1	; 0x01
    39d0:	82 81       	ldd	r24, Z+2	; 0x02
    39d2:	93 81       	ldd	r25, Z+3	; 0x03
    39d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39d8:	dc 01       	movw	r26, r24
    39da:	cb 01       	movw	r24, r22
    39dc:	f8 01       	movw	r30, r16
    39de:	91 83       	std	Z+1, r25	; 0x01
    39e0:	80 83       	st	Z, r24
    39e2:	de 01       	movw	r26, r28
    39e4:	ab 5a       	subi	r26, 0xAB	; 171
    39e6:	bf 4f       	sbci	r27, 0xFF	; 255
    39e8:	fe 01       	movw	r30, r28
    39ea:	e7 5a       	subi	r30, 0xA7	; 167
    39ec:	ff 4f       	sbci	r31, 0xFF	; 255
    39ee:	80 81       	ld	r24, Z
    39f0:	91 81       	ldd	r25, Z+1	; 0x01
    39f2:	8d 93       	st	X+, r24
    39f4:	9c 93       	st	X, r25
    39f6:	fe 01       	movw	r30, r28
    39f8:	eb 5a       	subi	r30, 0xAB	; 171
    39fa:	ff 4f       	sbci	r31, 0xFF	; 255
    39fc:	80 81       	ld	r24, Z
    39fe:	91 81       	ldd	r25, Z+1	; 0x01
    3a00:	01 97       	sbiw	r24, 0x01	; 1
    3a02:	f1 f7       	brne	.-4      	; 0x3a00 <main+0x1286>
    3a04:	fe 01       	movw	r30, r28
    3a06:	eb 5a       	subi	r30, 0xAB	; 171
    3a08:	ff 4f       	sbci	r31, 0xFF	; 255
    3a0a:	91 83       	std	Z+1, r25	; 0x01
    3a0c:	80 83       	st	Z, r24
	  _delay_ms(400);
	  LCD_voidClear();
    3a0e:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
	  LCD_voidSendSpecialChar(2,1,8,HamokshaGoingRight);
    3a12:	9e 01       	movw	r18, r28
    3a14:	21 50       	subi	r18, 0x01	; 1
    3a16:	3f 4f       	sbci	r19, 0xFF	; 255
    3a18:	82 e0       	ldi	r24, 0x02	; 2
    3a1a:	61 e0       	ldi	r22, 0x01	; 1
    3a1c:	48 e0       	ldi	r20, 0x08	; 8
    3a1e:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    3a22:	fe 01       	movw	r30, r28
    3a24:	ef 5a       	subi	r30, 0xAF	; 175
    3a26:	ff 4f       	sbci	r31, 0xFF	; 255
    3a28:	80 e0       	ldi	r24, 0x00	; 0
    3a2a:	90 e0       	ldi	r25, 0x00	; 0
    3a2c:	a8 ec       	ldi	r26, 0xC8	; 200
    3a2e:	b3 e4       	ldi	r27, 0x43	; 67
    3a30:	80 83       	st	Z, r24
    3a32:	91 83       	std	Z+1, r25	; 0x01
    3a34:	a2 83       	std	Z+2, r26	; 0x02
    3a36:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a38:	8e 01       	movw	r16, r28
    3a3a:	03 5b       	subi	r16, 0xB3	; 179
    3a3c:	1f 4f       	sbci	r17, 0xFF	; 255
    3a3e:	fe 01       	movw	r30, r28
    3a40:	ef 5a       	subi	r30, 0xAF	; 175
    3a42:	ff 4f       	sbci	r31, 0xFF	; 255
    3a44:	60 81       	ld	r22, Z
    3a46:	71 81       	ldd	r23, Z+1	; 0x01
    3a48:	82 81       	ldd	r24, Z+2	; 0x02
    3a4a:	93 81       	ldd	r25, Z+3	; 0x03
    3a4c:	20 e0       	ldi	r18, 0x00	; 0
    3a4e:	30 e0       	ldi	r19, 0x00	; 0
    3a50:	4a ef       	ldi	r20, 0xFA	; 250
    3a52:	54 e4       	ldi	r21, 0x44	; 68
    3a54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a58:	dc 01       	movw	r26, r24
    3a5a:	cb 01       	movw	r24, r22
    3a5c:	f8 01       	movw	r30, r16
    3a5e:	80 83       	st	Z, r24
    3a60:	91 83       	std	Z+1, r25	; 0x01
    3a62:	a2 83       	std	Z+2, r26	; 0x02
    3a64:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a66:	fe 01       	movw	r30, r28
    3a68:	e3 5b       	subi	r30, 0xB3	; 179
    3a6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3a6c:	60 81       	ld	r22, Z
    3a6e:	71 81       	ldd	r23, Z+1	; 0x01
    3a70:	82 81       	ldd	r24, Z+2	; 0x02
    3a72:	93 81       	ldd	r25, Z+3	; 0x03
    3a74:	20 e0       	ldi	r18, 0x00	; 0
    3a76:	30 e0       	ldi	r19, 0x00	; 0
    3a78:	40 e8       	ldi	r20, 0x80	; 128
    3a7a:	5f e3       	ldi	r21, 0x3F	; 63
    3a7c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3a80:	88 23       	and	r24, r24
    3a82:	44 f4       	brge	.+16     	; 0x3a94 <main+0x131a>
		__ticks = 1;
    3a84:	fe 01       	movw	r30, r28
    3a86:	e5 5b       	subi	r30, 0xB5	; 181
    3a88:	ff 4f       	sbci	r31, 0xFF	; 255
    3a8a:	81 e0       	ldi	r24, 0x01	; 1
    3a8c:	90 e0       	ldi	r25, 0x00	; 0
    3a8e:	91 83       	std	Z+1, r25	; 0x01
    3a90:	80 83       	st	Z, r24
    3a92:	64 c0       	rjmp	.+200    	; 0x3b5c <main+0x13e2>
	else if (__tmp > 65535)
    3a94:	fe 01       	movw	r30, r28
    3a96:	e3 5b       	subi	r30, 0xB3	; 179
    3a98:	ff 4f       	sbci	r31, 0xFF	; 255
    3a9a:	60 81       	ld	r22, Z
    3a9c:	71 81       	ldd	r23, Z+1	; 0x01
    3a9e:	82 81       	ldd	r24, Z+2	; 0x02
    3aa0:	93 81       	ldd	r25, Z+3	; 0x03
    3aa2:	20 e0       	ldi	r18, 0x00	; 0
    3aa4:	3f ef       	ldi	r19, 0xFF	; 255
    3aa6:	4f e7       	ldi	r20, 0x7F	; 127
    3aa8:	57 e4       	ldi	r21, 0x47	; 71
    3aaa:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3aae:	18 16       	cp	r1, r24
    3ab0:	0c f0       	brlt	.+2      	; 0x3ab4 <main+0x133a>
    3ab2:	43 c0       	rjmp	.+134    	; 0x3b3a <main+0x13c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ab4:	fe 01       	movw	r30, r28
    3ab6:	ef 5a       	subi	r30, 0xAF	; 175
    3ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aba:	60 81       	ld	r22, Z
    3abc:	71 81       	ldd	r23, Z+1	; 0x01
    3abe:	82 81       	ldd	r24, Z+2	; 0x02
    3ac0:	93 81       	ldd	r25, Z+3	; 0x03
    3ac2:	20 e0       	ldi	r18, 0x00	; 0
    3ac4:	30 e0       	ldi	r19, 0x00	; 0
    3ac6:	40 e2       	ldi	r20, 0x20	; 32
    3ac8:	51 e4       	ldi	r21, 0x41	; 65
    3aca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ace:	dc 01       	movw	r26, r24
    3ad0:	cb 01       	movw	r24, r22
    3ad2:	8e 01       	movw	r16, r28
    3ad4:	05 5b       	subi	r16, 0xB5	; 181
    3ad6:	1f 4f       	sbci	r17, 0xFF	; 255
    3ad8:	bc 01       	movw	r22, r24
    3ada:	cd 01       	movw	r24, r26
    3adc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ae0:	dc 01       	movw	r26, r24
    3ae2:	cb 01       	movw	r24, r22
    3ae4:	f8 01       	movw	r30, r16
    3ae6:	91 83       	std	Z+1, r25	; 0x01
    3ae8:	80 83       	st	Z, r24
    3aea:	1f c0       	rjmp	.+62     	; 0x3b2a <main+0x13b0>
    3aec:	fe 01       	movw	r30, r28
    3aee:	e7 5b       	subi	r30, 0xB7	; 183
    3af0:	ff 4f       	sbci	r31, 0xFF	; 255
    3af2:	88 ec       	ldi	r24, 0xC8	; 200
    3af4:	90 e0       	ldi	r25, 0x00	; 0
    3af6:	91 83       	std	Z+1, r25	; 0x01
    3af8:	80 83       	st	Z, r24
    3afa:	fe 01       	movw	r30, r28
    3afc:	e7 5b       	subi	r30, 0xB7	; 183
    3afe:	ff 4f       	sbci	r31, 0xFF	; 255
    3b00:	80 81       	ld	r24, Z
    3b02:	91 81       	ldd	r25, Z+1	; 0x01
    3b04:	01 97       	sbiw	r24, 0x01	; 1
    3b06:	f1 f7       	brne	.-4      	; 0x3b04 <main+0x138a>
    3b08:	fe 01       	movw	r30, r28
    3b0a:	e7 5b       	subi	r30, 0xB7	; 183
    3b0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b0e:	91 83       	std	Z+1, r25	; 0x01
    3b10:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b12:	de 01       	movw	r26, r28
    3b14:	a5 5b       	subi	r26, 0xB5	; 181
    3b16:	bf 4f       	sbci	r27, 0xFF	; 255
    3b18:	fe 01       	movw	r30, r28
    3b1a:	e5 5b       	subi	r30, 0xB5	; 181
    3b1c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b1e:	80 81       	ld	r24, Z
    3b20:	91 81       	ldd	r25, Z+1	; 0x01
    3b22:	01 97       	sbiw	r24, 0x01	; 1
    3b24:	11 96       	adiw	r26, 0x01	; 1
    3b26:	9c 93       	st	X, r25
    3b28:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b2a:	fe 01       	movw	r30, r28
    3b2c:	e5 5b       	subi	r30, 0xB5	; 181
    3b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b30:	80 81       	ld	r24, Z
    3b32:	91 81       	ldd	r25, Z+1	; 0x01
    3b34:	00 97       	sbiw	r24, 0x00	; 0
    3b36:	d1 f6       	brne	.-76     	; 0x3aec <main+0x1372>
    3b38:	27 c0       	rjmp	.+78     	; 0x3b88 <main+0x140e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b3a:	8e 01       	movw	r16, r28
    3b3c:	05 5b       	subi	r16, 0xB5	; 181
    3b3e:	1f 4f       	sbci	r17, 0xFF	; 255
    3b40:	fe 01       	movw	r30, r28
    3b42:	e3 5b       	subi	r30, 0xB3	; 179
    3b44:	ff 4f       	sbci	r31, 0xFF	; 255
    3b46:	60 81       	ld	r22, Z
    3b48:	71 81       	ldd	r23, Z+1	; 0x01
    3b4a:	82 81       	ldd	r24, Z+2	; 0x02
    3b4c:	93 81       	ldd	r25, Z+3	; 0x03
    3b4e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b52:	dc 01       	movw	r26, r24
    3b54:	cb 01       	movw	r24, r22
    3b56:	f8 01       	movw	r30, r16
    3b58:	91 83       	std	Z+1, r25	; 0x01
    3b5a:	80 83       	st	Z, r24
    3b5c:	de 01       	movw	r26, r28
    3b5e:	a9 5b       	subi	r26, 0xB9	; 185
    3b60:	bf 4f       	sbci	r27, 0xFF	; 255
    3b62:	fe 01       	movw	r30, r28
    3b64:	e5 5b       	subi	r30, 0xB5	; 181
    3b66:	ff 4f       	sbci	r31, 0xFF	; 255
    3b68:	80 81       	ld	r24, Z
    3b6a:	91 81       	ldd	r25, Z+1	; 0x01
    3b6c:	8d 93       	st	X+, r24
    3b6e:	9c 93       	st	X, r25
    3b70:	fe 01       	movw	r30, r28
    3b72:	e9 5b       	subi	r30, 0xB9	; 185
    3b74:	ff 4f       	sbci	r31, 0xFF	; 255
    3b76:	80 81       	ld	r24, Z
    3b78:	91 81       	ldd	r25, Z+1	; 0x01
    3b7a:	01 97       	sbiw	r24, 0x01	; 1
    3b7c:	f1 f7       	brne	.-4      	; 0x3b7a <main+0x1400>
    3b7e:	fe 01       	movw	r30, r28
    3b80:	e9 5b       	subi	r30, 0xB9	; 185
    3b82:	ff 4f       	sbci	r31, 0xFF	; 255
    3b84:	91 83       	std	Z+1, r25	; 0x01
    3b86:	80 83       	st	Z, r24
	  _delay_ms(400);
	  LCD_voidClear();
    3b88:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
	  LCD_voidSendSpecialChar(0,1,9,Hamokshastanding);
    3b8c:	9e 01       	movw	r18, r28
    3b8e:	21 53       	subi	r18, 0x31	; 49
    3b90:	3f 4f       	sbci	r19, 0xFF	; 255
    3b92:	80 e0       	ldi	r24, 0x00	; 0
    3b94:	61 e0       	ldi	r22, 0x01	; 1
    3b96:	49 e0       	ldi	r20, 0x09	; 9
    3b98:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    3b9c:	fe 01       	movw	r30, r28
    3b9e:	ed 5b       	subi	r30, 0xBD	; 189
    3ba0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ba2:	80 e0       	ldi	r24, 0x00	; 0
    3ba4:	90 e0       	ldi	r25, 0x00	; 0
    3ba6:	a8 ec       	ldi	r26, 0xC8	; 200
    3ba8:	b3 e4       	ldi	r27, 0x43	; 67
    3baa:	80 83       	st	Z, r24
    3bac:	91 83       	std	Z+1, r25	; 0x01
    3bae:	a2 83       	std	Z+2, r26	; 0x02
    3bb0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bb2:	8e 01       	movw	r16, r28
    3bb4:	01 5c       	subi	r16, 0xC1	; 193
    3bb6:	1f 4f       	sbci	r17, 0xFF	; 255
    3bb8:	fe 01       	movw	r30, r28
    3bba:	ed 5b       	subi	r30, 0xBD	; 189
    3bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    3bbe:	60 81       	ld	r22, Z
    3bc0:	71 81       	ldd	r23, Z+1	; 0x01
    3bc2:	82 81       	ldd	r24, Z+2	; 0x02
    3bc4:	93 81       	ldd	r25, Z+3	; 0x03
    3bc6:	20 e0       	ldi	r18, 0x00	; 0
    3bc8:	30 e0       	ldi	r19, 0x00	; 0
    3bca:	4a ef       	ldi	r20, 0xFA	; 250
    3bcc:	54 e4       	ldi	r21, 0x44	; 68
    3bce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3bd2:	dc 01       	movw	r26, r24
    3bd4:	cb 01       	movw	r24, r22
    3bd6:	f8 01       	movw	r30, r16
    3bd8:	80 83       	st	Z, r24
    3bda:	91 83       	std	Z+1, r25	; 0x01
    3bdc:	a2 83       	std	Z+2, r26	; 0x02
    3bde:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3be0:	fe 01       	movw	r30, r28
    3be2:	ff 96       	adiw	r30, 0x3f	; 63
    3be4:	60 81       	ld	r22, Z
    3be6:	71 81       	ldd	r23, Z+1	; 0x01
    3be8:	82 81       	ldd	r24, Z+2	; 0x02
    3bea:	93 81       	ldd	r25, Z+3	; 0x03
    3bec:	20 e0       	ldi	r18, 0x00	; 0
    3bee:	30 e0       	ldi	r19, 0x00	; 0
    3bf0:	40 e8       	ldi	r20, 0x80	; 128
    3bf2:	5f e3       	ldi	r21, 0x3F	; 63
    3bf4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3bf8:	88 23       	and	r24, r24
    3bfa:	2c f4       	brge	.+10     	; 0x3c06 <main+0x148c>
		__ticks = 1;
    3bfc:	81 e0       	ldi	r24, 0x01	; 1
    3bfe:	90 e0       	ldi	r25, 0x00	; 0
    3c00:	9e af       	std	Y+62, r25	; 0x3e
    3c02:	8d af       	std	Y+61, r24	; 0x3d
    3c04:	46 c0       	rjmp	.+140    	; 0x3c92 <main+0x1518>
	else if (__tmp > 65535)
    3c06:	fe 01       	movw	r30, r28
    3c08:	ff 96       	adiw	r30, 0x3f	; 63
    3c0a:	60 81       	ld	r22, Z
    3c0c:	71 81       	ldd	r23, Z+1	; 0x01
    3c0e:	82 81       	ldd	r24, Z+2	; 0x02
    3c10:	93 81       	ldd	r25, Z+3	; 0x03
    3c12:	20 e0       	ldi	r18, 0x00	; 0
    3c14:	3f ef       	ldi	r19, 0xFF	; 255
    3c16:	4f e7       	ldi	r20, 0x7F	; 127
    3c18:	57 e4       	ldi	r21, 0x47	; 71
    3c1a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3c1e:	18 16       	cp	r1, r24
    3c20:	64 f5       	brge	.+88     	; 0x3c7a <main+0x1500>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c22:	fe 01       	movw	r30, r28
    3c24:	ed 5b       	subi	r30, 0xBD	; 189
    3c26:	ff 4f       	sbci	r31, 0xFF	; 255
    3c28:	60 81       	ld	r22, Z
    3c2a:	71 81       	ldd	r23, Z+1	; 0x01
    3c2c:	82 81       	ldd	r24, Z+2	; 0x02
    3c2e:	93 81       	ldd	r25, Z+3	; 0x03
    3c30:	20 e0       	ldi	r18, 0x00	; 0
    3c32:	30 e0       	ldi	r19, 0x00	; 0
    3c34:	40 e2       	ldi	r20, 0x20	; 32
    3c36:	51 e4       	ldi	r21, 0x41	; 65
    3c38:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c3c:	dc 01       	movw	r26, r24
    3c3e:	cb 01       	movw	r24, r22
    3c40:	bc 01       	movw	r22, r24
    3c42:	cd 01       	movw	r24, r26
    3c44:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c48:	dc 01       	movw	r26, r24
    3c4a:	cb 01       	movw	r24, r22
    3c4c:	9e af       	std	Y+62, r25	; 0x3e
    3c4e:	8d af       	std	Y+61, r24	; 0x3d
    3c50:	0f c0       	rjmp	.+30     	; 0x3c70 <main+0x14f6>
    3c52:	88 ec       	ldi	r24, 0xC8	; 200
    3c54:	90 e0       	ldi	r25, 0x00	; 0
    3c56:	9c af       	std	Y+60, r25	; 0x3c
    3c58:	8b af       	std	Y+59, r24	; 0x3b
    3c5a:	8b ad       	ldd	r24, Y+59	; 0x3b
    3c5c:	9c ad       	ldd	r25, Y+60	; 0x3c
    3c5e:	01 97       	sbiw	r24, 0x01	; 1
    3c60:	f1 f7       	brne	.-4      	; 0x3c5e <main+0x14e4>
    3c62:	9c af       	std	Y+60, r25	; 0x3c
    3c64:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c66:	8d ad       	ldd	r24, Y+61	; 0x3d
    3c68:	9e ad       	ldd	r25, Y+62	; 0x3e
    3c6a:	01 97       	sbiw	r24, 0x01	; 1
    3c6c:	9e af       	std	Y+62, r25	; 0x3e
    3c6e:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c70:	8d ad       	ldd	r24, Y+61	; 0x3d
    3c72:	9e ad       	ldd	r25, Y+62	; 0x3e
    3c74:	00 97       	sbiw	r24, 0x00	; 0
    3c76:	69 f7       	brne	.-38     	; 0x3c52 <main+0x14d8>
    3c78:	16 c0       	rjmp	.+44     	; 0x3ca6 <main+0x152c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c7a:	fe 01       	movw	r30, r28
    3c7c:	ff 96       	adiw	r30, 0x3f	; 63
    3c7e:	60 81       	ld	r22, Z
    3c80:	71 81       	ldd	r23, Z+1	; 0x01
    3c82:	82 81       	ldd	r24, Z+2	; 0x02
    3c84:	93 81       	ldd	r25, Z+3	; 0x03
    3c86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c8a:	dc 01       	movw	r26, r24
    3c8c:	cb 01       	movw	r24, r22
    3c8e:	9e af       	std	Y+62, r25	; 0x3e
    3c90:	8d af       	std	Y+61, r24	; 0x3d
    3c92:	8d ad       	ldd	r24, Y+61	; 0x3d
    3c94:	9e ad       	ldd	r25, Y+62	; 0x3e
    3c96:	9a af       	std	Y+58, r25	; 0x3a
    3c98:	89 af       	std	Y+57, r24	; 0x39
    3c9a:	89 ad       	ldd	r24, Y+57	; 0x39
    3c9c:	9a ad       	ldd	r25, Y+58	; 0x3a
    3c9e:	01 97       	sbiw	r24, 0x01	; 1
    3ca0:	f1 f7       	brne	.-4      	; 0x3c9e <main+0x1524>
    3ca2:	9a af       	std	Y+58, r25	; 0x3a
    3ca4:	89 af       	std	Y+57, r24	; 0x39
	  _delay_ms(400);
	  LCD_voidClear();
    3ca6:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
	  LCD_voidSendSpecialChar(3,1,9,HamokshaHandsDown);
    3caa:	9e 01       	movw	r18, r28
    3cac:	29 50       	subi	r18, 0x09	; 9
    3cae:	3f 4f       	sbci	r19, 0xFF	; 255
    3cb0:	83 e0       	ldi	r24, 0x03	; 3
    3cb2:	61 e0       	ldi	r22, 0x01	; 1
    3cb4:	49 e0       	ldi	r20, 0x09	; 9
    3cb6:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    3cba:	80 e0       	ldi	r24, 0x00	; 0
    3cbc:	90 e0       	ldi	r25, 0x00	; 0
    3cbe:	a8 ec       	ldi	r26, 0xC8	; 200
    3cc0:	b3 e4       	ldi	r27, 0x43	; 67
    3cc2:	8d ab       	std	Y+53, r24	; 0x35
    3cc4:	9e ab       	std	Y+54, r25	; 0x36
    3cc6:	af ab       	std	Y+55, r26	; 0x37
    3cc8:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3cca:	6d a9       	ldd	r22, Y+53	; 0x35
    3ccc:	7e a9       	ldd	r23, Y+54	; 0x36
    3cce:	8f a9       	ldd	r24, Y+55	; 0x37
    3cd0:	98 ad       	ldd	r25, Y+56	; 0x38
    3cd2:	20 e0       	ldi	r18, 0x00	; 0
    3cd4:	30 e0       	ldi	r19, 0x00	; 0
    3cd6:	4a ef       	ldi	r20, 0xFA	; 250
    3cd8:	54 e4       	ldi	r21, 0x44	; 68
    3cda:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3cde:	dc 01       	movw	r26, r24
    3ce0:	cb 01       	movw	r24, r22
    3ce2:	89 ab       	std	Y+49, r24	; 0x31
    3ce4:	9a ab       	std	Y+50, r25	; 0x32
    3ce6:	ab ab       	std	Y+51, r26	; 0x33
    3ce8:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3cea:	69 a9       	ldd	r22, Y+49	; 0x31
    3cec:	7a a9       	ldd	r23, Y+50	; 0x32
    3cee:	8b a9       	ldd	r24, Y+51	; 0x33
    3cf0:	9c a9       	ldd	r25, Y+52	; 0x34
    3cf2:	20 e0       	ldi	r18, 0x00	; 0
    3cf4:	30 e0       	ldi	r19, 0x00	; 0
    3cf6:	40 e8       	ldi	r20, 0x80	; 128
    3cf8:	5f e3       	ldi	r21, 0x3F	; 63
    3cfa:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3cfe:	88 23       	and	r24, r24
    3d00:	2c f4       	brge	.+10     	; 0x3d0c <main+0x1592>
		__ticks = 1;
    3d02:	81 e0       	ldi	r24, 0x01	; 1
    3d04:	90 e0       	ldi	r25, 0x00	; 0
    3d06:	98 ab       	std	Y+48, r25	; 0x30
    3d08:	8f a7       	std	Y+47, r24	; 0x2f
    3d0a:	3f c0       	rjmp	.+126    	; 0x3d8a <main+0x1610>
	else if (__tmp > 65535)
    3d0c:	69 a9       	ldd	r22, Y+49	; 0x31
    3d0e:	7a a9       	ldd	r23, Y+50	; 0x32
    3d10:	8b a9       	ldd	r24, Y+51	; 0x33
    3d12:	9c a9       	ldd	r25, Y+52	; 0x34
    3d14:	20 e0       	ldi	r18, 0x00	; 0
    3d16:	3f ef       	ldi	r19, 0xFF	; 255
    3d18:	4f e7       	ldi	r20, 0x7F	; 127
    3d1a:	57 e4       	ldi	r21, 0x47	; 71
    3d1c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3d20:	18 16       	cp	r1, r24
    3d22:	4c f5       	brge	.+82     	; 0x3d76 <main+0x15fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d24:	6d a9       	ldd	r22, Y+53	; 0x35
    3d26:	7e a9       	ldd	r23, Y+54	; 0x36
    3d28:	8f a9       	ldd	r24, Y+55	; 0x37
    3d2a:	98 ad       	ldd	r25, Y+56	; 0x38
    3d2c:	20 e0       	ldi	r18, 0x00	; 0
    3d2e:	30 e0       	ldi	r19, 0x00	; 0
    3d30:	40 e2       	ldi	r20, 0x20	; 32
    3d32:	51 e4       	ldi	r21, 0x41	; 65
    3d34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d38:	dc 01       	movw	r26, r24
    3d3a:	cb 01       	movw	r24, r22
    3d3c:	bc 01       	movw	r22, r24
    3d3e:	cd 01       	movw	r24, r26
    3d40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d44:	dc 01       	movw	r26, r24
    3d46:	cb 01       	movw	r24, r22
    3d48:	98 ab       	std	Y+48, r25	; 0x30
    3d4a:	8f a7       	std	Y+47, r24	; 0x2f
    3d4c:	0f c0       	rjmp	.+30     	; 0x3d6c <main+0x15f2>
    3d4e:	88 ec       	ldi	r24, 0xC8	; 200
    3d50:	90 e0       	ldi	r25, 0x00	; 0
    3d52:	9e a7       	std	Y+46, r25	; 0x2e
    3d54:	8d a7       	std	Y+45, r24	; 0x2d
    3d56:	8d a5       	ldd	r24, Y+45	; 0x2d
    3d58:	9e a5       	ldd	r25, Y+46	; 0x2e
    3d5a:	01 97       	sbiw	r24, 0x01	; 1
    3d5c:	f1 f7       	brne	.-4      	; 0x3d5a <main+0x15e0>
    3d5e:	9e a7       	std	Y+46, r25	; 0x2e
    3d60:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d62:	8f a5       	ldd	r24, Y+47	; 0x2f
    3d64:	98 a9       	ldd	r25, Y+48	; 0x30
    3d66:	01 97       	sbiw	r24, 0x01	; 1
    3d68:	98 ab       	std	Y+48, r25	; 0x30
    3d6a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d6c:	8f a5       	ldd	r24, Y+47	; 0x2f
    3d6e:	98 a9       	ldd	r25, Y+48	; 0x30
    3d70:	00 97       	sbiw	r24, 0x00	; 0
    3d72:	69 f7       	brne	.-38     	; 0x3d4e <main+0x15d4>
    3d74:	14 c0       	rjmp	.+40     	; 0x3d9e <main+0x1624>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d76:	69 a9       	ldd	r22, Y+49	; 0x31
    3d78:	7a a9       	ldd	r23, Y+50	; 0x32
    3d7a:	8b a9       	ldd	r24, Y+51	; 0x33
    3d7c:	9c a9       	ldd	r25, Y+52	; 0x34
    3d7e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d82:	dc 01       	movw	r26, r24
    3d84:	cb 01       	movw	r24, r22
    3d86:	98 ab       	std	Y+48, r25	; 0x30
    3d88:	8f a7       	std	Y+47, r24	; 0x2f
    3d8a:	8f a5       	ldd	r24, Y+47	; 0x2f
    3d8c:	98 a9       	ldd	r25, Y+48	; 0x30
    3d8e:	9c a7       	std	Y+44, r25	; 0x2c
    3d90:	8b a7       	std	Y+43, r24	; 0x2b
    3d92:	8b a5       	ldd	r24, Y+43	; 0x2b
    3d94:	9c a5       	ldd	r25, Y+44	; 0x2c
    3d96:	01 97       	sbiw	r24, 0x01	; 1
    3d98:	f1 f7       	brne	.-4      	; 0x3d96 <main+0x161c>
    3d9a:	9c a7       	std	Y+44, r25	; 0x2c
    3d9c:	8b a7       	std	Y+43, r24	; 0x2b
	  _delay_ms(400);
	  LCD_voidClear();
    3d9e:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
	  LCD_voidSendSpecialChar(4,1,9,HamokshaGoingLeft);
    3da2:	9e 01       	movw	r18, r28
    3da4:	29 5f       	subi	r18, 0xF9	; 249
    3da6:	3e 4f       	sbci	r19, 0xFE	; 254
    3da8:	84 e0       	ldi	r24, 0x04	; 4
    3daa:	61 e0       	ldi	r22, 0x01	; 1
    3dac:	49 e0       	ldi	r20, 0x09	; 9
    3dae:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    3db2:	80 e0       	ldi	r24, 0x00	; 0
    3db4:	90 e0       	ldi	r25, 0x00	; 0
    3db6:	a8 ec       	ldi	r26, 0xC8	; 200
    3db8:	b3 e4       	ldi	r27, 0x43	; 67
    3dba:	8f a3       	std	Y+39, r24	; 0x27
    3dbc:	98 a7       	std	Y+40, r25	; 0x28
    3dbe:	a9 a7       	std	Y+41, r26	; 0x29
    3dc0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3dc2:	6f a1       	ldd	r22, Y+39	; 0x27
    3dc4:	78 a5       	ldd	r23, Y+40	; 0x28
    3dc6:	89 a5       	ldd	r24, Y+41	; 0x29
    3dc8:	9a a5       	ldd	r25, Y+42	; 0x2a
    3dca:	20 e0       	ldi	r18, 0x00	; 0
    3dcc:	30 e0       	ldi	r19, 0x00	; 0
    3dce:	4a ef       	ldi	r20, 0xFA	; 250
    3dd0:	54 e4       	ldi	r21, 0x44	; 68
    3dd2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3dd6:	dc 01       	movw	r26, r24
    3dd8:	cb 01       	movw	r24, r22
    3dda:	8b a3       	std	Y+35, r24	; 0x23
    3ddc:	9c a3       	std	Y+36, r25	; 0x24
    3dde:	ad a3       	std	Y+37, r26	; 0x25
    3de0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3de2:	6b a1       	ldd	r22, Y+35	; 0x23
    3de4:	7c a1       	ldd	r23, Y+36	; 0x24
    3de6:	8d a1       	ldd	r24, Y+37	; 0x25
    3de8:	9e a1       	ldd	r25, Y+38	; 0x26
    3dea:	20 e0       	ldi	r18, 0x00	; 0
    3dec:	30 e0       	ldi	r19, 0x00	; 0
    3dee:	40 e8       	ldi	r20, 0x80	; 128
    3df0:	5f e3       	ldi	r21, 0x3F	; 63
    3df2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3df6:	88 23       	and	r24, r24
    3df8:	2c f4       	brge	.+10     	; 0x3e04 <main+0x168a>
		__ticks = 1;
    3dfa:	81 e0       	ldi	r24, 0x01	; 1
    3dfc:	90 e0       	ldi	r25, 0x00	; 0
    3dfe:	9a a3       	std	Y+34, r25	; 0x22
    3e00:	89 a3       	std	Y+33, r24	; 0x21
    3e02:	3f c0       	rjmp	.+126    	; 0x3e82 <main+0x1708>
	else if (__tmp > 65535)
    3e04:	6b a1       	ldd	r22, Y+35	; 0x23
    3e06:	7c a1       	ldd	r23, Y+36	; 0x24
    3e08:	8d a1       	ldd	r24, Y+37	; 0x25
    3e0a:	9e a1       	ldd	r25, Y+38	; 0x26
    3e0c:	20 e0       	ldi	r18, 0x00	; 0
    3e0e:	3f ef       	ldi	r19, 0xFF	; 255
    3e10:	4f e7       	ldi	r20, 0x7F	; 127
    3e12:	57 e4       	ldi	r21, 0x47	; 71
    3e14:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3e18:	18 16       	cp	r1, r24
    3e1a:	4c f5       	brge	.+82     	; 0x3e6e <main+0x16f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e1c:	6f a1       	ldd	r22, Y+39	; 0x27
    3e1e:	78 a5       	ldd	r23, Y+40	; 0x28
    3e20:	89 a5       	ldd	r24, Y+41	; 0x29
    3e22:	9a a5       	ldd	r25, Y+42	; 0x2a
    3e24:	20 e0       	ldi	r18, 0x00	; 0
    3e26:	30 e0       	ldi	r19, 0x00	; 0
    3e28:	40 e2       	ldi	r20, 0x20	; 32
    3e2a:	51 e4       	ldi	r21, 0x41	; 65
    3e2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e30:	dc 01       	movw	r26, r24
    3e32:	cb 01       	movw	r24, r22
    3e34:	bc 01       	movw	r22, r24
    3e36:	cd 01       	movw	r24, r26
    3e38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e3c:	dc 01       	movw	r26, r24
    3e3e:	cb 01       	movw	r24, r22
    3e40:	9a a3       	std	Y+34, r25	; 0x22
    3e42:	89 a3       	std	Y+33, r24	; 0x21
    3e44:	0f c0       	rjmp	.+30     	; 0x3e64 <main+0x16ea>
    3e46:	88 ec       	ldi	r24, 0xC8	; 200
    3e48:	90 e0       	ldi	r25, 0x00	; 0
    3e4a:	98 a3       	std	Y+32, r25	; 0x20
    3e4c:	8f 8f       	std	Y+31, r24	; 0x1f
    3e4e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3e50:	98 a1       	ldd	r25, Y+32	; 0x20
    3e52:	01 97       	sbiw	r24, 0x01	; 1
    3e54:	f1 f7       	brne	.-4      	; 0x3e52 <main+0x16d8>
    3e56:	98 a3       	std	Y+32, r25	; 0x20
    3e58:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e5a:	89 a1       	ldd	r24, Y+33	; 0x21
    3e5c:	9a a1       	ldd	r25, Y+34	; 0x22
    3e5e:	01 97       	sbiw	r24, 0x01	; 1
    3e60:	9a a3       	std	Y+34, r25	; 0x22
    3e62:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e64:	89 a1       	ldd	r24, Y+33	; 0x21
    3e66:	9a a1       	ldd	r25, Y+34	; 0x22
    3e68:	00 97       	sbiw	r24, 0x00	; 0
    3e6a:	69 f7       	brne	.-38     	; 0x3e46 <main+0x16cc>
    3e6c:	14 c0       	rjmp	.+40     	; 0x3e96 <main+0x171c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e6e:	6b a1       	ldd	r22, Y+35	; 0x23
    3e70:	7c a1       	ldd	r23, Y+36	; 0x24
    3e72:	8d a1       	ldd	r24, Y+37	; 0x25
    3e74:	9e a1       	ldd	r25, Y+38	; 0x26
    3e76:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e7a:	dc 01       	movw	r26, r24
    3e7c:	cb 01       	movw	r24, r22
    3e7e:	9a a3       	std	Y+34, r25	; 0x22
    3e80:	89 a3       	std	Y+33, r24	; 0x21
    3e82:	89 a1       	ldd	r24, Y+33	; 0x21
    3e84:	9a a1       	ldd	r25, Y+34	; 0x22
    3e86:	9e 8f       	std	Y+30, r25	; 0x1e
    3e88:	8d 8f       	std	Y+29, r24	; 0x1d
    3e8a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3e8c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3e8e:	01 97       	sbiw	r24, 0x01	; 1
    3e90:	f1 f7       	brne	.-4      	; 0x3e8e <main+0x1714>
    3e92:	9e 8f       	std	Y+30, r25	; 0x1e
    3e94:	8d 8f       	std	Y+29, r24	; 0x1d
	  _delay_ms(400);
	  LCD_voidClear();
    3e96:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
	  LCD_voidSendSpecialChar(4,1,8,HamokshaGoingLeft);
    3e9a:	9e 01       	movw	r18, r28
    3e9c:	29 5f       	subi	r18, 0xF9	; 249
    3e9e:	3e 4f       	sbci	r19, 0xFE	; 254
    3ea0:	84 e0       	ldi	r24, 0x04	; 4
    3ea2:	61 e0       	ldi	r22, 0x01	; 1
    3ea4:	48 e0       	ldi	r20, 0x08	; 8
    3ea6:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    3eaa:	80 e0       	ldi	r24, 0x00	; 0
    3eac:	90 e0       	ldi	r25, 0x00	; 0
    3eae:	a8 ec       	ldi	r26, 0xC8	; 200
    3eb0:	b3 e4       	ldi	r27, 0x43	; 67
    3eb2:	89 8f       	std	Y+25, r24	; 0x19
    3eb4:	9a 8f       	std	Y+26, r25	; 0x1a
    3eb6:	ab 8f       	std	Y+27, r26	; 0x1b
    3eb8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3eba:	69 8d       	ldd	r22, Y+25	; 0x19
    3ebc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3ebe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3ec0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3ec2:	20 e0       	ldi	r18, 0x00	; 0
    3ec4:	30 e0       	ldi	r19, 0x00	; 0
    3ec6:	4a ef       	ldi	r20, 0xFA	; 250
    3ec8:	54 e4       	ldi	r21, 0x44	; 68
    3eca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ece:	dc 01       	movw	r26, r24
    3ed0:	cb 01       	movw	r24, r22
    3ed2:	8d 8b       	std	Y+21, r24	; 0x15
    3ed4:	9e 8b       	std	Y+22, r25	; 0x16
    3ed6:	af 8b       	std	Y+23, r26	; 0x17
    3ed8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3eda:	6d 89       	ldd	r22, Y+21	; 0x15
    3edc:	7e 89       	ldd	r23, Y+22	; 0x16
    3ede:	8f 89       	ldd	r24, Y+23	; 0x17
    3ee0:	98 8d       	ldd	r25, Y+24	; 0x18
    3ee2:	20 e0       	ldi	r18, 0x00	; 0
    3ee4:	30 e0       	ldi	r19, 0x00	; 0
    3ee6:	40 e8       	ldi	r20, 0x80	; 128
    3ee8:	5f e3       	ldi	r21, 0x3F	; 63
    3eea:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3eee:	88 23       	and	r24, r24
    3ef0:	2c f4       	brge	.+10     	; 0x3efc <main+0x1782>
		__ticks = 1;
    3ef2:	81 e0       	ldi	r24, 0x01	; 1
    3ef4:	90 e0       	ldi	r25, 0x00	; 0
    3ef6:	9c 8b       	std	Y+20, r25	; 0x14
    3ef8:	8b 8b       	std	Y+19, r24	; 0x13
    3efa:	3f c0       	rjmp	.+126    	; 0x3f7a <main+0x1800>
	else if (__tmp > 65535)
    3efc:	6d 89       	ldd	r22, Y+21	; 0x15
    3efe:	7e 89       	ldd	r23, Y+22	; 0x16
    3f00:	8f 89       	ldd	r24, Y+23	; 0x17
    3f02:	98 8d       	ldd	r25, Y+24	; 0x18
    3f04:	20 e0       	ldi	r18, 0x00	; 0
    3f06:	3f ef       	ldi	r19, 0xFF	; 255
    3f08:	4f e7       	ldi	r20, 0x7F	; 127
    3f0a:	57 e4       	ldi	r21, 0x47	; 71
    3f0c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3f10:	18 16       	cp	r1, r24
    3f12:	4c f5       	brge	.+82     	; 0x3f66 <main+0x17ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f14:	69 8d       	ldd	r22, Y+25	; 0x19
    3f16:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3f18:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f1a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f1c:	20 e0       	ldi	r18, 0x00	; 0
    3f1e:	30 e0       	ldi	r19, 0x00	; 0
    3f20:	40 e2       	ldi	r20, 0x20	; 32
    3f22:	51 e4       	ldi	r21, 0x41	; 65
    3f24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f28:	dc 01       	movw	r26, r24
    3f2a:	cb 01       	movw	r24, r22
    3f2c:	bc 01       	movw	r22, r24
    3f2e:	cd 01       	movw	r24, r26
    3f30:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f34:	dc 01       	movw	r26, r24
    3f36:	cb 01       	movw	r24, r22
    3f38:	9c 8b       	std	Y+20, r25	; 0x14
    3f3a:	8b 8b       	std	Y+19, r24	; 0x13
    3f3c:	0f c0       	rjmp	.+30     	; 0x3f5c <main+0x17e2>
    3f3e:	88 ec       	ldi	r24, 0xC8	; 200
    3f40:	90 e0       	ldi	r25, 0x00	; 0
    3f42:	9a 8b       	std	Y+18, r25	; 0x12
    3f44:	89 8b       	std	Y+17, r24	; 0x11
    3f46:	89 89       	ldd	r24, Y+17	; 0x11
    3f48:	9a 89       	ldd	r25, Y+18	; 0x12
    3f4a:	01 97       	sbiw	r24, 0x01	; 1
    3f4c:	f1 f7       	brne	.-4      	; 0x3f4a <main+0x17d0>
    3f4e:	9a 8b       	std	Y+18, r25	; 0x12
    3f50:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f52:	8b 89       	ldd	r24, Y+19	; 0x13
    3f54:	9c 89       	ldd	r25, Y+20	; 0x14
    3f56:	01 97       	sbiw	r24, 0x01	; 1
    3f58:	9c 8b       	std	Y+20, r25	; 0x14
    3f5a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f5c:	8b 89       	ldd	r24, Y+19	; 0x13
    3f5e:	9c 89       	ldd	r25, Y+20	; 0x14
    3f60:	00 97       	sbiw	r24, 0x00	; 0
    3f62:	69 f7       	brne	.-38     	; 0x3f3e <main+0x17c4>
    3f64:	14 c0       	rjmp	.+40     	; 0x3f8e <main+0x1814>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f66:	6d 89       	ldd	r22, Y+21	; 0x15
    3f68:	7e 89       	ldd	r23, Y+22	; 0x16
    3f6a:	8f 89       	ldd	r24, Y+23	; 0x17
    3f6c:	98 8d       	ldd	r25, Y+24	; 0x18
    3f6e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f72:	dc 01       	movw	r26, r24
    3f74:	cb 01       	movw	r24, r22
    3f76:	9c 8b       	std	Y+20, r25	; 0x14
    3f78:	8b 8b       	std	Y+19, r24	; 0x13
    3f7a:	8b 89       	ldd	r24, Y+19	; 0x13
    3f7c:	9c 89       	ldd	r25, Y+20	; 0x14
    3f7e:	98 8b       	std	Y+16, r25	; 0x10
    3f80:	8f 87       	std	Y+15, r24	; 0x0f
    3f82:	8f 85       	ldd	r24, Y+15	; 0x0f
    3f84:	98 89       	ldd	r25, Y+16	; 0x10
    3f86:	01 97       	sbiw	r24, 0x01	; 1
    3f88:	f1 f7       	brne	.-4      	; 0x3f86 <main+0x180c>
    3f8a:	98 8b       	std	Y+16, r25	; 0x10
    3f8c:	8f 87       	std	Y+15, r24	; 0x0f
	  _delay_ms(400);
	  LCD_voidClear();
    3f8e:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <LCD_voidClear>
	  LCD_voidSendSpecialChar(2,1,7,HamokshaGoingRight);
    3f92:	9e 01       	movw	r18, r28
    3f94:	21 50       	subi	r18, 0x01	; 1
    3f96:	3f 4f       	sbci	r19, 0xFF	; 255
    3f98:	82 e0       	ldi	r24, 0x02	; 2
    3f9a:	61 e0       	ldi	r22, 0x01	; 1
    3f9c:	47 e0       	ldi	r20, 0x07	; 7
    3f9e:	0e 94 11 13 	call	0x2622	; 0x2622 <LCD_voidSendSpecialChar>
    3fa2:	80 e0       	ldi	r24, 0x00	; 0
    3fa4:	90 e0       	ldi	r25, 0x00	; 0
    3fa6:	a8 ec       	ldi	r26, 0xC8	; 200
    3fa8:	b3 e4       	ldi	r27, 0x43	; 67
    3faa:	8b 87       	std	Y+11, r24	; 0x0b
    3fac:	9c 87       	std	Y+12, r25	; 0x0c
    3fae:	ad 87       	std	Y+13, r26	; 0x0d
    3fb0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3fb2:	6b 85       	ldd	r22, Y+11	; 0x0b
    3fb4:	7c 85       	ldd	r23, Y+12	; 0x0c
    3fb6:	8d 85       	ldd	r24, Y+13	; 0x0d
    3fb8:	9e 85       	ldd	r25, Y+14	; 0x0e
    3fba:	20 e0       	ldi	r18, 0x00	; 0
    3fbc:	30 e0       	ldi	r19, 0x00	; 0
    3fbe:	4a ef       	ldi	r20, 0xFA	; 250
    3fc0:	54 e4       	ldi	r21, 0x44	; 68
    3fc2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3fc6:	dc 01       	movw	r26, r24
    3fc8:	cb 01       	movw	r24, r22
    3fca:	8f 83       	std	Y+7, r24	; 0x07
    3fcc:	98 87       	std	Y+8, r25	; 0x08
    3fce:	a9 87       	std	Y+9, r26	; 0x09
    3fd0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3fd2:	6f 81       	ldd	r22, Y+7	; 0x07
    3fd4:	78 85       	ldd	r23, Y+8	; 0x08
    3fd6:	89 85       	ldd	r24, Y+9	; 0x09
    3fd8:	9a 85       	ldd	r25, Y+10	; 0x0a
    3fda:	20 e0       	ldi	r18, 0x00	; 0
    3fdc:	30 e0       	ldi	r19, 0x00	; 0
    3fde:	40 e8       	ldi	r20, 0x80	; 128
    3fe0:	5f e3       	ldi	r21, 0x3F	; 63
    3fe2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3fe6:	88 23       	and	r24, r24
    3fe8:	2c f4       	brge	.+10     	; 0x3ff4 <main+0x187a>
		__ticks = 1;
    3fea:	81 e0       	ldi	r24, 0x01	; 1
    3fec:	90 e0       	ldi	r25, 0x00	; 0
    3fee:	9e 83       	std	Y+6, r25	; 0x06
    3ff0:	8d 83       	std	Y+5, r24	; 0x05
    3ff2:	3f c0       	rjmp	.+126    	; 0x4072 <main+0x18f8>
	else if (__tmp > 65535)
    3ff4:	6f 81       	ldd	r22, Y+7	; 0x07
    3ff6:	78 85       	ldd	r23, Y+8	; 0x08
    3ff8:	89 85       	ldd	r24, Y+9	; 0x09
    3ffa:	9a 85       	ldd	r25, Y+10	; 0x0a
    3ffc:	20 e0       	ldi	r18, 0x00	; 0
    3ffe:	3f ef       	ldi	r19, 0xFF	; 255
    4000:	4f e7       	ldi	r20, 0x7F	; 127
    4002:	57 e4       	ldi	r21, 0x47	; 71
    4004:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4008:	18 16       	cp	r1, r24
    400a:	4c f5       	brge	.+82     	; 0x405e <main+0x18e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    400c:	6b 85       	ldd	r22, Y+11	; 0x0b
    400e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4010:	8d 85       	ldd	r24, Y+13	; 0x0d
    4012:	9e 85       	ldd	r25, Y+14	; 0x0e
    4014:	20 e0       	ldi	r18, 0x00	; 0
    4016:	30 e0       	ldi	r19, 0x00	; 0
    4018:	40 e2       	ldi	r20, 0x20	; 32
    401a:	51 e4       	ldi	r21, 0x41	; 65
    401c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4020:	dc 01       	movw	r26, r24
    4022:	cb 01       	movw	r24, r22
    4024:	bc 01       	movw	r22, r24
    4026:	cd 01       	movw	r24, r26
    4028:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    402c:	dc 01       	movw	r26, r24
    402e:	cb 01       	movw	r24, r22
    4030:	9e 83       	std	Y+6, r25	; 0x06
    4032:	8d 83       	std	Y+5, r24	; 0x05
    4034:	0f c0       	rjmp	.+30     	; 0x4054 <main+0x18da>
    4036:	88 ec       	ldi	r24, 0xC8	; 200
    4038:	90 e0       	ldi	r25, 0x00	; 0
    403a:	9c 83       	std	Y+4, r25	; 0x04
    403c:	8b 83       	std	Y+3, r24	; 0x03
    403e:	8b 81       	ldd	r24, Y+3	; 0x03
    4040:	9c 81       	ldd	r25, Y+4	; 0x04
    4042:	01 97       	sbiw	r24, 0x01	; 1
    4044:	f1 f7       	brne	.-4      	; 0x4042 <main+0x18c8>
    4046:	9c 83       	std	Y+4, r25	; 0x04
    4048:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    404a:	8d 81       	ldd	r24, Y+5	; 0x05
    404c:	9e 81       	ldd	r25, Y+6	; 0x06
    404e:	01 97       	sbiw	r24, 0x01	; 1
    4050:	9e 83       	std	Y+6, r25	; 0x06
    4052:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4054:	8d 81       	ldd	r24, Y+5	; 0x05
    4056:	9e 81       	ldd	r25, Y+6	; 0x06
    4058:	00 97       	sbiw	r24, 0x00	; 0
    405a:	69 f7       	brne	.-38     	; 0x4036 <main+0x18bc>
    405c:	14 c0       	rjmp	.+40     	; 0x4086 <main+0x190c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    405e:	6f 81       	ldd	r22, Y+7	; 0x07
    4060:	78 85       	ldd	r23, Y+8	; 0x08
    4062:	89 85       	ldd	r24, Y+9	; 0x09
    4064:	9a 85       	ldd	r25, Y+10	; 0x0a
    4066:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    406a:	dc 01       	movw	r26, r24
    406c:	cb 01       	movw	r24, r22
    406e:	9e 83       	std	Y+6, r25	; 0x06
    4070:	8d 83       	std	Y+5, r24	; 0x05
    4072:	8d 81       	ldd	r24, Y+5	; 0x05
    4074:	9e 81       	ldd	r25, Y+6	; 0x06
    4076:	9a 83       	std	Y+2, r25	; 0x02
    4078:	89 83       	std	Y+1, r24	; 0x01
    407a:	89 81       	ldd	r24, Y+1	; 0x01
    407c:	9a 81       	ldd	r25, Y+2	; 0x02
    407e:	01 97       	sbiw	r24, 0x01	; 1
    4080:	f1 f7       	brne	.-4      	; 0x407e <main+0x1904>
    4082:	9a 83       	std	Y+2, r25	; 0x02
    4084:	89 83       	std	Y+1, r24	; 0x01
  //FRAME 3
  LCD_u8_GoTo_XY(0,4);
  LCD_voidWriteString("I Can Dance");
  LCD_voidSendSpecialChar(0,1,8,Hamokshastanding);
  _delay_ms(2000);
  for(u8 i =0 ; i<10 ;i++)
    4086:	de 01       	movw	r26, r28
    4088:	ab 53       	subi	r26, 0x3B	; 59
    408a:	bf 4f       	sbci	r27, 0xFF	; 255
    408c:	fe 01       	movw	r30, r28
    408e:	eb 53       	subi	r30, 0x3B	; 59
    4090:	ff 4f       	sbci	r31, 0xFF	; 255
    4092:	80 81       	ld	r24, Z
    4094:	8f 5f       	subi	r24, 0xFF	; 255
    4096:	8c 93       	st	X, r24
    4098:	fe 01       	movw	r30, r28
    409a:	eb 53       	subi	r30, 0x3B	; 59
    409c:	ff 4f       	sbci	r31, 0xFF	; 255
    409e:	80 81       	ld	r24, Z
    40a0:	8a 30       	cpi	r24, 0x0A	; 10
    40a2:	08 f4       	brcc	.+2      	; 0x40a6 <main+0x192c>
    40a4:	3a cb       	rjmp	.-2444   	; 0x371a <main+0xfa0>
    40a6:	0c 94 a9 16 	jmp	0x2d52	; 0x2d52 <main+0x5d8>

000040aa <__udivmodsi4>:
    40aa:	a1 e2       	ldi	r26, 0x21	; 33
    40ac:	1a 2e       	mov	r1, r26
    40ae:	aa 1b       	sub	r26, r26
    40b0:	bb 1b       	sub	r27, r27
    40b2:	fd 01       	movw	r30, r26
    40b4:	0d c0       	rjmp	.+26     	; 0x40d0 <__udivmodsi4_ep>

000040b6 <__udivmodsi4_loop>:
    40b6:	aa 1f       	adc	r26, r26
    40b8:	bb 1f       	adc	r27, r27
    40ba:	ee 1f       	adc	r30, r30
    40bc:	ff 1f       	adc	r31, r31
    40be:	a2 17       	cp	r26, r18
    40c0:	b3 07       	cpc	r27, r19
    40c2:	e4 07       	cpc	r30, r20
    40c4:	f5 07       	cpc	r31, r21
    40c6:	20 f0       	brcs	.+8      	; 0x40d0 <__udivmodsi4_ep>
    40c8:	a2 1b       	sub	r26, r18
    40ca:	b3 0b       	sbc	r27, r19
    40cc:	e4 0b       	sbc	r30, r20
    40ce:	f5 0b       	sbc	r31, r21

000040d0 <__udivmodsi4_ep>:
    40d0:	66 1f       	adc	r22, r22
    40d2:	77 1f       	adc	r23, r23
    40d4:	88 1f       	adc	r24, r24
    40d6:	99 1f       	adc	r25, r25
    40d8:	1a 94       	dec	r1
    40da:	69 f7       	brne	.-38     	; 0x40b6 <__udivmodsi4_loop>
    40dc:	60 95       	com	r22
    40de:	70 95       	com	r23
    40e0:	80 95       	com	r24
    40e2:	90 95       	com	r25
    40e4:	9b 01       	movw	r18, r22
    40e6:	ac 01       	movw	r20, r24
    40e8:	bd 01       	movw	r22, r26
    40ea:	cf 01       	movw	r24, r30
    40ec:	08 95       	ret

000040ee <__prologue_saves__>:
    40ee:	2f 92       	push	r2
    40f0:	3f 92       	push	r3
    40f2:	4f 92       	push	r4
    40f4:	5f 92       	push	r5
    40f6:	6f 92       	push	r6
    40f8:	7f 92       	push	r7
    40fa:	8f 92       	push	r8
    40fc:	9f 92       	push	r9
    40fe:	af 92       	push	r10
    4100:	bf 92       	push	r11
    4102:	cf 92       	push	r12
    4104:	df 92       	push	r13
    4106:	ef 92       	push	r14
    4108:	ff 92       	push	r15
    410a:	0f 93       	push	r16
    410c:	1f 93       	push	r17
    410e:	cf 93       	push	r28
    4110:	df 93       	push	r29
    4112:	cd b7       	in	r28, 0x3d	; 61
    4114:	de b7       	in	r29, 0x3e	; 62
    4116:	ca 1b       	sub	r28, r26
    4118:	db 0b       	sbc	r29, r27
    411a:	0f b6       	in	r0, 0x3f	; 63
    411c:	f8 94       	cli
    411e:	de bf       	out	0x3e, r29	; 62
    4120:	0f be       	out	0x3f, r0	; 63
    4122:	cd bf       	out	0x3d, r28	; 61
    4124:	09 94       	ijmp

00004126 <__epilogue_restores__>:
    4126:	2a 88       	ldd	r2, Y+18	; 0x12
    4128:	39 88       	ldd	r3, Y+17	; 0x11
    412a:	48 88       	ldd	r4, Y+16	; 0x10
    412c:	5f 84       	ldd	r5, Y+15	; 0x0f
    412e:	6e 84       	ldd	r6, Y+14	; 0x0e
    4130:	7d 84       	ldd	r7, Y+13	; 0x0d
    4132:	8c 84       	ldd	r8, Y+12	; 0x0c
    4134:	9b 84       	ldd	r9, Y+11	; 0x0b
    4136:	aa 84       	ldd	r10, Y+10	; 0x0a
    4138:	b9 84       	ldd	r11, Y+9	; 0x09
    413a:	c8 84       	ldd	r12, Y+8	; 0x08
    413c:	df 80       	ldd	r13, Y+7	; 0x07
    413e:	ee 80       	ldd	r14, Y+6	; 0x06
    4140:	fd 80       	ldd	r15, Y+5	; 0x05
    4142:	0c 81       	ldd	r16, Y+4	; 0x04
    4144:	1b 81       	ldd	r17, Y+3	; 0x03
    4146:	aa 81       	ldd	r26, Y+2	; 0x02
    4148:	b9 81       	ldd	r27, Y+1	; 0x01
    414a:	ce 0f       	add	r28, r30
    414c:	d1 1d       	adc	r29, r1
    414e:	0f b6       	in	r0, 0x3f	; 63
    4150:	f8 94       	cli
    4152:	de bf       	out	0x3e, r29	; 62
    4154:	0f be       	out	0x3f, r0	; 63
    4156:	cd bf       	out	0x3d, r28	; 61
    4158:	ed 01       	movw	r28, r26
    415a:	08 95       	ret

0000415c <_exit>:
    415c:	f8 94       	cli

0000415e <__stop_program>:
    415e:	ff cf       	rjmp	.-2      	; 0x415e <__stop_program>
